import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { WorkSpacesWebServiceException as __BaseException } from "./WorkSpacesWebServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.retryAfterSeconds = opts.retryAfterSeconds;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
        this.serviceCode = opts.serviceCode;
        this.quotaCode = opts.quotaCode;
        this.retryAfterSeconds = opts.retryAfterSeconds;
    }
}
export const ValidationExceptionReason = {
    CANNOT_PARSE: "cannotParse",
    FIELD_VALIDATION_FAILED: "fieldValidationFailed",
    OTHER: "other",
    UNKNOWN_OPERATION: "unknownOperation",
};
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.reason = opts.reason;
        this.fieldList = opts.fieldList;
    }
}
export const AuthenticationType = {
    IAM_IDENTITY_CENTER: "IAM_Identity_Center",
    STANDARD: "Standard",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceType = opts.resourceType;
        this.serviceCode = opts.serviceCode;
        this.quotaCode = opts.quotaCode;
    }
}
export const IdentityProviderType = {
    Facebook: "Facebook",
    Google: "Google",
    LoginWithAmazon: "LoginWithAmazon",
    OIDC: "OIDC",
    SAML: "SAML",
    SignInWithApple: "SignInWithApple",
};
export const BrowserType = {
    CHROME: "Chrome",
};
export const _InstanceType = {
    STANDARD_LARGE: "standard.large",
    STANDARD_REGULAR: "standard.regular",
    STANDARD_XLARGE: "standard.xlarge",
};
export const PortalStatus = {
    ACTIVE: "Active",
    INCOMPLETE: "Incomplete",
    PENDING: "Pending",
};
export const RendererType = {
    APPSTREAM: "AppStream",
};
export class TooManyTagsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyTagsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyTagsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyTagsException.prototype);
        this.resourceName = opts.resourceName;
    }
}
export const EnabledType = {
    DISABLED: "Disabled",
    ENABLED: "Enabled",
};
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && { Key: SENSITIVE_STRING }),
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const CreateBrowserSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
    ...(obj.browserPolicy && { browserPolicy: SENSITIVE_STRING }),
});
export const BrowserSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.browserPolicy && { browserPolicy: SENSITIVE_STRING }),
});
export const GetBrowserSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.browserSettings && { browserSettings: BrowserSettingsFilterSensitiveLog(obj.browserSettings) }),
});
export const UpdateBrowserSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.browserPolicy && { browserPolicy: SENSITIVE_STRING }),
});
export const UpdateBrowserSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.browserSettings && { browserSettings: BrowserSettingsFilterSensitiveLog(obj.browserSettings) }),
});
export const CreateIdentityProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProviderName && { identityProviderName: SENSITIVE_STRING }),
    ...(obj.identityProviderDetails && { identityProviderDetails: SENSITIVE_STRING }),
});
export const IdentityProviderFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProviderName && { identityProviderName: SENSITIVE_STRING }),
    ...(obj.identityProviderDetails && { identityProviderDetails: SENSITIVE_STRING }),
});
export const GetIdentityProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProvider && { identityProvider: IdentityProviderFilterSensitiveLog(obj.identityProvider) }),
});
export const IdentityProviderSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProviderName && { identityProviderName: SENSITIVE_STRING }),
});
export const ListIdentityProvidersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProviders && {
        identityProviders: obj.identityProviders.map((item) => IdentityProviderSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateIdentityProviderRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProviderName && { identityProviderName: SENSITIVE_STRING }),
    ...(obj.identityProviderDetails && { identityProviderDetails: SENSITIVE_STRING }),
});
export const UpdateIdentityProviderResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.identityProvider && { identityProvider: IdentityProviderFilterSensitiveLog(obj.identityProvider) }),
});
export const IpRuleFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ipRange && { ipRange: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const CreateIpAccessSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.tags && { tags: SENSITIVE_STRING }),
    ...(obj.ipRules && { ipRules: SENSITIVE_STRING }),
});
export const IpAccessSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ipRules && { ipRules: SENSITIVE_STRING }),
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const GetIpAccessSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ipAccessSettings && { ipAccessSettings: IpAccessSettingsFilterSensitiveLog(obj.ipAccessSettings) }),
});
export const IpAccessSettingsSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const ListIpAccessSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ipAccessSettings && {
        ipAccessSettings: obj.ipAccessSettings.map((item) => IpAccessSettingsSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateIpAccessSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.ipRules && { ipRules: SENSITIVE_STRING }),
});
export const UpdateIpAccessSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ipAccessSettings && { ipAccessSettings: IpAccessSettingsFilterSensitiveLog(obj.ipAccessSettings) }),
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateNetworkSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreatePortalRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const PortalFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
});
export const GetPortalResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.portal && { portal: PortalFilterSensitiveLog(obj.portal) }),
});
export const PortalSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
});
export const ListPortalsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.portals && { portals: obj.portals.map((item) => PortalSummaryFilterSensitiveLog(item)) }),
});
export const UpdatePortalRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.displayName && { displayName: SENSITIVE_STRING }),
});
export const UpdatePortalResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.portal && { portal: PortalFilterSensitiveLog(obj.portal) }),
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CreateTrustStoreRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tagKeys && { tagKeys: SENSITIVE_STRING }),
});
export const CreateUserAccessLoggingSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const CookieSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.domain && { domain: SENSITIVE_STRING }),
    ...(obj.name && { name: SENSITIVE_STRING }),
    ...(obj.path && { path: SENSITIVE_STRING }),
});
export const CookieSynchronizationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.allowlist && { allowlist: obj.allowlist.map((item) => CookieSpecificationFilterSensitiveLog(item)) }),
    ...(obj.blocklist && { blocklist: obj.blocklist.map((item) => CookieSpecificationFilterSensitiveLog(item)) }),
});
export const CreateUserSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.tags && { tags: SENSITIVE_STRING }),
    ...(obj.cookieSynchronizationConfiguration && { cookieSynchronizationConfiguration: SENSITIVE_STRING }),
});
export const UserSettingsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.cookieSynchronizationConfiguration && { cookieSynchronizationConfiguration: SENSITIVE_STRING }),
});
export const GetUserSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.userSettings && { userSettings: UserSettingsFilterSensitiveLog(obj.userSettings) }),
});
export const UserSettingsSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.cookieSynchronizationConfiguration && { cookieSynchronizationConfiguration: SENSITIVE_STRING }),
});
export const ListUserSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.userSettings && {
        userSettings: obj.userSettings.map((item) => UserSettingsSummaryFilterSensitiveLog(item)),
    }),
});
export const UpdateUserSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.cookieSynchronizationConfiguration && { cookieSynchronizationConfiguration: SENSITIVE_STRING }),
});
export const UpdateUserSettingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.userSettings && { userSettings: UserSettingsFilterSensitiveLog(obj.userSettings) }),
});
