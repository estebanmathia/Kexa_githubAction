import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { HealthLakeServiceException as __BaseException } from "./HealthLakeServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare const AuthorizationStrategy: {
  readonly AWS_AUTH: "AWS_AUTH";
  readonly SMARTV1: "SMART_ON_FHIR_V1";
};
export type AuthorizationStrategy =
  (typeof AuthorizationStrategy)[keyof typeof AuthorizationStrategy];
export declare const CmkType: {
  readonly AO_CMK: "AWS_OWNED_KMS_KEY";
  readonly CM_CMK: "CUSTOMER_MANAGED_KMS_KEY";
};
export type CmkType = (typeof CmkType)[keyof typeof CmkType];
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const FHIRVersion: {
  readonly R4: "R4";
};
export type FHIRVersion = (typeof FHIRVersion)[keyof typeof FHIRVersion];
export interface IdentityProviderConfiguration {
  AuthorizationStrategy: AuthorizationStrategy | undefined;
  FineGrainedAuthorizationEnabled?: boolean;
  Metadata?: string;
  IdpLambdaArn?: string;
}
export declare const PreloadDataType: {
  readonly SYNTHEA: "SYNTHEA";
};
export type PreloadDataType =
  (typeof PreloadDataType)[keyof typeof PreloadDataType];
export interface PreloadDataConfig {
  PreloadDataType: PreloadDataType | undefined;
}
export interface KmsEncryptionConfig {
  CmkType: CmkType | undefined;
  KmsKeyId?: string;
}
export interface SseConfiguration {
  KmsEncryptionConfig: KmsEncryptionConfig | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateFHIRDatastoreRequest {
  DatastoreName?: string;
  DatastoreTypeVersion: FHIRVersion | undefined;
  SseConfiguration?: SseConfiguration;
  PreloadDataConfig?: PreloadDataConfig;
  ClientToken?: string;
  Tags?: Tag[];
  IdentityProviderConfiguration?: IdentityProviderConfiguration;
}
export declare const DatastoreStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
};
export type DatastoreStatus =
  (typeof DatastoreStatus)[keyof typeof DatastoreStatus];
export interface CreateFHIRDatastoreResponse {
  DatastoreId: string | undefined;
  DatastoreArn: string | undefined;
  DatastoreStatus: DatastoreStatus | undefined;
  DatastoreEndpoint: string | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export interface DatastoreFilter {
  DatastoreName?: string;
  DatastoreStatus?: DatastoreStatus;
  CreatedBefore?: Date;
  CreatedAfter?: Date;
}
export declare const ErrorCategory: {
  readonly NON_RETRYABLE_ERROR: "NON_RETRYABLE_ERROR";
  readonly RETRYABLE_ERROR: "RETRYABLE_ERROR";
};
export type ErrorCategory = (typeof ErrorCategory)[keyof typeof ErrorCategory];
export interface ErrorCause {
  ErrorMessage?: string;
  ErrorCategory?: ErrorCategory;
}
export interface DatastoreProperties {
  DatastoreId: string | undefined;
  DatastoreArn: string | undefined;
  DatastoreName?: string;
  DatastoreStatus: DatastoreStatus | undefined;
  CreatedAt?: Date;
  DatastoreTypeVersion: FHIRVersion | undefined;
  DatastoreEndpoint: string | undefined;
  SseConfiguration?: SseConfiguration;
  PreloadDataConfig?: PreloadDataConfig;
  IdentityProviderConfiguration?: IdentityProviderConfiguration;
  ErrorCause?: ErrorCause;
}
export interface DeleteFHIRDatastoreRequest {
  DatastoreId: string | undefined;
}
export interface DeleteFHIRDatastoreResponse {
  DatastoreId: string | undefined;
  DatastoreArn: string | undefined;
  DatastoreStatus: DatastoreStatus | undefined;
  DatastoreEndpoint: string | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DescribeFHIRDatastoreRequest {
  DatastoreId: string | undefined;
}
export interface DescribeFHIRDatastoreResponse {
  DatastoreProperties: DatastoreProperties | undefined;
}
export interface DescribeFHIRExportJobRequest {
  DatastoreId: string | undefined;
  JobId: string | undefined;
}
export declare const JobStatus: {
  readonly CANCEL_COMPLETED: "CANCEL_COMPLETED";
  readonly CANCEL_FAILED: "CANCEL_FAILED";
  readonly CANCEL_IN_PROGRESS: "CANCEL_IN_PROGRESS";
  readonly CANCEL_SUBMITTED: "CANCEL_SUBMITTED";
  readonly COMPLETED: "COMPLETED";
  readonly COMPLETED_WITH_ERRORS: "COMPLETED_WITH_ERRORS";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUBMITTED: "SUBMITTED";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface S3Configuration {
  S3Uri: string | undefined;
  KmsKeyId: string | undefined;
}
export type OutputDataConfig =
  | OutputDataConfig.S3ConfigurationMember
  | OutputDataConfig.$UnknownMember;
export declare namespace OutputDataConfig {
  interface S3ConfigurationMember {
    S3Configuration: S3Configuration;
    $unknown?: never;
  }
  interface $UnknownMember {
    S3Configuration?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    S3Configuration: (value: S3Configuration) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: OutputDataConfig, visitor: Visitor<T>) => T;
}
export interface ExportJobProperties {
  JobId: string | undefined;
  JobName?: string;
  JobStatus: JobStatus | undefined;
  SubmitTime: Date | undefined;
  EndTime?: Date;
  DatastoreId: string | undefined;
  OutputDataConfig: OutputDataConfig | undefined;
  DataAccessRoleArn?: string;
  Message?: string;
}
export interface DescribeFHIRExportJobResponse {
  ExportJobProperties: ExportJobProperties | undefined;
}
export interface DescribeFHIRImportJobRequest {
  DatastoreId: string | undefined;
  JobId: string | undefined;
}
export type InputDataConfig =
  | InputDataConfig.S3UriMember
  | InputDataConfig.$UnknownMember;
export declare namespace InputDataConfig {
  interface S3UriMember {
    S3Uri: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    S3Uri?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    S3Uri: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: InputDataConfig, visitor: Visitor<T>) => T;
}
export interface JobProgressReport {
  TotalNumberOfScannedFiles?: number;
  TotalSizeOfScannedFilesInMB?: number;
  TotalNumberOfImportedFiles?: number;
  TotalNumberOfResourcesScanned?: number;
  TotalNumberOfResourcesImported?: number;
  TotalNumberOfResourcesWithCustomerError?: number;
  TotalNumberOfFilesReadWithCustomerError?: number;
  Throughput?: number;
}
export interface ImportJobProperties {
  JobId: string | undefined;
  JobName?: string;
  JobStatus: JobStatus | undefined;
  SubmitTime: Date | undefined;
  EndTime?: Date;
  DatastoreId: string | undefined;
  InputDataConfig: InputDataConfig | undefined;
  JobOutputDataConfig?: OutputDataConfig;
  JobProgressReport?: JobProgressReport;
  DataAccessRoleArn?: string;
  Message?: string;
}
export interface DescribeFHIRImportJobResponse {
  ImportJobProperties: ImportJobProperties | undefined;
}
export interface ListFHIRDatastoresRequest {
  Filter?: DatastoreFilter;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFHIRDatastoresResponse {
  DatastorePropertiesList: DatastoreProperties[] | undefined;
  NextToken?: string;
}
export interface ListFHIRExportJobsRequest {
  DatastoreId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  JobName?: string;
  JobStatus?: JobStatus;
  SubmittedBefore?: Date;
  SubmittedAfter?: Date;
}
export interface ListFHIRExportJobsResponse {
  ExportJobPropertiesList: ExportJobProperties[] | undefined;
  NextToken?: string;
}
export interface ListFHIRImportJobsRequest {
  DatastoreId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  JobName?: string;
  JobStatus?: JobStatus;
  SubmittedBefore?: Date;
  SubmittedAfter?: Date;
}
export interface ListFHIRImportJobsResponse {
  ImportJobPropertiesList: ImportJobProperties[] | undefined;
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface StartFHIRExportJobRequest {
  JobName?: string;
  OutputDataConfig: OutputDataConfig | undefined;
  DatastoreId: string | undefined;
  DataAccessRoleArn: string | undefined;
  ClientToken?: string;
}
export interface StartFHIRExportJobResponse {
  JobId: string | undefined;
  JobStatus: JobStatus | undefined;
  DatastoreId?: string;
}
export interface StartFHIRImportJobRequest {
  JobName?: string;
  InputDataConfig: InputDataConfig | undefined;
  JobOutputDataConfig: OutputDataConfig | undefined;
  DatastoreId: string | undefined;
  DataAccessRoleArn: string | undefined;
  ClientToken?: string;
}
export interface StartFHIRImportJobResponse {
  JobId: string | undefined;
  JobStatus: JobStatus | undefined;
  DatastoreId?: string;
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
