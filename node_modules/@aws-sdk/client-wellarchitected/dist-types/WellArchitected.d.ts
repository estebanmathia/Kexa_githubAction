import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { AssociateLensesCommandInput, AssociateLensesCommandOutput } from "./commands/AssociateLensesCommand";
import { AssociateProfilesCommandInput, AssociateProfilesCommandOutput } from "./commands/AssociateProfilesCommand";
import { CreateLensShareCommandInput, CreateLensShareCommandOutput } from "./commands/CreateLensShareCommand";
import { CreateLensVersionCommandInput, CreateLensVersionCommandOutput } from "./commands/CreateLensVersionCommand";
import { CreateMilestoneCommandInput, CreateMilestoneCommandOutput } from "./commands/CreateMilestoneCommand";
import { CreateProfileCommandInput, CreateProfileCommandOutput } from "./commands/CreateProfileCommand";
import { CreateProfileShareCommandInput, CreateProfileShareCommandOutput } from "./commands/CreateProfileShareCommand";
import { CreateReviewTemplateCommandInput, CreateReviewTemplateCommandOutput } from "./commands/CreateReviewTemplateCommand";
import { CreateTemplateShareCommandInput, CreateTemplateShareCommandOutput } from "./commands/CreateTemplateShareCommand";
import { CreateWorkloadCommandInput, CreateWorkloadCommandOutput } from "./commands/CreateWorkloadCommand";
import { CreateWorkloadShareCommandInput, CreateWorkloadShareCommandOutput } from "./commands/CreateWorkloadShareCommand";
import { DeleteLensCommandInput, DeleteLensCommandOutput } from "./commands/DeleteLensCommand";
import { DeleteLensShareCommandInput, DeleteLensShareCommandOutput } from "./commands/DeleteLensShareCommand";
import { DeleteProfileCommandInput, DeleteProfileCommandOutput } from "./commands/DeleteProfileCommand";
import { DeleteProfileShareCommandInput, DeleteProfileShareCommandOutput } from "./commands/DeleteProfileShareCommand";
import { DeleteReviewTemplateCommandInput, DeleteReviewTemplateCommandOutput } from "./commands/DeleteReviewTemplateCommand";
import { DeleteTemplateShareCommandInput, DeleteTemplateShareCommandOutput } from "./commands/DeleteTemplateShareCommand";
import { DeleteWorkloadCommandInput, DeleteWorkloadCommandOutput } from "./commands/DeleteWorkloadCommand";
import { DeleteWorkloadShareCommandInput, DeleteWorkloadShareCommandOutput } from "./commands/DeleteWorkloadShareCommand";
import { DisassociateLensesCommandInput, DisassociateLensesCommandOutput } from "./commands/DisassociateLensesCommand";
import { DisassociateProfilesCommandInput, DisassociateProfilesCommandOutput } from "./commands/DisassociateProfilesCommand";
import { ExportLensCommandInput, ExportLensCommandOutput } from "./commands/ExportLensCommand";
import { GetAnswerCommandInput, GetAnswerCommandOutput } from "./commands/GetAnswerCommand";
import { GetConsolidatedReportCommandInput, GetConsolidatedReportCommandOutput } from "./commands/GetConsolidatedReportCommand";
import { GetGlobalSettingsCommandInput, GetGlobalSettingsCommandOutput } from "./commands/GetGlobalSettingsCommand";
import { GetLensCommandInput, GetLensCommandOutput } from "./commands/GetLensCommand";
import { GetLensReviewCommandInput, GetLensReviewCommandOutput } from "./commands/GetLensReviewCommand";
import { GetLensReviewReportCommandInput, GetLensReviewReportCommandOutput } from "./commands/GetLensReviewReportCommand";
import { GetLensVersionDifferenceCommandInput, GetLensVersionDifferenceCommandOutput } from "./commands/GetLensVersionDifferenceCommand";
import { GetMilestoneCommandInput, GetMilestoneCommandOutput } from "./commands/GetMilestoneCommand";
import { GetProfileCommandInput, GetProfileCommandOutput } from "./commands/GetProfileCommand";
import { GetProfileTemplateCommandInput, GetProfileTemplateCommandOutput } from "./commands/GetProfileTemplateCommand";
import { GetReviewTemplateAnswerCommandInput, GetReviewTemplateAnswerCommandOutput } from "./commands/GetReviewTemplateAnswerCommand";
import { GetReviewTemplateCommandInput, GetReviewTemplateCommandOutput } from "./commands/GetReviewTemplateCommand";
import { GetReviewTemplateLensReviewCommandInput, GetReviewTemplateLensReviewCommandOutput } from "./commands/GetReviewTemplateLensReviewCommand";
import { GetWorkloadCommandInput, GetWorkloadCommandOutput } from "./commands/GetWorkloadCommand";
import { ImportLensCommandInput, ImportLensCommandOutput } from "./commands/ImportLensCommand";
import { ListAnswersCommandInput, ListAnswersCommandOutput } from "./commands/ListAnswersCommand";
import { ListCheckDetailsCommandInput, ListCheckDetailsCommandOutput } from "./commands/ListCheckDetailsCommand";
import { ListCheckSummariesCommandInput, ListCheckSummariesCommandOutput } from "./commands/ListCheckSummariesCommand";
import { ListLensesCommandInput, ListLensesCommandOutput } from "./commands/ListLensesCommand";
import { ListLensReviewImprovementsCommandInput, ListLensReviewImprovementsCommandOutput } from "./commands/ListLensReviewImprovementsCommand";
import { ListLensReviewsCommandInput, ListLensReviewsCommandOutput } from "./commands/ListLensReviewsCommand";
import { ListLensSharesCommandInput, ListLensSharesCommandOutput } from "./commands/ListLensSharesCommand";
import { ListMilestonesCommandInput, ListMilestonesCommandOutput } from "./commands/ListMilestonesCommand";
import { ListNotificationsCommandInput, ListNotificationsCommandOutput } from "./commands/ListNotificationsCommand";
import { ListProfileNotificationsCommandInput, ListProfileNotificationsCommandOutput } from "./commands/ListProfileNotificationsCommand";
import { ListProfilesCommandInput, ListProfilesCommandOutput } from "./commands/ListProfilesCommand";
import { ListProfileSharesCommandInput, ListProfileSharesCommandOutput } from "./commands/ListProfileSharesCommand";
import { ListReviewTemplateAnswersCommandInput, ListReviewTemplateAnswersCommandOutput } from "./commands/ListReviewTemplateAnswersCommand";
import { ListReviewTemplatesCommandInput, ListReviewTemplatesCommandOutput } from "./commands/ListReviewTemplatesCommand";
import { ListShareInvitationsCommandInput, ListShareInvitationsCommandOutput } from "./commands/ListShareInvitationsCommand";
import { ListTagsForResourceCommandInput, ListTagsForResourceCommandOutput } from "./commands/ListTagsForResourceCommand";
import { ListTemplateSharesCommandInput, ListTemplateSharesCommandOutput } from "./commands/ListTemplateSharesCommand";
import { ListWorkloadsCommandInput, ListWorkloadsCommandOutput } from "./commands/ListWorkloadsCommand";
import { ListWorkloadSharesCommandInput, ListWorkloadSharesCommandOutput } from "./commands/ListWorkloadSharesCommand";
import { TagResourceCommandInput, TagResourceCommandOutput } from "./commands/TagResourceCommand";
import { UntagResourceCommandInput, UntagResourceCommandOutput } from "./commands/UntagResourceCommand";
import { UpdateAnswerCommandInput, UpdateAnswerCommandOutput } from "./commands/UpdateAnswerCommand";
import { UpdateGlobalSettingsCommandInput, UpdateGlobalSettingsCommandOutput } from "./commands/UpdateGlobalSettingsCommand";
import { UpdateIntegrationCommandInput, UpdateIntegrationCommandOutput } from "./commands/UpdateIntegrationCommand";
import { UpdateLensReviewCommandInput, UpdateLensReviewCommandOutput } from "./commands/UpdateLensReviewCommand";
import { UpdateProfileCommandInput, UpdateProfileCommandOutput } from "./commands/UpdateProfileCommand";
import { UpdateReviewTemplateAnswerCommandInput, UpdateReviewTemplateAnswerCommandOutput } from "./commands/UpdateReviewTemplateAnswerCommand";
import { UpdateReviewTemplateCommandInput, UpdateReviewTemplateCommandOutput } from "./commands/UpdateReviewTemplateCommand";
import { UpdateReviewTemplateLensReviewCommandInput, UpdateReviewTemplateLensReviewCommandOutput } from "./commands/UpdateReviewTemplateLensReviewCommand";
import { UpdateShareInvitationCommandInput, UpdateShareInvitationCommandOutput } from "./commands/UpdateShareInvitationCommand";
import { UpdateWorkloadCommandInput, UpdateWorkloadCommandOutput } from "./commands/UpdateWorkloadCommand";
import { UpdateWorkloadShareCommandInput, UpdateWorkloadShareCommandOutput } from "./commands/UpdateWorkloadShareCommand";
import { UpgradeLensReviewCommandInput, UpgradeLensReviewCommandOutput } from "./commands/UpgradeLensReviewCommand";
import { UpgradeProfileVersionCommandInput, UpgradeProfileVersionCommandOutput } from "./commands/UpgradeProfileVersionCommand";
import { UpgradeReviewTemplateLensReviewCommandInput, UpgradeReviewTemplateLensReviewCommandOutput } from "./commands/UpgradeReviewTemplateLensReviewCommand";
import { WellArchitectedClient } from "./WellArchitectedClient";
export interface WellArchitected {
    /**
     * @see {@link AssociateLensesCommand}
     */
    associateLenses(args: AssociateLensesCommandInput, options?: __HttpHandlerOptions): Promise<AssociateLensesCommandOutput>;
    associateLenses(args: AssociateLensesCommandInput, cb: (err: any, data?: AssociateLensesCommandOutput) => void): void;
    associateLenses(args: AssociateLensesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateLensesCommandOutput) => void): void;
    /**
     * @see {@link AssociateProfilesCommand}
     */
    associateProfiles(args: AssociateProfilesCommandInput, options?: __HttpHandlerOptions): Promise<AssociateProfilesCommandOutput>;
    associateProfiles(args: AssociateProfilesCommandInput, cb: (err: any, data?: AssociateProfilesCommandOutput) => void): void;
    associateProfiles(args: AssociateProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: AssociateProfilesCommandOutput) => void): void;
    /**
     * @see {@link CreateLensShareCommand}
     */
    createLensShare(args: CreateLensShareCommandInput, options?: __HttpHandlerOptions): Promise<CreateLensShareCommandOutput>;
    createLensShare(args: CreateLensShareCommandInput, cb: (err: any, data?: CreateLensShareCommandOutput) => void): void;
    createLensShare(args: CreateLensShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLensShareCommandOutput) => void): void;
    /**
     * @see {@link CreateLensVersionCommand}
     */
    createLensVersion(args: CreateLensVersionCommandInput, options?: __HttpHandlerOptions): Promise<CreateLensVersionCommandOutput>;
    createLensVersion(args: CreateLensVersionCommandInput, cb: (err: any, data?: CreateLensVersionCommandOutput) => void): void;
    createLensVersion(args: CreateLensVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateLensVersionCommandOutput) => void): void;
    /**
     * @see {@link CreateMilestoneCommand}
     */
    createMilestone(args: CreateMilestoneCommandInput, options?: __HttpHandlerOptions): Promise<CreateMilestoneCommandOutput>;
    createMilestone(args: CreateMilestoneCommandInput, cb: (err: any, data?: CreateMilestoneCommandOutput) => void): void;
    createMilestone(args: CreateMilestoneCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateMilestoneCommandOutput) => void): void;
    /**
     * @see {@link CreateProfileCommand}
     */
    createProfile(args: CreateProfileCommandInput, options?: __HttpHandlerOptions): Promise<CreateProfileCommandOutput>;
    createProfile(args: CreateProfileCommandInput, cb: (err: any, data?: CreateProfileCommandOutput) => void): void;
    createProfile(args: CreateProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProfileCommandOutput) => void): void;
    /**
     * @see {@link CreateProfileShareCommand}
     */
    createProfileShare(args: CreateProfileShareCommandInput, options?: __HttpHandlerOptions): Promise<CreateProfileShareCommandOutput>;
    createProfileShare(args: CreateProfileShareCommandInput, cb: (err: any, data?: CreateProfileShareCommandOutput) => void): void;
    createProfileShare(args: CreateProfileShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateProfileShareCommandOutput) => void): void;
    /**
     * @see {@link CreateReviewTemplateCommand}
     */
    createReviewTemplate(args: CreateReviewTemplateCommandInput, options?: __HttpHandlerOptions): Promise<CreateReviewTemplateCommandOutput>;
    createReviewTemplate(args: CreateReviewTemplateCommandInput, cb: (err: any, data?: CreateReviewTemplateCommandOutput) => void): void;
    createReviewTemplate(args: CreateReviewTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateReviewTemplateCommandOutput) => void): void;
    /**
     * @see {@link CreateTemplateShareCommand}
     */
    createTemplateShare(args: CreateTemplateShareCommandInput, options?: __HttpHandlerOptions): Promise<CreateTemplateShareCommandOutput>;
    createTemplateShare(args: CreateTemplateShareCommandInput, cb: (err: any, data?: CreateTemplateShareCommandOutput) => void): void;
    createTemplateShare(args: CreateTemplateShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateTemplateShareCommandOutput) => void): void;
    /**
     * @see {@link CreateWorkloadCommand}
     */
    createWorkload(args: CreateWorkloadCommandInput, options?: __HttpHandlerOptions): Promise<CreateWorkloadCommandOutput>;
    createWorkload(args: CreateWorkloadCommandInput, cb: (err: any, data?: CreateWorkloadCommandOutput) => void): void;
    createWorkload(args: CreateWorkloadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWorkloadCommandOutput) => void): void;
    /**
     * @see {@link CreateWorkloadShareCommand}
     */
    createWorkloadShare(args: CreateWorkloadShareCommandInput, options?: __HttpHandlerOptions): Promise<CreateWorkloadShareCommandOutput>;
    createWorkloadShare(args: CreateWorkloadShareCommandInput, cb: (err: any, data?: CreateWorkloadShareCommandOutput) => void): void;
    createWorkloadShare(args: CreateWorkloadShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: CreateWorkloadShareCommandOutput) => void): void;
    /**
     * @see {@link DeleteLensCommand}
     */
    deleteLens(args: DeleteLensCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLensCommandOutput>;
    deleteLens(args: DeleteLensCommandInput, cb: (err: any, data?: DeleteLensCommandOutput) => void): void;
    deleteLens(args: DeleteLensCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLensCommandOutput) => void): void;
    /**
     * @see {@link DeleteLensShareCommand}
     */
    deleteLensShare(args: DeleteLensShareCommandInput, options?: __HttpHandlerOptions): Promise<DeleteLensShareCommandOutput>;
    deleteLensShare(args: DeleteLensShareCommandInput, cb: (err: any, data?: DeleteLensShareCommandOutput) => void): void;
    deleteLensShare(args: DeleteLensShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteLensShareCommandOutput) => void): void;
    /**
     * @see {@link DeleteProfileCommand}
     */
    deleteProfile(args: DeleteProfileCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProfileCommandOutput>;
    deleteProfile(args: DeleteProfileCommandInput, cb: (err: any, data?: DeleteProfileCommandOutput) => void): void;
    deleteProfile(args: DeleteProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProfileCommandOutput) => void): void;
    /**
     * @see {@link DeleteProfileShareCommand}
     */
    deleteProfileShare(args: DeleteProfileShareCommandInput, options?: __HttpHandlerOptions): Promise<DeleteProfileShareCommandOutput>;
    deleteProfileShare(args: DeleteProfileShareCommandInput, cb: (err: any, data?: DeleteProfileShareCommandOutput) => void): void;
    deleteProfileShare(args: DeleteProfileShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteProfileShareCommandOutput) => void): void;
    /**
     * @see {@link DeleteReviewTemplateCommand}
     */
    deleteReviewTemplate(args: DeleteReviewTemplateCommandInput, options?: __HttpHandlerOptions): Promise<DeleteReviewTemplateCommandOutput>;
    deleteReviewTemplate(args: DeleteReviewTemplateCommandInput, cb: (err: any, data?: DeleteReviewTemplateCommandOutput) => void): void;
    deleteReviewTemplate(args: DeleteReviewTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteReviewTemplateCommandOutput) => void): void;
    /**
     * @see {@link DeleteTemplateShareCommand}
     */
    deleteTemplateShare(args: DeleteTemplateShareCommandInput, options?: __HttpHandlerOptions): Promise<DeleteTemplateShareCommandOutput>;
    deleteTemplateShare(args: DeleteTemplateShareCommandInput, cb: (err: any, data?: DeleteTemplateShareCommandOutput) => void): void;
    deleteTemplateShare(args: DeleteTemplateShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteTemplateShareCommandOutput) => void): void;
    /**
     * @see {@link DeleteWorkloadCommand}
     */
    deleteWorkload(args: DeleteWorkloadCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWorkloadCommandOutput>;
    deleteWorkload(args: DeleteWorkloadCommandInput, cb: (err: any, data?: DeleteWorkloadCommandOutput) => void): void;
    deleteWorkload(args: DeleteWorkloadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWorkloadCommandOutput) => void): void;
    /**
     * @see {@link DeleteWorkloadShareCommand}
     */
    deleteWorkloadShare(args: DeleteWorkloadShareCommandInput, options?: __HttpHandlerOptions): Promise<DeleteWorkloadShareCommandOutput>;
    deleteWorkloadShare(args: DeleteWorkloadShareCommandInput, cb: (err: any, data?: DeleteWorkloadShareCommandOutput) => void): void;
    deleteWorkloadShare(args: DeleteWorkloadShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DeleteWorkloadShareCommandOutput) => void): void;
    /**
     * @see {@link DisassociateLensesCommand}
     */
    disassociateLenses(args: DisassociateLensesCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateLensesCommandOutput>;
    disassociateLenses(args: DisassociateLensesCommandInput, cb: (err: any, data?: DisassociateLensesCommandOutput) => void): void;
    disassociateLenses(args: DisassociateLensesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateLensesCommandOutput) => void): void;
    /**
     * @see {@link DisassociateProfilesCommand}
     */
    disassociateProfiles(args: DisassociateProfilesCommandInput, options?: __HttpHandlerOptions): Promise<DisassociateProfilesCommandOutput>;
    disassociateProfiles(args: DisassociateProfilesCommandInput, cb: (err: any, data?: DisassociateProfilesCommandOutput) => void): void;
    disassociateProfiles(args: DisassociateProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: DisassociateProfilesCommandOutput) => void): void;
    /**
     * @see {@link ExportLensCommand}
     */
    exportLens(args: ExportLensCommandInput, options?: __HttpHandlerOptions): Promise<ExportLensCommandOutput>;
    exportLens(args: ExportLensCommandInput, cb: (err: any, data?: ExportLensCommandOutput) => void): void;
    exportLens(args: ExportLensCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ExportLensCommandOutput) => void): void;
    /**
     * @see {@link GetAnswerCommand}
     */
    getAnswer(args: GetAnswerCommandInput, options?: __HttpHandlerOptions): Promise<GetAnswerCommandOutput>;
    getAnswer(args: GetAnswerCommandInput, cb: (err: any, data?: GetAnswerCommandOutput) => void): void;
    getAnswer(args: GetAnswerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetAnswerCommandOutput) => void): void;
    /**
     * @see {@link GetConsolidatedReportCommand}
     */
    getConsolidatedReport(args: GetConsolidatedReportCommandInput, options?: __HttpHandlerOptions): Promise<GetConsolidatedReportCommandOutput>;
    getConsolidatedReport(args: GetConsolidatedReportCommandInput, cb: (err: any, data?: GetConsolidatedReportCommandOutput) => void): void;
    getConsolidatedReport(args: GetConsolidatedReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetConsolidatedReportCommandOutput) => void): void;
    /**
     * @see {@link GetGlobalSettingsCommand}
     */
    getGlobalSettings(): Promise<GetGlobalSettingsCommandOutput>;
    getGlobalSettings(args: GetGlobalSettingsCommandInput, options?: __HttpHandlerOptions): Promise<GetGlobalSettingsCommandOutput>;
    getGlobalSettings(args: GetGlobalSettingsCommandInput, cb: (err: any, data?: GetGlobalSettingsCommandOutput) => void): void;
    getGlobalSettings(args: GetGlobalSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetGlobalSettingsCommandOutput) => void): void;
    /**
     * @see {@link GetLensCommand}
     */
    getLens(args: GetLensCommandInput, options?: __HttpHandlerOptions): Promise<GetLensCommandOutput>;
    getLens(args: GetLensCommandInput, cb: (err: any, data?: GetLensCommandOutput) => void): void;
    getLens(args: GetLensCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLensCommandOutput) => void): void;
    /**
     * @see {@link GetLensReviewCommand}
     */
    getLensReview(args: GetLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<GetLensReviewCommandOutput>;
    getLensReview(args: GetLensReviewCommandInput, cb: (err: any, data?: GetLensReviewCommandOutput) => void): void;
    getLensReview(args: GetLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLensReviewCommandOutput) => void): void;
    /**
     * @see {@link GetLensReviewReportCommand}
     */
    getLensReviewReport(args: GetLensReviewReportCommandInput, options?: __HttpHandlerOptions): Promise<GetLensReviewReportCommandOutput>;
    getLensReviewReport(args: GetLensReviewReportCommandInput, cb: (err: any, data?: GetLensReviewReportCommandOutput) => void): void;
    getLensReviewReport(args: GetLensReviewReportCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLensReviewReportCommandOutput) => void): void;
    /**
     * @see {@link GetLensVersionDifferenceCommand}
     */
    getLensVersionDifference(args: GetLensVersionDifferenceCommandInput, options?: __HttpHandlerOptions): Promise<GetLensVersionDifferenceCommandOutput>;
    getLensVersionDifference(args: GetLensVersionDifferenceCommandInput, cb: (err: any, data?: GetLensVersionDifferenceCommandOutput) => void): void;
    getLensVersionDifference(args: GetLensVersionDifferenceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetLensVersionDifferenceCommandOutput) => void): void;
    /**
     * @see {@link GetMilestoneCommand}
     */
    getMilestone(args: GetMilestoneCommandInput, options?: __HttpHandlerOptions): Promise<GetMilestoneCommandOutput>;
    getMilestone(args: GetMilestoneCommandInput, cb: (err: any, data?: GetMilestoneCommandOutput) => void): void;
    getMilestone(args: GetMilestoneCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetMilestoneCommandOutput) => void): void;
    /**
     * @see {@link GetProfileCommand}
     */
    getProfile(args: GetProfileCommandInput, options?: __HttpHandlerOptions): Promise<GetProfileCommandOutput>;
    getProfile(args: GetProfileCommandInput, cb: (err: any, data?: GetProfileCommandOutput) => void): void;
    getProfile(args: GetProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetProfileCommandOutput) => void): void;
    /**
     * @see {@link GetProfileTemplateCommand}
     */
    getProfileTemplate(): Promise<GetProfileTemplateCommandOutput>;
    getProfileTemplate(args: GetProfileTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetProfileTemplateCommandOutput>;
    getProfileTemplate(args: GetProfileTemplateCommandInput, cb: (err: any, data?: GetProfileTemplateCommandOutput) => void): void;
    getProfileTemplate(args: GetProfileTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetProfileTemplateCommandOutput) => void): void;
    /**
     * @see {@link GetReviewTemplateCommand}
     */
    getReviewTemplate(args: GetReviewTemplateCommandInput, options?: __HttpHandlerOptions): Promise<GetReviewTemplateCommandOutput>;
    getReviewTemplate(args: GetReviewTemplateCommandInput, cb: (err: any, data?: GetReviewTemplateCommandOutput) => void): void;
    getReviewTemplate(args: GetReviewTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetReviewTemplateCommandOutput) => void): void;
    /**
     * @see {@link GetReviewTemplateAnswerCommand}
     */
    getReviewTemplateAnswer(args: GetReviewTemplateAnswerCommandInput, options?: __HttpHandlerOptions): Promise<GetReviewTemplateAnswerCommandOutput>;
    getReviewTemplateAnswer(args: GetReviewTemplateAnswerCommandInput, cb: (err: any, data?: GetReviewTemplateAnswerCommandOutput) => void): void;
    getReviewTemplateAnswer(args: GetReviewTemplateAnswerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetReviewTemplateAnswerCommandOutput) => void): void;
    /**
     * @see {@link GetReviewTemplateLensReviewCommand}
     */
    getReviewTemplateLensReview(args: GetReviewTemplateLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<GetReviewTemplateLensReviewCommandOutput>;
    getReviewTemplateLensReview(args: GetReviewTemplateLensReviewCommandInput, cb: (err: any, data?: GetReviewTemplateLensReviewCommandOutput) => void): void;
    getReviewTemplateLensReview(args: GetReviewTemplateLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetReviewTemplateLensReviewCommandOutput) => void): void;
    /**
     * @see {@link GetWorkloadCommand}
     */
    getWorkload(args: GetWorkloadCommandInput, options?: __HttpHandlerOptions): Promise<GetWorkloadCommandOutput>;
    getWorkload(args: GetWorkloadCommandInput, cb: (err: any, data?: GetWorkloadCommandOutput) => void): void;
    getWorkload(args: GetWorkloadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: GetWorkloadCommandOutput) => void): void;
    /**
     * @see {@link ImportLensCommand}
     */
    importLens(args: ImportLensCommandInput, options?: __HttpHandlerOptions): Promise<ImportLensCommandOutput>;
    importLens(args: ImportLensCommandInput, cb: (err: any, data?: ImportLensCommandOutput) => void): void;
    importLens(args: ImportLensCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ImportLensCommandOutput) => void): void;
    /**
     * @see {@link ListAnswersCommand}
     */
    listAnswers(args: ListAnswersCommandInput, options?: __HttpHandlerOptions): Promise<ListAnswersCommandOutput>;
    listAnswers(args: ListAnswersCommandInput, cb: (err: any, data?: ListAnswersCommandOutput) => void): void;
    listAnswers(args: ListAnswersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListAnswersCommandOutput) => void): void;
    /**
     * @see {@link ListCheckDetailsCommand}
     */
    listCheckDetails(args: ListCheckDetailsCommandInput, options?: __HttpHandlerOptions): Promise<ListCheckDetailsCommandOutput>;
    listCheckDetails(args: ListCheckDetailsCommandInput, cb: (err: any, data?: ListCheckDetailsCommandOutput) => void): void;
    listCheckDetails(args: ListCheckDetailsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCheckDetailsCommandOutput) => void): void;
    /**
     * @see {@link ListCheckSummariesCommand}
     */
    listCheckSummaries(args: ListCheckSummariesCommandInput, options?: __HttpHandlerOptions): Promise<ListCheckSummariesCommandOutput>;
    listCheckSummaries(args: ListCheckSummariesCommandInput, cb: (err: any, data?: ListCheckSummariesCommandOutput) => void): void;
    listCheckSummaries(args: ListCheckSummariesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListCheckSummariesCommandOutput) => void): void;
    /**
     * @see {@link ListLensesCommand}
     */
    listLenses(): Promise<ListLensesCommandOutput>;
    listLenses(args: ListLensesCommandInput, options?: __HttpHandlerOptions): Promise<ListLensesCommandOutput>;
    listLenses(args: ListLensesCommandInput, cb: (err: any, data?: ListLensesCommandOutput) => void): void;
    listLenses(args: ListLensesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLensesCommandOutput) => void): void;
    /**
     * @see {@link ListLensReviewImprovementsCommand}
     */
    listLensReviewImprovements(args: ListLensReviewImprovementsCommandInput, options?: __HttpHandlerOptions): Promise<ListLensReviewImprovementsCommandOutput>;
    listLensReviewImprovements(args: ListLensReviewImprovementsCommandInput, cb: (err: any, data?: ListLensReviewImprovementsCommandOutput) => void): void;
    listLensReviewImprovements(args: ListLensReviewImprovementsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLensReviewImprovementsCommandOutput) => void): void;
    /**
     * @see {@link ListLensReviewsCommand}
     */
    listLensReviews(args: ListLensReviewsCommandInput, options?: __HttpHandlerOptions): Promise<ListLensReviewsCommandOutput>;
    listLensReviews(args: ListLensReviewsCommandInput, cb: (err: any, data?: ListLensReviewsCommandOutput) => void): void;
    listLensReviews(args: ListLensReviewsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLensReviewsCommandOutput) => void): void;
    /**
     * @see {@link ListLensSharesCommand}
     */
    listLensShares(args: ListLensSharesCommandInput, options?: __HttpHandlerOptions): Promise<ListLensSharesCommandOutput>;
    listLensShares(args: ListLensSharesCommandInput, cb: (err: any, data?: ListLensSharesCommandOutput) => void): void;
    listLensShares(args: ListLensSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListLensSharesCommandOutput) => void): void;
    /**
     * @see {@link ListMilestonesCommand}
     */
    listMilestones(args: ListMilestonesCommandInput, options?: __HttpHandlerOptions): Promise<ListMilestonesCommandOutput>;
    listMilestones(args: ListMilestonesCommandInput, cb: (err: any, data?: ListMilestonesCommandOutput) => void): void;
    listMilestones(args: ListMilestonesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListMilestonesCommandOutput) => void): void;
    /**
     * @see {@link ListNotificationsCommand}
     */
    listNotifications(): Promise<ListNotificationsCommandOutput>;
    listNotifications(args: ListNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<ListNotificationsCommandOutput>;
    listNotifications(args: ListNotificationsCommandInput, cb: (err: any, data?: ListNotificationsCommandOutput) => void): void;
    listNotifications(args: ListNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListNotificationsCommandOutput) => void): void;
    /**
     * @see {@link ListProfileNotificationsCommand}
     */
    listProfileNotifications(): Promise<ListProfileNotificationsCommandOutput>;
    listProfileNotifications(args: ListProfileNotificationsCommandInput, options?: __HttpHandlerOptions): Promise<ListProfileNotificationsCommandOutput>;
    listProfileNotifications(args: ListProfileNotificationsCommandInput, cb: (err: any, data?: ListProfileNotificationsCommandOutput) => void): void;
    listProfileNotifications(args: ListProfileNotificationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProfileNotificationsCommandOutput) => void): void;
    /**
     * @see {@link ListProfilesCommand}
     */
    listProfiles(): Promise<ListProfilesCommandOutput>;
    listProfiles(args: ListProfilesCommandInput, options?: __HttpHandlerOptions): Promise<ListProfilesCommandOutput>;
    listProfiles(args: ListProfilesCommandInput, cb: (err: any, data?: ListProfilesCommandOutput) => void): void;
    listProfiles(args: ListProfilesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProfilesCommandOutput) => void): void;
    /**
     * @see {@link ListProfileSharesCommand}
     */
    listProfileShares(args: ListProfileSharesCommandInput, options?: __HttpHandlerOptions): Promise<ListProfileSharesCommandOutput>;
    listProfileShares(args: ListProfileSharesCommandInput, cb: (err: any, data?: ListProfileSharesCommandOutput) => void): void;
    listProfileShares(args: ListProfileSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListProfileSharesCommandOutput) => void): void;
    /**
     * @see {@link ListReviewTemplateAnswersCommand}
     */
    listReviewTemplateAnswers(args: ListReviewTemplateAnswersCommandInput, options?: __HttpHandlerOptions): Promise<ListReviewTemplateAnswersCommandOutput>;
    listReviewTemplateAnswers(args: ListReviewTemplateAnswersCommandInput, cb: (err: any, data?: ListReviewTemplateAnswersCommandOutput) => void): void;
    listReviewTemplateAnswers(args: ListReviewTemplateAnswersCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListReviewTemplateAnswersCommandOutput) => void): void;
    /**
     * @see {@link ListReviewTemplatesCommand}
     */
    listReviewTemplates(): Promise<ListReviewTemplatesCommandOutput>;
    listReviewTemplates(args: ListReviewTemplatesCommandInput, options?: __HttpHandlerOptions): Promise<ListReviewTemplatesCommandOutput>;
    listReviewTemplates(args: ListReviewTemplatesCommandInput, cb: (err: any, data?: ListReviewTemplatesCommandOutput) => void): void;
    listReviewTemplates(args: ListReviewTemplatesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListReviewTemplatesCommandOutput) => void): void;
    /**
     * @see {@link ListShareInvitationsCommand}
     */
    listShareInvitations(): Promise<ListShareInvitationsCommandOutput>;
    listShareInvitations(args: ListShareInvitationsCommandInput, options?: __HttpHandlerOptions): Promise<ListShareInvitationsCommandOutput>;
    listShareInvitations(args: ListShareInvitationsCommandInput, cb: (err: any, data?: ListShareInvitationsCommandOutput) => void): void;
    listShareInvitations(args: ListShareInvitationsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListShareInvitationsCommandOutput) => void): void;
    /**
     * @see {@link ListTagsForResourceCommand}
     */
    listTagsForResource(args: ListTagsForResourceCommandInput, options?: __HttpHandlerOptions): Promise<ListTagsForResourceCommandOutput>;
    listTagsForResource(args: ListTagsForResourceCommandInput, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    listTagsForResource(args: ListTagsForResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTagsForResourceCommandOutput) => void): void;
    /**
     * @see {@link ListTemplateSharesCommand}
     */
    listTemplateShares(args: ListTemplateSharesCommandInput, options?: __HttpHandlerOptions): Promise<ListTemplateSharesCommandOutput>;
    listTemplateShares(args: ListTemplateSharesCommandInput, cb: (err: any, data?: ListTemplateSharesCommandOutput) => void): void;
    listTemplateShares(args: ListTemplateSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListTemplateSharesCommandOutput) => void): void;
    /**
     * @see {@link ListWorkloadsCommand}
     */
    listWorkloads(): Promise<ListWorkloadsCommandOutput>;
    listWorkloads(args: ListWorkloadsCommandInput, options?: __HttpHandlerOptions): Promise<ListWorkloadsCommandOutput>;
    listWorkloads(args: ListWorkloadsCommandInput, cb: (err: any, data?: ListWorkloadsCommandOutput) => void): void;
    listWorkloads(args: ListWorkloadsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWorkloadsCommandOutput) => void): void;
    /**
     * @see {@link ListWorkloadSharesCommand}
     */
    listWorkloadShares(args: ListWorkloadSharesCommandInput, options?: __HttpHandlerOptions): Promise<ListWorkloadSharesCommandOutput>;
    listWorkloadShares(args: ListWorkloadSharesCommandInput, cb: (err: any, data?: ListWorkloadSharesCommandOutput) => void): void;
    listWorkloadShares(args: ListWorkloadSharesCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: ListWorkloadSharesCommandOutput) => void): void;
    /**
     * @see {@link TagResourceCommand}
     */
    tagResource(args: TagResourceCommandInput, options?: __HttpHandlerOptions): Promise<TagResourceCommandOutput>;
    tagResource(args: TagResourceCommandInput, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    tagResource(args: TagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: TagResourceCommandOutput) => void): void;
    /**
     * @see {@link UntagResourceCommand}
     */
    untagResource(args: UntagResourceCommandInput, options?: __HttpHandlerOptions): Promise<UntagResourceCommandOutput>;
    untagResource(args: UntagResourceCommandInput, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    untagResource(args: UntagResourceCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UntagResourceCommandOutput) => void): void;
    /**
     * @see {@link UpdateAnswerCommand}
     */
    updateAnswer(args: UpdateAnswerCommandInput, options?: __HttpHandlerOptions): Promise<UpdateAnswerCommandOutput>;
    updateAnswer(args: UpdateAnswerCommandInput, cb: (err: any, data?: UpdateAnswerCommandOutput) => void): void;
    updateAnswer(args: UpdateAnswerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateAnswerCommandOutput) => void): void;
    /**
     * @see {@link UpdateGlobalSettingsCommand}
     */
    updateGlobalSettings(): Promise<UpdateGlobalSettingsCommandOutput>;
    updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, options?: __HttpHandlerOptions): Promise<UpdateGlobalSettingsCommandOutput>;
    updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, cb: (err: any, data?: UpdateGlobalSettingsCommandOutput) => void): void;
    updateGlobalSettings(args: UpdateGlobalSettingsCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateGlobalSettingsCommandOutput) => void): void;
    /**
     * @see {@link UpdateIntegrationCommand}
     */
    updateIntegration(args: UpdateIntegrationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateIntegrationCommandOutput>;
    updateIntegration(args: UpdateIntegrationCommandInput, cb: (err: any, data?: UpdateIntegrationCommandOutput) => void): void;
    updateIntegration(args: UpdateIntegrationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateIntegrationCommandOutput) => void): void;
    /**
     * @see {@link UpdateLensReviewCommand}
     */
    updateLensReview(args: UpdateLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<UpdateLensReviewCommandOutput>;
    updateLensReview(args: UpdateLensReviewCommandInput, cb: (err: any, data?: UpdateLensReviewCommandOutput) => void): void;
    updateLensReview(args: UpdateLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateLensReviewCommandOutput) => void): void;
    /**
     * @see {@link UpdateProfileCommand}
     */
    updateProfile(args: UpdateProfileCommandInput, options?: __HttpHandlerOptions): Promise<UpdateProfileCommandOutput>;
    updateProfile(args: UpdateProfileCommandInput, cb: (err: any, data?: UpdateProfileCommandOutput) => void): void;
    updateProfile(args: UpdateProfileCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateProfileCommandOutput) => void): void;
    /**
     * @see {@link UpdateReviewTemplateCommand}
     */
    updateReviewTemplate(args: UpdateReviewTemplateCommandInput, options?: __HttpHandlerOptions): Promise<UpdateReviewTemplateCommandOutput>;
    updateReviewTemplate(args: UpdateReviewTemplateCommandInput, cb: (err: any, data?: UpdateReviewTemplateCommandOutput) => void): void;
    updateReviewTemplate(args: UpdateReviewTemplateCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateReviewTemplateCommandOutput) => void): void;
    /**
     * @see {@link UpdateReviewTemplateAnswerCommand}
     */
    updateReviewTemplateAnswer(args: UpdateReviewTemplateAnswerCommandInput, options?: __HttpHandlerOptions): Promise<UpdateReviewTemplateAnswerCommandOutput>;
    updateReviewTemplateAnswer(args: UpdateReviewTemplateAnswerCommandInput, cb: (err: any, data?: UpdateReviewTemplateAnswerCommandOutput) => void): void;
    updateReviewTemplateAnswer(args: UpdateReviewTemplateAnswerCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateReviewTemplateAnswerCommandOutput) => void): void;
    /**
     * @see {@link UpdateReviewTemplateLensReviewCommand}
     */
    updateReviewTemplateLensReview(args: UpdateReviewTemplateLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<UpdateReviewTemplateLensReviewCommandOutput>;
    updateReviewTemplateLensReview(args: UpdateReviewTemplateLensReviewCommandInput, cb: (err: any, data?: UpdateReviewTemplateLensReviewCommandOutput) => void): void;
    updateReviewTemplateLensReview(args: UpdateReviewTemplateLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateReviewTemplateLensReviewCommandOutput) => void): void;
    /**
     * @see {@link UpdateShareInvitationCommand}
     */
    updateShareInvitation(args: UpdateShareInvitationCommandInput, options?: __HttpHandlerOptions): Promise<UpdateShareInvitationCommandOutput>;
    updateShareInvitation(args: UpdateShareInvitationCommandInput, cb: (err: any, data?: UpdateShareInvitationCommandOutput) => void): void;
    updateShareInvitation(args: UpdateShareInvitationCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateShareInvitationCommandOutput) => void): void;
    /**
     * @see {@link UpdateWorkloadCommand}
     */
    updateWorkload(args: UpdateWorkloadCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWorkloadCommandOutput>;
    updateWorkload(args: UpdateWorkloadCommandInput, cb: (err: any, data?: UpdateWorkloadCommandOutput) => void): void;
    updateWorkload(args: UpdateWorkloadCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWorkloadCommandOutput) => void): void;
    /**
     * @see {@link UpdateWorkloadShareCommand}
     */
    updateWorkloadShare(args: UpdateWorkloadShareCommandInput, options?: __HttpHandlerOptions): Promise<UpdateWorkloadShareCommandOutput>;
    updateWorkloadShare(args: UpdateWorkloadShareCommandInput, cb: (err: any, data?: UpdateWorkloadShareCommandOutput) => void): void;
    updateWorkloadShare(args: UpdateWorkloadShareCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpdateWorkloadShareCommandOutput) => void): void;
    /**
     * @see {@link UpgradeLensReviewCommand}
     */
    upgradeLensReview(args: UpgradeLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<UpgradeLensReviewCommandOutput>;
    upgradeLensReview(args: UpgradeLensReviewCommandInput, cb: (err: any, data?: UpgradeLensReviewCommandOutput) => void): void;
    upgradeLensReview(args: UpgradeLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpgradeLensReviewCommandOutput) => void): void;
    /**
     * @see {@link UpgradeProfileVersionCommand}
     */
    upgradeProfileVersion(args: UpgradeProfileVersionCommandInput, options?: __HttpHandlerOptions): Promise<UpgradeProfileVersionCommandOutput>;
    upgradeProfileVersion(args: UpgradeProfileVersionCommandInput, cb: (err: any, data?: UpgradeProfileVersionCommandOutput) => void): void;
    upgradeProfileVersion(args: UpgradeProfileVersionCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpgradeProfileVersionCommandOutput) => void): void;
    /**
     * @see {@link UpgradeReviewTemplateLensReviewCommand}
     */
    upgradeReviewTemplateLensReview(args: UpgradeReviewTemplateLensReviewCommandInput, options?: __HttpHandlerOptions): Promise<UpgradeReviewTemplateLensReviewCommandOutput>;
    upgradeReviewTemplateLensReview(args: UpgradeReviewTemplateLensReviewCommandInput, cb: (err: any, data?: UpgradeReviewTemplateLensReviewCommandOutput) => void): void;
    upgradeReviewTemplateLensReview(args: UpgradeReviewTemplateLensReviewCommandInput, options: __HttpHandlerOptions, cb: (err: any, data?: UpgradeReviewTemplateLensReviewCommandOutput) => void): void;
}
/**
 * <fullname>Well-Architected Tool</fullname>
 *          <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the
 *             <a href="http://aws.amazon.com/well-architected-tool">Well-Architected Tool</a> in the
 *            <a href="https://console.aws.amazon.com/wellarchitected">Amazon Web Services Management Console</a>. For information
 *             about the Well-Architected Tool, see the
 *            <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html">Well-Architected Tool User Guide</a>.</p>
 * @public
 */
export declare class WellArchitected extends WellArchitectedClient implements WellArchitected {
}
