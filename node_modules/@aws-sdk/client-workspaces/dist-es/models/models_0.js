import { WorkSpacesServiceException as __BaseException } from "./WorkSpacesServiceException";
export const AccountLinkStatusEnum = {
    LINKED: "LINKED",
    LINKING_FAILED: "LINKING_FAILED",
    LINK_NOT_FOUND: "LINK_NOT_FOUND",
    PENDING_ACCEPTANCE_BY_TARGET_ACCOUNT: "PENDING_ACCEPTANCE_BY_TARGET_ACCOUNT",
    REJECTED: "REJECTED",
};
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "client",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InternalServerException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.ResourceId = opts.ResourceId;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const AccessPropertyValue = {
    ALLOW: "ALLOW",
    DENY: "DENY",
};
export const DedicatedTenancySupportResultEnum = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DedicatedTenancyModificationStateEnum = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    PENDING: "PENDING",
};
export const Application = {
    Microsoft_Office_2016: "Microsoft_Office_2016",
    Microsoft_Office_2019: "Microsoft_Office_2019",
};
export const ApplicationAssociatedResourceType = {
    BUNDLE: "BUNDLE",
    IMAGE: "IMAGE",
    WORKSPACE: "WORKSPACE",
};
export class ApplicationNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ApplicationNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ApplicationNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ApplicationNotSupportedException.prototype);
    }
}
export const AssociationState = {
    COMPLETED: "COMPLETED",
    ERROR: "ERROR",
    INSTALLING: "INSTALLING",
    PENDING_INSTALL: "PENDING_INSTALL",
    PENDING_INSTALL_DEPLOYMENT: "PENDING_INSTALL_DEPLOYMENT",
    PENDING_UNINSTALL: "PENDING_UNINSTALL",
    PENDING_UNINSTALL_DEPLOYMENT: "PENDING_UNINSTALL_DEPLOYMENT",
    REMOVED: "REMOVED",
    UNINSTALLING: "UNINSTALLING",
};
export const AssociationErrorCode = {
    INSUFFICIENT_DISKSPACE: "ValidationError.InsufficientDiskSpace",
    INSUFFICIENT_MEMORY: "ValidationError.InsufficientMemory",
    INTERNAL_SERVER_ERROR: "DeploymentError.InternalServerError",
    UNSUPPORTED_OPERATING_SYSTEM: "ValidationError.UnsupportedOperatingSystem",
    WORKSPACE_UNREACHABLE: "DeploymentError.WorkspaceUnreachable",
};
export class InvalidParameterValuesException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidParameterValuesException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValuesException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValuesException.prototype);
    }
}
export class InvalidResourceStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidResourceStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidResourceStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidResourceStateException.prototype);
    }
}
export class OperationNotSupportedException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationNotSupportedException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationNotSupportedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationNotSupportedException.prototype);
        this.reason = opts.reason;
    }
}
export class ResourceAssociatedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAssociatedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAssociatedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAssociatedException.prototype);
    }
}
export class ResourceLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceLimitExceededException.prototype);
    }
}
export const WorkSpaceAssociatedResourceType = {
    APPLICATION: "APPLICATION",
};
export class ComputeNotCompatibleException extends __BaseException {
    constructor(opts) {
        super({
            name: "ComputeNotCompatibleException",
            $fault: "client",
            ...opts,
        });
        this.name = "ComputeNotCompatibleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ComputeNotCompatibleException.prototype);
    }
}
export class IncompatibleApplicationsException extends __BaseException {
    constructor(opts) {
        super({
            name: "IncompatibleApplicationsException",
            $fault: "client",
            ...opts,
        });
        this.name = "IncompatibleApplicationsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncompatibleApplicationsException.prototype);
    }
}
export class OperatingSystemNotCompatibleException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperatingSystemNotCompatibleException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperatingSystemNotCompatibleException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperatingSystemNotCompatibleException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
    }
}
export class ResourceInUseException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
        this.ResourceId = opts.ResourceId;
    }
}
export const AssociationStatus = {
    ASSOCIATED_WITH_OWNER_ACCOUNT: "ASSOCIATED_WITH_OWNER_ACCOUNT",
    ASSOCIATED_WITH_SHARED_ACCOUNT: "ASSOCIATED_WITH_SHARED_ACCOUNT",
    NOT_ASSOCIATED: "NOT_ASSOCIATED",
    PENDING_ASSOCIATION: "PENDING_ASSOCIATION",
    PENDING_DISASSOCIATION: "PENDING_DISASSOCIATION",
};
export const BundleAssociatedResourceType = {
    APPLICATION: "APPLICATION",
};
export const BundleType = {
    REGULAR: "REGULAR",
    STANDBY: "STANDBY",
};
export const Compute = {
    GRAPHICS: "GRAPHICS",
    GRAPHICSPRO: "GRAPHICSPRO",
    GRAPHICSPRO_G4DN: "GRAPHICSPRO_G4DN",
    GRAPHICS_G4DN: "GRAPHICS_G4DN",
    PERFORMANCE: "PERFORMANCE",
    POWER: "POWER",
    POWERPRO: "POWERPRO",
    STANDARD: "STANDARD",
    VALUE: "VALUE",
};
export const WorkspaceBundleState = {
    AVAILABLE: "AVAILABLE",
    ERROR: "ERROR",
    PENDING: "PENDING",
};
export const CertificateBasedAuthStatusEnum = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ClientDeviceType = {
    DEVICE_TYPE_ANDROID: "DeviceTypeAndroid",
    DEVICE_TYPE_IOS: "DeviceTypeIos",
    DEVICE_TYPE_LINUX: "DeviceTypeLinux",
    DEVICE_TYPE_OSX: "DeviceTypeOsx",
    DEVICE_TYPE_WEB: "DeviceTypeWeb",
    DEVICE_TYPE_WINDOWS: "DeviceTypeWindows",
};
export const LogUploadEnum = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ReconnectEnum = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ConnectionAliasState = {
    CREATED: "CREATED",
    CREATING: "CREATING",
    DELETING: "DELETING",
};
export const ConnectionState = {
    CONNECTED: "CONNECTED",
    DISCONNECTED: "DISCONNECTED",
    UNKNOWN: "UNKNOWN",
};
export class ResourceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceUnavailableException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceUnavailableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceUnavailableException.prototype);
        this.ResourceId = opts.ResourceId;
    }
}
export class ResourceCreationFailedException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceCreationFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceCreationFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceCreationFailedException.prototype);
    }
}
export const DataReplication = {
    NO_REPLICATION: "NO_REPLICATION",
    PRIMARY_AS_SOURCE: "PRIMARY_AS_SOURCE",
};
export const WorkspaceState = {
    ADMIN_MAINTENANCE: "ADMIN_MAINTENANCE",
    AVAILABLE: "AVAILABLE",
    ERROR: "ERROR",
    IMPAIRED: "IMPAIRED",
    MAINTENANCE: "MAINTENANCE",
    PENDING: "PENDING",
    REBOOTING: "REBOOTING",
    REBUILDING: "REBUILDING",
    RESTORING: "RESTORING",
    STARTING: "STARTING",
    STOPPED: "STOPPED",
    STOPPING: "STOPPING",
    SUSPENDED: "SUSPENDED",
    TERMINATED: "TERMINATED",
    TERMINATING: "TERMINATING",
    UNHEALTHY: "UNHEALTHY",
    UPDATING: "UPDATING",
};
export const OperatingSystemType = {
    LINUX: "LINUX",
    WINDOWS: "WINDOWS",
};
export const WorkspaceImageRequiredTenancy = {
    DEDICATED: "DEDICATED",
    DEFAULT: "DEFAULT",
};
export const WorkspaceImageState = {
    AVAILABLE: "AVAILABLE",
    ERROR: "ERROR",
    PENDING: "PENDING",
};
export const OperatingSystemName = {
    AMAZON_LINUX_2: "AMAZON_LINUX_2",
    UBUNTU_18_04: "UBUNTU_18_04",
    UBUNTU_20_04: "UBUNTU_20_04",
    UBUNTU_22_04: "UBUNTU_22_04",
    UNKNOWN: "UNKNOWN",
    WINDOWS_10: "WINDOWS_10",
    WINDOWS_11: "WINDOWS_11",
    WINDOWS_7: "WINDOWS_7",
    WINDOWS_SERVER_2016: "WINDOWS_SERVER_2016",
    WINDOWS_SERVER_2019: "WINDOWS_SERVER_2019",
    WINDOWS_SERVER_2022: "WINDOWS_SERVER_2022",
};
export const Protocol = {
    PCOIP: "PCOIP",
    WSP: "WSP",
};
export const RunningMode = {
    ALWAYS_ON: "ALWAYS_ON",
    AUTO_STOP: "AUTO_STOP",
    MANUAL: "MANUAL",
};
export const ModificationResourceEnum = {
    COMPUTE_TYPE: "COMPUTE_TYPE",
    ROOT_VOLUME: "ROOT_VOLUME",
    USER_VOLUME: "USER_VOLUME",
};
export const ModificationStateEnum = {
    UPDATE_INITIATED: "UPDATE_INITIATED",
    UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS",
};
export const StandbyWorkspaceRelationshipType = {
    PRIMARY: "PRIMARY",
    STANDBY: "STANDBY",
};
export const DedicatedTenancyAccountType = {
    SOURCE_ACCOUNT: "SOURCE_ACCOUNT",
    TARGET_ACCOUNT: "TARGET_ACCOUNT",
};
export const DedicatedTenancySupportEnum = {
    ENABLED: "ENABLED",
};
export const DeletableCertificateBasedAuthProperty = {
    CERTIFICATE_BASED_AUTH_PROPERTIES_CERTIFICATE_AUTHORITY_ARN: "CERTIFICATE_BASED_AUTH_PROPERTIES_CERTIFICATE_AUTHORITY_ARN",
};
export const DeletableSamlProperty = {
    SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME: "SAML_PROPERTIES_RELAY_STATE_PARAMETER_NAME",
    SAML_PROPERTIES_USER_ACCESS_URL: "SAML_PROPERTIES_USER_ACCESS_URL",
};
export const WorkSpaceApplicationLicenseType = {
    LICENSED: "LICENSED",
    UNLICENSED: "UNLICENSED",
};
export const WorkSpaceApplicationState = {
    AVAILABLE: "AVAILABLE",
    ERROR: "ERROR",
    PENDING: "PENDING",
    UNINSTALL_ONLY: "UNINSTALL_ONLY",
};
export const ImageAssociatedResourceType = {
    APPLICATION: "APPLICATION",
};
export const WorkspaceDirectoryType = {
    AD_CONNECTOR: "AD_CONNECTOR",
    SIMPLE_AD: "SIMPLE_AD",
};
export const SamlStatusEnum = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
    ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK: "ENABLED_WITH_DIRECTORY_LOGIN_FALLBACK",
};
export const WorkspaceDirectoryState = {
    DEREGISTERED: "DEREGISTERED",
    DEREGISTERING: "DEREGISTERING",
    ERROR: "ERROR",
    REGISTERED: "REGISTERED",
    REGISTERING: "REGISTERING",
};
export const Tenancy = {
    DEDICATED: "DEDICATED",
    SHARED: "SHARED",
};
export const ImageType = {
    OWNED: "OWNED",
    SHARED: "SHARED",
};
export const WorkspaceImageErrorDetailCode = {
    ADDITIONAL_DRIVES_ATTACHED: "AdditionalDrivesAttached",
    ANTI_VIRUS_INSTALLED: "AntiVirusInstalled",
    AUTO_LOGON_ENABLED: "AutoLogonEnabled",
    AUTO_MOUNT_DISABLED: "AutoMountDisabled",
    AZURE_DOMAIN_JOINED: "AzureDomainJoined",
    DHCP_DISABLED: "DHCPDisabled",
    DISK_FREE_SPACE: "DiskFreeSpace",
    DISK_SIZE_EXCEEDED: "DiskSizeExceeded",
    DOMAIN_JOINED: "DomainJoined",
    FIREWALL_ENABLED: "FirewallEnabled",
    INCOMPATIBLE_PARTITIONING: "IncompatiblePartitioning",
    IN_PLACE_UPGRADE: "InPlaceUpgrade",
    MULTIPLE_BOOT_PARTITION: "MultipleBootPartition",
    OFFICE_INSTALLED: "OfficeInstalled",
    OS_NOT_SUPPORTED: "OSNotSupported",
    OUTDATED_POWERSHELL_VERSION: "OutdatedPowershellVersion",
    PCOIP_AGENT_INSTALLED: "PCoIPAgentInstalled",
    PENDING_REBOOT: "PendingReboot",
    REALTIME_UNIVERSAL_DISABLED: "RealTimeUniversalDisabled",
    SIXTY_FOUR_BIT_OS: "Requires64BitOS",
    UEFI_NOT_SUPPORTED: "UEFINotSupported",
    VMWARE_TOOLS_INSTALLED: "VMWareToolsInstalled",
    WINDOWS_UPDATES_ENABLED: "WindowsUpdatesEnabled",
    WORKSPACES_BYOL_ACCOUNT_DISABLED: "WorkspacesBYOLAccountDisabled",
    WORKSPACES_BYOL_ACCOUNT_NOT_FOUND: "WorkspacesBYOLAccountNotFound",
    ZERO_REARM_COUNT: "ZeroRearmCount",
};
export const WorkspaceImageIngestionProcess = {
    BYOL_GRAPHICS: "BYOL_GRAPHICS",
    BYOL_GRAPHICSPRO: "BYOL_GRAPHICSPRO",
    BYOL_GRAPHICS_G4DN: "BYOL_GRAPHICS_G4DN",
    BYOL_GRAPHICS_G4DN_BYOP: "BYOL_GRAPHICS_G4DN_BYOP",
    BYOL_REGULAR: "BYOL_REGULAR",
    BYOL_REGULAR_BYOP: "BYOL_REGULAR_BYOP",
    BYOL_REGULAR_WSP: "BYOL_REGULAR_WSP",
};
export class OperationInProgressException extends __BaseException {
    constructor(opts) {
        super({
            name: "OperationInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "OperationInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, OperationInProgressException.prototype);
    }
}
export class UnsupportedWorkspaceConfigurationException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedWorkspaceConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedWorkspaceConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedWorkspaceConfigurationException.prototype);
    }
}
export const TargetWorkspaceState = {
    ADMIN_MAINTENANCE: "ADMIN_MAINTENANCE",
    AVAILABLE: "AVAILABLE",
};
export class UnsupportedNetworkConfigurationException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnsupportedNetworkConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedNetworkConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedNetworkConfigurationException.prototype);
    }
}
export class WorkspacesDefaultRoleNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "WorkspacesDefaultRoleNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "WorkspacesDefaultRoleNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, WorkspacesDefaultRoleNotFoundException.prototype);
    }
}
