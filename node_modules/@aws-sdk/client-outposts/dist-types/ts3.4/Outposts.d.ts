import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CancelCapacityTaskCommandInput,
  CancelCapacityTaskCommandOutput,
} from "./commands/CancelCapacityTaskCommand";
import {
  CancelOrderCommandInput,
  CancelOrderCommandOutput,
} from "./commands/CancelOrderCommand";
import {
  CreateOrderCommandInput,
  CreateOrderCommandOutput,
} from "./commands/CreateOrderCommand";
import {
  CreateOutpostCommandInput,
  CreateOutpostCommandOutput,
} from "./commands/CreateOutpostCommand";
import {
  CreateSiteCommandInput,
  CreateSiteCommandOutput,
} from "./commands/CreateSiteCommand";
import {
  DeleteOutpostCommandInput,
  DeleteOutpostCommandOutput,
} from "./commands/DeleteOutpostCommand";
import {
  DeleteSiteCommandInput,
  DeleteSiteCommandOutput,
} from "./commands/DeleteSiteCommand";
import {
  GetCapacityTaskCommandInput,
  GetCapacityTaskCommandOutput,
} from "./commands/GetCapacityTaskCommand";
import {
  GetCatalogItemCommandInput,
  GetCatalogItemCommandOutput,
} from "./commands/GetCatalogItemCommand";
import {
  GetConnectionCommandInput,
  GetConnectionCommandOutput,
} from "./commands/GetConnectionCommand";
import {
  GetOrderCommandInput,
  GetOrderCommandOutput,
} from "./commands/GetOrderCommand";
import {
  GetOutpostCommandInput,
  GetOutpostCommandOutput,
} from "./commands/GetOutpostCommand";
import {
  GetOutpostInstanceTypesCommandInput,
  GetOutpostInstanceTypesCommandOutput,
} from "./commands/GetOutpostInstanceTypesCommand";
import {
  GetOutpostSupportedInstanceTypesCommandInput,
  GetOutpostSupportedInstanceTypesCommandOutput,
} from "./commands/GetOutpostSupportedInstanceTypesCommand";
import {
  GetSiteAddressCommandInput,
  GetSiteAddressCommandOutput,
} from "./commands/GetSiteAddressCommand";
import {
  GetSiteCommandInput,
  GetSiteCommandOutput,
} from "./commands/GetSiteCommand";
import {
  ListAssetsCommandInput,
  ListAssetsCommandOutput,
} from "./commands/ListAssetsCommand";
import {
  ListCapacityTasksCommandInput,
  ListCapacityTasksCommandOutput,
} from "./commands/ListCapacityTasksCommand";
import {
  ListCatalogItemsCommandInput,
  ListCatalogItemsCommandOutput,
} from "./commands/ListCatalogItemsCommand";
import {
  ListOrdersCommandInput,
  ListOrdersCommandOutput,
} from "./commands/ListOrdersCommand";
import {
  ListOutpostsCommandInput,
  ListOutpostsCommandOutput,
} from "./commands/ListOutpostsCommand";
import {
  ListSitesCommandInput,
  ListSitesCommandOutput,
} from "./commands/ListSitesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  StartCapacityTaskCommandInput,
  StartCapacityTaskCommandOutput,
} from "./commands/StartCapacityTaskCommand";
import {
  StartConnectionCommandInput,
  StartConnectionCommandOutput,
} from "./commands/StartConnectionCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateOutpostCommandInput,
  UpdateOutpostCommandOutput,
} from "./commands/UpdateOutpostCommand";
import {
  UpdateSiteAddressCommandInput,
  UpdateSiteAddressCommandOutput,
} from "./commands/UpdateSiteAddressCommand";
import {
  UpdateSiteCommandInput,
  UpdateSiteCommandOutput,
} from "./commands/UpdateSiteCommand";
import {
  UpdateSiteRackPhysicalPropertiesCommandInput,
  UpdateSiteRackPhysicalPropertiesCommandOutput,
} from "./commands/UpdateSiteRackPhysicalPropertiesCommand";
import { OutpostsClient } from "./OutpostsClient";
export interface Outposts {
  cancelCapacityTask(
    args: CancelCapacityTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelCapacityTaskCommandOutput>;
  cancelCapacityTask(
    args: CancelCapacityTaskCommandInput,
    cb: (err: any, data?: CancelCapacityTaskCommandOutput) => void
  ): void;
  cancelCapacityTask(
    args: CancelCapacityTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelCapacityTaskCommandOutput) => void
  ): void;
  cancelOrder(
    args: CancelOrderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelOrderCommandOutput>;
  cancelOrder(
    args: CancelOrderCommandInput,
    cb: (err: any, data?: CancelOrderCommandOutput) => void
  ): void;
  cancelOrder(
    args: CancelOrderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelOrderCommandOutput) => void
  ): void;
  createOrder(
    args: CreateOrderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateOrderCommandOutput>;
  createOrder(
    args: CreateOrderCommandInput,
    cb: (err: any, data?: CreateOrderCommandOutput) => void
  ): void;
  createOrder(
    args: CreateOrderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateOrderCommandOutput) => void
  ): void;
  createOutpost(
    args: CreateOutpostCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateOutpostCommandOutput>;
  createOutpost(
    args: CreateOutpostCommandInput,
    cb: (err: any, data?: CreateOutpostCommandOutput) => void
  ): void;
  createOutpost(
    args: CreateOutpostCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateOutpostCommandOutput) => void
  ): void;
  createSite(
    args: CreateSiteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSiteCommandOutput>;
  createSite(
    args: CreateSiteCommandInput,
    cb: (err: any, data?: CreateSiteCommandOutput) => void
  ): void;
  createSite(
    args: CreateSiteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSiteCommandOutput) => void
  ): void;
  deleteOutpost(
    args: DeleteOutpostCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteOutpostCommandOutput>;
  deleteOutpost(
    args: DeleteOutpostCommandInput,
    cb: (err: any, data?: DeleteOutpostCommandOutput) => void
  ): void;
  deleteOutpost(
    args: DeleteOutpostCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteOutpostCommandOutput) => void
  ): void;
  deleteSite(
    args: DeleteSiteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSiteCommandOutput>;
  deleteSite(
    args: DeleteSiteCommandInput,
    cb: (err: any, data?: DeleteSiteCommandOutput) => void
  ): void;
  deleteSite(
    args: DeleteSiteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteSiteCommandOutput) => void
  ): void;
  getCapacityTask(
    args: GetCapacityTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCapacityTaskCommandOutput>;
  getCapacityTask(
    args: GetCapacityTaskCommandInput,
    cb: (err: any, data?: GetCapacityTaskCommandOutput) => void
  ): void;
  getCapacityTask(
    args: GetCapacityTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCapacityTaskCommandOutput) => void
  ): void;
  getCatalogItem(
    args: GetCatalogItemCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCatalogItemCommandOutput>;
  getCatalogItem(
    args: GetCatalogItemCommandInput,
    cb: (err: any, data?: GetCatalogItemCommandOutput) => void
  ): void;
  getCatalogItem(
    args: GetCatalogItemCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCatalogItemCommandOutput) => void
  ): void;
  getConnection(
    args: GetConnectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetConnectionCommandOutput>;
  getConnection(
    args: GetConnectionCommandInput,
    cb: (err: any, data?: GetConnectionCommandOutput) => void
  ): void;
  getConnection(
    args: GetConnectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetConnectionCommandOutput) => void
  ): void;
  getOrder(
    args: GetOrderCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOrderCommandOutput>;
  getOrder(
    args: GetOrderCommandInput,
    cb: (err: any, data?: GetOrderCommandOutput) => void
  ): void;
  getOrder(
    args: GetOrderCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOrderCommandOutput) => void
  ): void;
  getOutpost(
    args: GetOutpostCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOutpostCommandOutput>;
  getOutpost(
    args: GetOutpostCommandInput,
    cb: (err: any, data?: GetOutpostCommandOutput) => void
  ): void;
  getOutpost(
    args: GetOutpostCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOutpostCommandOutput) => void
  ): void;
  getOutpostInstanceTypes(
    args: GetOutpostInstanceTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOutpostInstanceTypesCommandOutput>;
  getOutpostInstanceTypes(
    args: GetOutpostInstanceTypesCommandInput,
    cb: (err: any, data?: GetOutpostInstanceTypesCommandOutput) => void
  ): void;
  getOutpostInstanceTypes(
    args: GetOutpostInstanceTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOutpostInstanceTypesCommandOutput) => void
  ): void;
  getOutpostSupportedInstanceTypes(
    args: GetOutpostSupportedInstanceTypesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOutpostSupportedInstanceTypesCommandOutput>;
  getOutpostSupportedInstanceTypes(
    args: GetOutpostSupportedInstanceTypesCommandInput,
    cb: (err: any, data?: GetOutpostSupportedInstanceTypesCommandOutput) => void
  ): void;
  getOutpostSupportedInstanceTypes(
    args: GetOutpostSupportedInstanceTypesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOutpostSupportedInstanceTypesCommandOutput) => void
  ): void;
  getSite(
    args: GetSiteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSiteCommandOutput>;
  getSite(
    args: GetSiteCommandInput,
    cb: (err: any, data?: GetSiteCommandOutput) => void
  ): void;
  getSite(
    args: GetSiteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSiteCommandOutput) => void
  ): void;
  getSiteAddress(
    args: GetSiteAddressCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetSiteAddressCommandOutput>;
  getSiteAddress(
    args: GetSiteAddressCommandInput,
    cb: (err: any, data?: GetSiteAddressCommandOutput) => void
  ): void;
  getSiteAddress(
    args: GetSiteAddressCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetSiteAddressCommandOutput) => void
  ): void;
  listAssets(
    args: ListAssetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAssetsCommandOutput>;
  listAssets(
    args: ListAssetsCommandInput,
    cb: (err: any, data?: ListAssetsCommandOutput) => void
  ): void;
  listAssets(
    args: ListAssetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAssetsCommandOutput) => void
  ): void;
  listCapacityTasks(): Promise<ListCapacityTasksCommandOutput>;
  listCapacityTasks(
    args: ListCapacityTasksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListCapacityTasksCommandOutput>;
  listCapacityTasks(
    args: ListCapacityTasksCommandInput,
    cb: (err: any, data?: ListCapacityTasksCommandOutput) => void
  ): void;
  listCapacityTasks(
    args: ListCapacityTasksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListCapacityTasksCommandOutput) => void
  ): void;
  listCatalogItems(): Promise<ListCatalogItemsCommandOutput>;
  listCatalogItems(
    args: ListCatalogItemsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListCatalogItemsCommandOutput>;
  listCatalogItems(
    args: ListCatalogItemsCommandInput,
    cb: (err: any, data?: ListCatalogItemsCommandOutput) => void
  ): void;
  listCatalogItems(
    args: ListCatalogItemsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListCatalogItemsCommandOutput) => void
  ): void;
  listOrders(): Promise<ListOrdersCommandOutput>;
  listOrders(
    args: ListOrdersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOrdersCommandOutput>;
  listOrders(
    args: ListOrdersCommandInput,
    cb: (err: any, data?: ListOrdersCommandOutput) => void
  ): void;
  listOrders(
    args: ListOrdersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOrdersCommandOutput) => void
  ): void;
  listOutposts(): Promise<ListOutpostsCommandOutput>;
  listOutposts(
    args: ListOutpostsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListOutpostsCommandOutput>;
  listOutposts(
    args: ListOutpostsCommandInput,
    cb: (err: any, data?: ListOutpostsCommandOutput) => void
  ): void;
  listOutposts(
    args: ListOutpostsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListOutpostsCommandOutput) => void
  ): void;
  listSites(): Promise<ListSitesCommandOutput>;
  listSites(
    args: ListSitesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSitesCommandOutput>;
  listSites(
    args: ListSitesCommandInput,
    cb: (err: any, data?: ListSitesCommandOutput) => void
  ): void;
  listSites(
    args: ListSitesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSitesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  startCapacityTask(
    args: StartCapacityTaskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartCapacityTaskCommandOutput>;
  startCapacityTask(
    args: StartCapacityTaskCommandInput,
    cb: (err: any, data?: StartCapacityTaskCommandOutput) => void
  ): void;
  startCapacityTask(
    args: StartCapacityTaskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartCapacityTaskCommandOutput) => void
  ): void;
  startConnection(
    args: StartConnectionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartConnectionCommandOutput>;
  startConnection(
    args: StartConnectionCommandInput,
    cb: (err: any, data?: StartConnectionCommandOutput) => void
  ): void;
  startConnection(
    args: StartConnectionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartConnectionCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateOutpost(
    args: UpdateOutpostCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateOutpostCommandOutput>;
  updateOutpost(
    args: UpdateOutpostCommandInput,
    cb: (err: any, data?: UpdateOutpostCommandOutput) => void
  ): void;
  updateOutpost(
    args: UpdateOutpostCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateOutpostCommandOutput) => void
  ): void;
  updateSite(
    args: UpdateSiteCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSiteCommandOutput>;
  updateSite(
    args: UpdateSiteCommandInput,
    cb: (err: any, data?: UpdateSiteCommandOutput) => void
  ): void;
  updateSite(
    args: UpdateSiteCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSiteCommandOutput) => void
  ): void;
  updateSiteAddress(
    args: UpdateSiteAddressCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSiteAddressCommandOutput>;
  updateSiteAddress(
    args: UpdateSiteAddressCommandInput,
    cb: (err: any, data?: UpdateSiteAddressCommandOutput) => void
  ): void;
  updateSiteAddress(
    args: UpdateSiteAddressCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSiteAddressCommandOutput) => void
  ): void;
  updateSiteRackPhysicalProperties(
    args: UpdateSiteRackPhysicalPropertiesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateSiteRackPhysicalPropertiesCommandOutput>;
  updateSiteRackPhysicalProperties(
    args: UpdateSiteRackPhysicalPropertiesCommandInput,
    cb: (err: any, data?: UpdateSiteRackPhysicalPropertiesCommandOutput) => void
  ): void;
  updateSiteRackPhysicalProperties(
    args: UpdateSiteRackPhysicalPropertiesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateSiteRackPhysicalPropertiesCommandOutput) => void
  ): void;
}
export declare class Outposts extends OutpostsClient implements Outposts {}
