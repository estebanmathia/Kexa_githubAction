import { OutpostsServiceException as __BaseException } from "./OutpostsServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
    }
}
export const AddressType = {
    OPERATING_ADDRESS: "OPERATING_ADDRESS",
    SHIPPING_ADDRESS: "SHIPPING_ADDRESS",
};
export const AssetType = {
    COMPUTE: "COMPUTE",
};
export const ComputeAssetState = {
    ACTIVE: "ACTIVE",
    ISOLATED: "ISOLATED",
    RETIRING: "RETIRING",
};
export const AssetState = {
    ACTIVE: "ACTIVE",
    ISOLATED: "ISOLATED",
    RETIRING: "RETIRING",
};
export const ResourceType = {
    ORDER: "ORDER",
    OUTPOST: "OUTPOST",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
        this.ResourceId = opts.ResourceId;
        this.ResourceType = opts.ResourceType;
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.Message = opts.Message;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.Message = opts.Message;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.Message = opts.Message;
    }
}
export const CapacityTaskFailureType = {
    UNSUPPORTED_CAPACITY_CONFIGURATION: "UNSUPPORTED_CAPACITY_CONFIGURATION",
};
export const CapacityTaskStatus = {
    CANCELLED: "CANCELLED",
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    REQUESTED: "REQUESTED",
};
export const CatalogItemStatus = {
    AVAILABLE: "AVAILABLE",
    DISCONTINUED: "DISCONTINUED",
};
export const SupportedStorageEnum = {
    EBS: "EBS",
    S3: "S3",
};
export const CatalogItemClass = {
    RACK: "RACK",
    SERVER: "SERVER",
};
export const PaymentOption = {
    ALL_UPFRONT: "ALL_UPFRONT",
    NO_UPFRONT: "NO_UPFRONT",
    PARTIAL_UPFRONT: "PARTIAL_UPFRONT",
};
export const PaymentTerm = {
    ONE_YEAR: "ONE_YEAR",
    THREE_YEARS: "THREE_YEARS",
};
export const ShipmentCarrier = {
    DBS: "DBS",
    DHL: "DHL",
    EXPEDITORS: "EXPEDITORS",
    FEDEX: "FEDEX",
    UPS: "UPS",
};
export const LineItemStatus = {
    BUILDING: "BUILDING",
    CANCELLED: "CANCELLED",
    DELIVERED: "DELIVERED",
    ERROR: "ERROR",
    INSTALLED: "INSTALLED",
    INSTALLING: "INSTALLING",
    PREPARING: "PREPARING",
    REPLACED: "REPLACED",
    SHIPPED: "SHIPPED",
};
export const OrderType = {
    OUTPOST: "OUTPOST",
    REPLACEMENT: "REPLACEMENT",
};
export const OrderStatus = {
    CANCELLED: "CANCELLED",
    COMPLETED: "COMPLETED",
    ERROR: "ERROR",
    FULFILLED: "FULFILLED",
    INSTALLING: "INSTALLING",
    IN_PROGRESS: "IN_PROGRESS",
    PENDING: "PENDING",
    PREPARING: "PREPARING",
    PROCESSING: "PROCESSING",
    RECEIVED: "RECEIVED",
};
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.Message = opts.Message;
    }
}
export const SupportedHardwareType = {
    RACK: "RACK",
    SERVER: "SERVER",
};
export const FiberOpticCableType = {
    MULTI_MODE: "MULTI_MODE",
    SINGLE_MODE: "SINGLE_MODE",
};
export const MaximumSupportedWeightLbs = {
    MAX_1400_LBS: "MAX_1400_LBS",
    MAX_1600_LBS: "MAX_1600_LBS",
    MAX_1800_LBS: "MAX_1800_LBS",
    MAX_2000_LBS: "MAX_2000_LBS",
    NO_LIMIT: "NO_LIMIT",
};
export const OpticalStandard = {
    OPTIC_1000BASE_LX: "OPTIC_1000BASE_LX",
    OPTIC_1000BASE_SX: "OPTIC_1000BASE_SX",
    OPTIC_100GBASE_CWDM4: "OPTIC_100GBASE_CWDM4",
    OPTIC_100GBASE_LR4: "OPTIC_100GBASE_LR4",
    OPTIC_100GBASE_SR4: "OPTIC_100GBASE_SR4",
    OPTIC_100G_PSM4_MSA: "OPTIC_100G_PSM4_MSA",
    OPTIC_10GBASE_IR: "OPTIC_10GBASE_IR",
    OPTIC_10GBASE_LR: "OPTIC_10GBASE_LR",
    OPTIC_10GBASE_SR: "OPTIC_10GBASE_SR",
    OPTIC_40GBASE_ESR: "OPTIC_40GBASE_ESR",
    OPTIC_40GBASE_IR4_LR4L: "OPTIC_40GBASE_IR4_LR4L",
    OPTIC_40GBASE_LR4: "OPTIC_40GBASE_LR4",
    OPTIC_40GBASE_SR: "OPTIC_40GBASE_SR",
};
export const PowerConnector = {
    AH530P7W: "AH530P7W",
    AH532P6W: "AH532P6W",
    IEC309: "IEC309",
    L6_30P: "L6_30P",
};
export const PowerDrawKva = {
    POWER_10_KVA: "POWER_10_KVA",
    POWER_15_KVA: "POWER_15_KVA",
    POWER_30_KVA: "POWER_30_KVA",
    POWER_5_KVA: "POWER_5_KVA",
};
export const PowerFeedDrop = {
    ABOVE_RACK: "ABOVE_RACK",
    BELOW_RACK: "BELOW_RACK",
};
export const PowerPhase = {
    SINGLE_PHASE: "SINGLE_PHASE",
    THREE_PHASE: "THREE_PHASE",
};
export const UplinkCount = {
    UPLINK_COUNT_1: "UPLINK_COUNT_1",
    UPLINK_COUNT_12: "UPLINK_COUNT_12",
    UPLINK_COUNT_16: "UPLINK_COUNT_16",
    UPLINK_COUNT_2: "UPLINK_COUNT_2",
    UPLINK_COUNT_3: "UPLINK_COUNT_3",
    UPLINK_COUNT_4: "UPLINK_COUNT_4",
    UPLINK_COUNT_5: "UPLINK_COUNT_5",
    UPLINK_COUNT_6: "UPLINK_COUNT_6",
    UPLINK_COUNT_7: "UPLINK_COUNT_7",
    UPLINK_COUNT_8: "UPLINK_COUNT_8",
};
export const UplinkGbps = {
    UPLINK_100G: "UPLINK_100G",
    UPLINK_10G: "UPLINK_10G",
    UPLINK_1G: "UPLINK_1G",
    UPLINK_40G: "UPLINK_40G",
};
