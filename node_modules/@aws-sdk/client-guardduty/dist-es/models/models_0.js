import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { GuardDutyServiceException as __BaseException } from "./GuardDutyServiceException";
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.Message = opts.Message;
        this.Type = opts.Type;
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.Message = opts.Message;
        this.Type = opts.Type;
    }
}
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.Type = opts.Type;
    }
}
export const FreeTrialFeatureResult = {
    CLOUD_TRAIL: "CLOUD_TRAIL",
    DNS_LOGS: "DNS_LOGS",
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EC2_RUNTIME_MONITORING: "EC2_RUNTIME_MONITORING",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    FARGATE_RUNTIME_MONITORING: "FARGATE_RUNTIME_MONITORING",
    FLOW_LOGS: "FLOW_LOGS",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const AdminStatus = {
    DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
    ENABLED: "ENABLED",
};
export const ProfileSubtype = {
    FREQUENT: "FREQUENT",
    INFREQUENT: "INFREQUENT",
    RARE: "RARE",
    UNSEEN: "UNSEEN",
};
export const ProfileType = {
    FREQUENCY: "FREQUENCY",
};
export const AutoEnableMembers = {
    ALL: "ALL",
    NEW: "NEW",
    NONE: "NONE",
};
export const DataSourceStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.Message = opts.Message;
        this.Type = opts.Type;
    }
}
export const CoverageStatus = {
    HEALTHY: "HEALTHY",
    UNHEALTHY: "UNHEALTHY",
};
export const ResourceType = {
    EC2: "EC2",
    ECS: "ECS",
    EKS: "EKS",
};
export const ManagementType = {
    AUTO_MANAGED: "AUTO_MANAGED",
    DISABLED: "DISABLED",
    MANUAL: "MANUAL",
};
export const CoverageFilterCriterionKey = {
    ACCOUNT_ID: "ACCOUNT_ID",
    ADDON_VERSION: "ADDON_VERSION",
    AGENT_VERSION: "AGENT_VERSION",
    CLUSTER_ARN: "CLUSTER_ARN",
    CLUSTER_NAME: "CLUSTER_NAME",
    COVERAGE_STATUS: "COVERAGE_STATUS",
    ECS_CLUSTER_NAME: "ECS_CLUSTER_NAME",
    EKS_CLUSTER_NAME: "EKS_CLUSTER_NAME",
    INSTANCE_ID: "INSTANCE_ID",
    MANAGEMENT_TYPE: "MANAGEMENT_TYPE",
    RESOURCE_TYPE: "RESOURCE_TYPE",
};
export const CoverageSortKey = {
    ACCOUNT_ID: "ACCOUNT_ID",
    ADDON_VERSION: "ADDON_VERSION",
    CLUSTER_NAME: "CLUSTER_NAME",
    COVERAGE_STATUS: "COVERAGE_STATUS",
    ECS_CLUSTER_NAME: "ECS_CLUSTER_NAME",
    EKS_CLUSTER_NAME: "EKS_CLUSTER_NAME",
    INSTANCE_ID: "INSTANCE_ID",
    ISSUE: "ISSUE",
    UPDATED_AT: "UPDATED_AT",
};
export const OrderBy = {
    ASC: "ASC",
    DESC: "DESC",
};
export const CoverageStatisticsType = {
    COUNT_BY_COVERAGE_STATUS: "COUNT_BY_COVERAGE_STATUS",
    COUNT_BY_RESOURCE_TYPE: "COUNT_BY_RESOURCE_TYPE",
};
export const FeatureAdditionalConfiguration = {
    EC2_AGENT_MANAGEMENT: "EC2_AGENT_MANAGEMENT",
    ECS_FARGATE_AGENT_MANAGEMENT: "ECS_FARGATE_AGENT_MANAGEMENT",
    EKS_ADDON_MANAGEMENT: "EKS_ADDON_MANAGEMENT",
};
export const FeatureStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const DetectorFeature = {
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    RUNTIME_MONITORING: "RUNTIME_MONITORING",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const FindingPublishingFrequency = {
    FIFTEEN_MINUTES: "FIFTEEN_MINUTES",
    ONE_HOUR: "ONE_HOUR",
    SIX_HOURS: "SIX_HOURS",
};
export const FilterAction = {
    ARCHIVE: "ARCHIVE",
    NOOP: "NOOP",
};
export const IpSetFormat = {
    ALIEN_VAULT: "ALIEN_VAULT",
    FIRE_EYE: "FIRE_EYE",
    OTX_CSV: "OTX_CSV",
    PROOF_POINT: "PROOF_POINT",
    STIX: "STIX",
    TXT: "TXT",
};
export const DestinationType = {
    S3: "S3",
};
export const ThreatIntelSetFormat = {
    ALIEN_VAULT: "ALIEN_VAULT",
    FIRE_EYE: "FIRE_EYE",
    OTX_CSV: "OTX_CSV",
    PROOF_POINT: "PROOF_POINT",
    STIX: "STIX",
    TXT: "TXT",
};
export const CriterionKey = {
    ACCOUNT_ID: "ACCOUNT_ID",
    EC2_INSTANCE_ARN: "EC2_INSTANCE_ARN",
    GUARDDUTY_FINDING_ID: "GUARDDUTY_FINDING_ID",
    SCAN_ID: "SCAN_ID",
    SCAN_START_TIME: "SCAN_START_TIME",
    SCAN_STATUS: "SCAN_STATUS",
    SCAN_TYPE: "SCAN_TYPE",
};
export const DataSource = {
    CLOUD_TRAIL: "CLOUD_TRAIL",
    DNS_LOGS: "DNS_LOGS",
    EC2_MALWARE_SCAN: "EC2_MALWARE_SCAN",
    FLOW_LOGS: "FLOW_LOGS",
    KUBERNETES_AUDIT_LOGS: "KUBERNETES_AUDIT_LOGS",
    S3_LOGS: "S3_LOGS",
};
export const ScanResult = {
    CLEAN: "CLEAN",
    INFECTED: "INFECTED",
};
export const ScanStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    SKIPPED: "SKIPPED",
};
export const ScanType = {
    GUARDDUTY_INITIATED: "GUARDDUTY_INITIATED",
    ON_DEMAND: "ON_DEMAND",
};
export const OrgFeatureStatus = {
    ALL: "ALL",
    NEW: "NEW",
    NONE: "NONE",
};
export const OrgFeatureAdditionalConfiguration = {
    EC2_AGENT_MANAGEMENT: "EC2_AGENT_MANAGEMENT",
    ECS_FARGATE_AGENT_MANAGEMENT: "ECS_FARGATE_AGENT_MANAGEMENT",
    EKS_ADDON_MANAGEMENT: "EKS_ADDON_MANAGEMENT",
};
export const OrgFeature = {
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    RUNTIME_MONITORING: "RUNTIME_MONITORING",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const PublishingStatus = {
    PENDING_VERIFICATION: "PENDING_VERIFICATION",
    PUBLISHING: "PUBLISHING",
    STOPPED: "STOPPED",
    UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY: "UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY",
};
export const DetectorFeatureResult = {
    CLOUD_TRAIL: "CLOUD_TRAIL",
    DNS_LOGS: "DNS_LOGS",
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    FLOW_LOGS: "FLOW_LOGS",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    RUNTIME_MONITORING: "RUNTIME_MONITORING",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const DetectorStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const EbsSnapshotPreservation = {
    NO_RETENTION: "NO_RETENTION",
    RETENTION_WITH_FINDING: "RETENTION_WITH_FINDING",
};
export const Feedback = {
    NOT_USEFUL: "NOT_USEFUL",
    USEFUL: "USEFUL",
};
export const FindingStatisticType = {
    COUNT_BY_SEVERITY: "COUNT_BY_SEVERITY",
};
export const IpSetStatus = {
    ACTIVATING: "ACTIVATING",
    ACTIVE: "ACTIVE",
    DEACTIVATING: "DEACTIVATING",
    DELETED: "DELETED",
    DELETE_PENDING: "DELETE_PENDING",
    ERROR: "ERROR",
    INACTIVE: "INACTIVE",
};
export const ScanCriterionKey = {
    EC2_INSTANCE_TAG: "EC2_INSTANCE_TAG",
};
export const ThreatIntelSetStatus = {
    ACTIVATING: "ACTIVATING",
    ACTIVE: "ACTIVE",
    DEACTIVATING: "DEACTIVATING",
    DELETED: "DELETED",
    DELETE_PENDING: "DELETE_PENDING",
    ERROR: "ERROR",
    INACTIVE: "INACTIVE",
};
export const UsageFeature = {
    CLOUD_TRAIL: "CLOUD_TRAIL",
    DNS_LOGS: "DNS_LOGS",
    EBS_MALWARE_PROTECTION: "EBS_MALWARE_PROTECTION",
    EC2_RUNTIME_MONITORING: "EC2_RUNTIME_MONITORING",
    EKS_AUDIT_LOGS: "EKS_AUDIT_LOGS",
    EKS_RUNTIME_MONITORING: "EKS_RUNTIME_MONITORING",
    FARGATE_RUNTIME_MONITORING: "FARGATE_RUNTIME_MONITORING",
    FLOW_LOGS: "FLOW_LOGS",
    LAMBDA_NETWORK_LOGS: "LAMBDA_NETWORK_LOGS",
    RDS_DBI_PROTECTION_PROVISIONED: "RDS_DBI_PROTECTION_PROVISIONED",
    RDS_DBI_PROTECTION_SERVERLESS: "RDS_DBI_PROTECTION_SERVERLESS",
    RDS_LOGIN_EVENTS: "RDS_LOGIN_EVENTS",
    S3_DATA_EVENTS: "S3_DATA_EVENTS",
};
export const UsageStatisticType = {
    SUM_BY_ACCOUNT: "SUM_BY_ACCOUNT",
    SUM_BY_DATA_SOURCE: "SUM_BY_DATA_SOURCE",
    SUM_BY_FEATURES: "SUM_BY_FEATURES",
    SUM_BY_RESOURCE: "SUM_BY_RESOURCE",
    TOP_ACCOUNTS_BY_FEATURE: "TOP_ACCOUNTS_BY_FEATURE",
    TOP_RESOURCES: "TOP_RESOURCES",
};
export const AccountDetailFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: SENSITIVE_STRING }),
});
export const RemoteIpDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IpAddressV4 && { IpAddressV4: SENSITIVE_STRING }),
    ...(obj.IpAddressV6 && { IpAddressV6: SENSITIVE_STRING }),
});
export const AwsApiCallActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RemoteIpDetails && { RemoteIpDetails: RemoteIpDetailsFilterSensitiveLog(obj.RemoteIpDetails) }),
});
export const KubernetesApiCallActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RemoteIpDetails && { RemoteIpDetails: RemoteIpDetailsFilterSensitiveLog(obj.RemoteIpDetails) }),
});
export const LocalIpDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.IpAddressV4 && { IpAddressV4: SENSITIVE_STRING }),
    ...(obj.IpAddressV6 && { IpAddressV6: SENSITIVE_STRING }),
});
export const NetworkConnectionActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LocalIpDetails && { LocalIpDetails: LocalIpDetailsFilterSensitiveLog(obj.LocalIpDetails) }),
    ...(obj.RemoteIpDetails && { RemoteIpDetails: RemoteIpDetailsFilterSensitiveLog(obj.RemoteIpDetails) }),
});
export const PortProbeDetailFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.LocalIpDetails && { LocalIpDetails: LocalIpDetailsFilterSensitiveLog(obj.LocalIpDetails) }),
    ...(obj.RemoteIpDetails && { RemoteIpDetails: RemoteIpDetailsFilterSensitiveLog(obj.RemoteIpDetails) }),
});
export const PortProbeActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PortProbeDetails && {
        PortProbeDetails: obj.PortProbeDetails.map((item) => PortProbeDetailFilterSensitiveLog(item)),
    }),
});
export const RdsLoginAttemptActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RemoteIpDetails && { RemoteIpDetails: RemoteIpDetailsFilterSensitiveLog(obj.RemoteIpDetails) }),
});
export const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AwsApiCallAction && { AwsApiCallAction: AwsApiCallActionFilterSensitiveLog(obj.AwsApiCallAction) }),
    ...(obj.NetworkConnectionAction && {
        NetworkConnectionAction: NetworkConnectionActionFilterSensitiveLog(obj.NetworkConnectionAction),
    }),
    ...(obj.PortProbeAction && { PortProbeAction: PortProbeActionFilterSensitiveLog(obj.PortProbeAction) }),
    ...(obj.KubernetesApiCallAction && {
        KubernetesApiCallAction: KubernetesApiCallActionFilterSensitiveLog(obj.KubernetesApiCallAction),
    }),
    ...(obj.RdsLoginAttemptAction && {
        RdsLoginAttemptAction: RdsLoginAttemptActionFilterSensitiveLog(obj.RdsLoginAttemptAction),
    }),
});
export const CreateMembersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccountDetails && {
        AccountDetails: obj.AccountDetails.map((item) => AccountDetailFilterSensitiveLog(item)),
    }),
});
export const PrivateIpAddressDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateIpAddress && { PrivateIpAddress: SENSITIVE_STRING }),
});
export const NetworkInterfaceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateIpAddress && { PrivateIpAddress: SENSITIVE_STRING }),
    ...(obj.PrivateIpAddresses && {
        PrivateIpAddresses: obj.PrivateIpAddresses.map((item) => PrivateIpAddressDetailsFilterSensitiveLog(item)),
    }),
});
export const InstanceDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NetworkInterfaces && {
        NetworkInterfaces: obj.NetworkInterfaces.map((item) => NetworkInterfaceFilterSensitiveLog(item)),
    }),
});
export const ResourceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.InstanceDetails && { InstanceDetails: InstanceDetailsFilterSensitiveLog(obj.InstanceDetails) }),
});
export const ServiceFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Action && { Action: ActionFilterSensitiveLog(obj.Action) }),
});
export const FindingFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Service && { Service: ServiceFilterSensitiveLog(obj.Service) }),
});
export const GetFindingsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Findings && { Findings: obj.Findings.map((item) => FindingFilterSensitiveLog(item)) }),
});
export const MemberFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Email && { Email: SENSITIVE_STRING }),
});
export const GetMembersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Members && { Members: obj.Members.map((item) => MemberFilterSensitiveLog(item)) }),
});
