"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AgreementStatusType: () => AgreementStatusType,
  As2Transport: () => As2Transport,
  CertificateStatusType: () => CertificateStatusType,
  CertificateType: () => CertificateType,
  CertificateUsageType: () => CertificateUsageType,
  CompressionEnum: () => CompressionEnum,
  ConflictException: () => ConflictException,
  CreateAccessCommand: () => CreateAccessCommand,
  CreateAgreementCommand: () => CreateAgreementCommand,
  CreateConnectorCommand: () => CreateConnectorCommand,
  CreateProfileCommand: () => CreateProfileCommand,
  CreateServerCommand: () => CreateServerCommand,
  CreateServerRequestFilterSensitiveLog: () => CreateServerRequestFilterSensitiveLog,
  CreateUserCommand: () => CreateUserCommand,
  CreateWorkflowCommand: () => CreateWorkflowCommand,
  CustomStepStatus: () => CustomStepStatus,
  DeleteAccessCommand: () => DeleteAccessCommand,
  DeleteAgreementCommand: () => DeleteAgreementCommand,
  DeleteCertificateCommand: () => DeleteCertificateCommand,
  DeleteConnectorCommand: () => DeleteConnectorCommand,
  DeleteHostKeyCommand: () => DeleteHostKeyCommand,
  DeleteProfileCommand: () => DeleteProfileCommand,
  DeleteServerCommand: () => DeleteServerCommand,
  DeleteSshPublicKeyCommand: () => DeleteSshPublicKeyCommand,
  DeleteUserCommand: () => DeleteUserCommand,
  DeleteWorkflowCommand: () => DeleteWorkflowCommand,
  DescribeAccessCommand: () => DescribeAccessCommand,
  DescribeAgreementCommand: () => DescribeAgreementCommand,
  DescribeCertificateCommand: () => DescribeCertificateCommand,
  DescribeCertificateResponseFilterSensitiveLog: () => DescribeCertificateResponseFilterSensitiveLog,
  DescribeConnectorCommand: () => DescribeConnectorCommand,
  DescribeExecutionCommand: () => DescribeExecutionCommand,
  DescribeHostKeyCommand: () => DescribeHostKeyCommand,
  DescribeProfileCommand: () => DescribeProfileCommand,
  DescribeSecurityPolicyCommand: () => DescribeSecurityPolicyCommand,
  DescribeServerCommand: () => DescribeServerCommand,
  DescribeUserCommand: () => DescribeUserCommand,
  DescribeWorkflowCommand: () => DescribeWorkflowCommand,
  DescribedCertificateFilterSensitiveLog: () => DescribedCertificateFilterSensitiveLog,
  DirectoryListingOptimization: () => DirectoryListingOptimization,
  Domain: () => Domain,
  EncryptionAlg: () => EncryptionAlg,
  EncryptionType: () => EncryptionType,
  EndpointType: () => EndpointType,
  ExecutionErrorType: () => ExecutionErrorType,
  ExecutionStatus: () => ExecutionStatus,
  HomeDirectoryType: () => HomeDirectoryType,
  IdentityProviderType: () => IdentityProviderType,
  ImportCertificateCommand: () => ImportCertificateCommand,
  ImportCertificateRequestFilterSensitiveLog: () => ImportCertificateRequestFilterSensitiveLog,
  ImportHostKeyCommand: () => ImportHostKeyCommand,
  ImportHostKeyRequestFilterSensitiveLog: () => ImportHostKeyRequestFilterSensitiveLog,
  ImportSshPublicKeyCommand: () => ImportSshPublicKeyCommand,
  InternalServiceError: () => InternalServiceError,
  InvalidNextTokenException: () => InvalidNextTokenException,
  InvalidRequestException: () => InvalidRequestException,
  ListAccessesCommand: () => ListAccessesCommand,
  ListAgreementsCommand: () => ListAgreementsCommand,
  ListCertificatesCommand: () => ListCertificatesCommand,
  ListConnectorsCommand: () => ListConnectorsCommand,
  ListExecutionsCommand: () => ListExecutionsCommand,
  ListHostKeysCommand: () => ListHostKeysCommand,
  ListProfilesCommand: () => ListProfilesCommand,
  ListSecurityPoliciesCommand: () => ListSecurityPoliciesCommand,
  ListServersCommand: () => ListServersCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListUsersCommand: () => ListUsersCommand,
  ListWorkflowsCommand: () => ListWorkflowsCommand,
  MapType: () => MapType,
  MdnResponse: () => MdnResponse,
  MdnSigningAlg: () => MdnSigningAlg,
  OverwriteExisting: () => OverwriteExisting,
  ProfileType: () => ProfileType,
  Protocol: () => Protocol,
  ResourceExistsException: () => ResourceExistsException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SecurityPolicyProtocol: () => SecurityPolicyProtocol,
  SecurityPolicyResourceType: () => SecurityPolicyResourceType,
  SendWorkflowStepStateCommand: () => SendWorkflowStepStateCommand,
  ServiceUnavailableException: () => ServiceUnavailableException,
  SetStatOption: () => SetStatOption,
  SftpAuthenticationMethods: () => SftpAuthenticationMethods,
  SigningAlg: () => SigningAlg,
  StartDirectoryListingCommand: () => StartDirectoryListingCommand,
  StartFileTransferCommand: () => StartFileTransferCommand,
  StartServerCommand: () => StartServerCommand,
  State: () => State,
  StopServerCommand: () => StopServerCommand,
  TagResourceCommand: () => TagResourceCommand,
  TestConnectionCommand: () => TestConnectionCommand,
  TestIdentityProviderCommand: () => TestIdentityProviderCommand,
  TestIdentityProviderRequestFilterSensitiveLog: () => TestIdentityProviderRequestFilterSensitiveLog,
  ThrottlingException: () => ThrottlingException,
  TlsSessionResumptionMode: () => TlsSessionResumptionMode,
  Transfer: () => Transfer,
  TransferClient: () => TransferClient,
  TransferServiceException: () => TransferServiceException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateAccessCommand: () => UpdateAccessCommand,
  UpdateAgreementCommand: () => UpdateAgreementCommand,
  UpdateCertificateCommand: () => UpdateCertificateCommand,
  UpdateConnectorCommand: () => UpdateConnectorCommand,
  UpdateHostKeyCommand: () => UpdateHostKeyCommand,
  UpdateProfileCommand: () => UpdateProfileCommand,
  UpdateServerCommand: () => UpdateServerCommand,
  UpdateServerRequestFilterSensitiveLog: () => UpdateServerRequestFilterSensitiveLog,
  UpdateUserCommand: () => UpdateUserCommand,
  WorkflowStepType: () => WorkflowStepType,
  __Client: () => import_smithy_client.Client,
  paginateListAccesses: () => paginateListAccesses,
  paginateListAgreements: () => paginateListAgreements,
  paginateListCertificates: () => paginateListCertificates,
  paginateListConnectors: () => paginateListConnectors,
  paginateListExecutions: () => paginateListExecutions,
  paginateListProfiles: () => paginateListProfiles,
  paginateListSecurityPolicies: () => paginateListSecurityPolicies,
  paginateListServers: () => paginateListServers,
  paginateListTagsForResource: () => paginateListTagsForResource,
  paginateListUsers: () => paginateListUsers,
  paginateListWorkflows: () => paginateListWorkflows,
  waitForServerOffline: () => waitForServerOffline,
  waitForServerOnline: () => waitForServerOnline,
  waitUntilServerOffline: () => waitUntilServerOffline,
  waitUntilServerOnline: () => waitUntilServerOnline
});
module.exports = __toCommonJS(src_exports);

// src/TransferClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "transfer"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/TransferClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/TransferClient.ts
var _TransferClient = class _TransferClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultTransferHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_TransferClient, "TransferClient");
var TransferClient = _TransferClient;

// src/Transfer.ts


// src/commands/CreateAccessCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_json1_1.ts
var import_core2 = require("@aws-sdk/core");



// src/models/models_0.ts


// src/models/TransferServiceException.ts

var _TransferServiceException = class _TransferServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _TransferServiceException.prototype);
  }
};
__name(_TransferServiceException, "TransferServiceException");
var TransferServiceException = _TransferServiceException;

// src/models/models_0.ts
var _AccessDeniedException = class _AccessDeniedException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    this.name = "AccessDeniedException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
__name(_AccessDeniedException, "AccessDeniedException");
var AccessDeniedException = _AccessDeniedException;
var AgreementStatusType = {
  ACTIVE: "ACTIVE",
  INACTIVE: "INACTIVE"
};
var CompressionEnum = {
  DISABLED: "DISABLED",
  ZLIB: "ZLIB"
};
var EncryptionAlg = {
  AES128_CBC: "AES128_CBC",
  AES192_CBC: "AES192_CBC",
  AES256_CBC: "AES256_CBC",
  DES_EDE3_CBC: "DES_EDE3_CBC",
  NONE: "NONE"
};
var MdnResponse = {
  NONE: "NONE",
  SYNC: "SYNC"
};
var MdnSigningAlg = {
  DEFAULT: "DEFAULT",
  NONE: "NONE",
  SHA1: "SHA1",
  SHA256: "SHA256",
  SHA384: "SHA384",
  SHA512: "SHA512"
};
var SigningAlg = {
  NONE: "NONE",
  SHA1: "SHA1",
  SHA256: "SHA256",
  SHA384: "SHA384",
  SHA512: "SHA512"
};
var As2Transport = {
  HTTP: "HTTP"
};
var CertificateStatusType = {
  ACTIVE: "ACTIVE",
  INACTIVE: "INACTIVE",
  PENDING_ROTATION: "PENDING_ROTATION"
};
var CertificateType = {
  CERTIFICATE: "CERTIFICATE",
  CERTIFICATE_WITH_PRIVATE_KEY: "CERTIFICATE_WITH_PRIVATE_KEY"
};
var CertificateUsageType = {
  ENCRYPTION: "ENCRYPTION",
  SIGNING: "SIGNING",
  TLS: "TLS"
};
var _ConflictException = class _ConflictException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    this.name = "ConflictException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ConflictException, "ConflictException");
var ConflictException = _ConflictException;
var OverwriteExisting = {
  FALSE: "FALSE",
  TRUE: "TRUE"
};
var MapType = {
  DIRECTORY: "DIRECTORY",
  FILE: "FILE"
};
var HomeDirectoryType = {
  LOGICAL: "LOGICAL",
  PATH: "PATH"
};
var _InternalServiceError = class _InternalServiceError extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceError",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServiceError";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServiceError.prototype);
    this.Message = opts.Message;
  }
};
__name(_InternalServiceError, "InternalServiceError");
var InternalServiceError = _InternalServiceError;
var _InvalidRequestException = class _InvalidRequestException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidRequestException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidRequestException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidRequestException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidRequestException, "InvalidRequestException");
var InvalidRequestException = _InvalidRequestException;
var _ResourceExistsException = class _ResourceExistsException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceExistsException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceExistsException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceExistsException.prototype);
    this.Message = opts.Message;
    this.Resource = opts.Resource;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_ResourceExistsException, "ResourceExistsException");
var ResourceExistsException = _ResourceExistsException;
var _ResourceNotFoundException = class _ResourceNotFoundException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.Message = opts.Message;
    this.Resource = opts.Resource;
    this.ResourceType = opts.ResourceType;
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var _ServiceUnavailableException = class _ServiceUnavailableException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceUnavailableException",
      $fault: "server",
      ...opts
    });
    this.name = "ServiceUnavailableException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _ServiceUnavailableException.prototype);
    this.Message = opts.Message;
  }
};
__name(_ServiceUnavailableException, "ServiceUnavailableException");
var ServiceUnavailableException = _ServiceUnavailableException;
var _ThrottlingException = class _ThrottlingException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    this.name = "ThrottlingException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.RetryAfterSeconds = opts.RetryAfterSeconds;
  }
};
__name(_ThrottlingException, "ThrottlingException");
var ThrottlingException = _ThrottlingException;
var ProfileType = {
  LOCAL: "LOCAL",
  PARTNER: "PARTNER"
};
var Domain = {
  EFS: "EFS",
  S3: "S3"
};
var EndpointType = {
  PUBLIC: "PUBLIC",
  VPC: "VPC",
  VPC_ENDPOINT: "VPC_ENDPOINT"
};
var SftpAuthenticationMethods = {
  PASSWORD: "PASSWORD",
  PUBLIC_KEY: "PUBLIC_KEY",
  PUBLIC_KEY_AND_PASSWORD: "PUBLIC_KEY_AND_PASSWORD",
  PUBLIC_KEY_OR_PASSWORD: "PUBLIC_KEY_OR_PASSWORD"
};
var IdentityProviderType = {
  API_GATEWAY: "API_GATEWAY",
  AWS_DIRECTORY_SERVICE: "AWS_DIRECTORY_SERVICE",
  AWS_LAMBDA: "AWS_LAMBDA",
  SERVICE_MANAGED: "SERVICE_MANAGED"
};
var SetStatOption = {
  DEFAULT: "DEFAULT",
  ENABLE_NO_OP: "ENABLE_NO_OP"
};
var TlsSessionResumptionMode = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED",
  ENFORCED: "ENFORCED"
};
var Protocol = {
  AS2: "AS2",
  FTP: "FTP",
  FTPS: "FTPS",
  SFTP: "SFTP"
};
var DirectoryListingOptimization = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var EncryptionType = {
  PGP: "PGP"
};
var WorkflowStepType = {
  COPY: "COPY",
  CUSTOM: "CUSTOM",
  DECRYPT: "DECRYPT",
  DELETE: "DELETE",
  TAG: "TAG"
};
var CustomStepStatus = {
  FAILURE: "FAILURE",
  SUCCESS: "SUCCESS"
};
var ExecutionErrorType = {
  ALREADY_EXISTS: "ALREADY_EXISTS",
  BAD_REQUEST: "BAD_REQUEST",
  CUSTOM_STEP_FAILED: "CUSTOM_STEP_FAILED",
  INTERNAL_SERVER_ERROR: "INTERNAL_SERVER_ERROR",
  NOT_FOUND: "NOT_FOUND",
  PERMISSION_DENIED: "PERMISSION_DENIED",
  THROTTLED: "THROTTLED",
  TIMEOUT: "TIMEOUT"
};
var ExecutionStatus = {
  COMPLETED: "COMPLETED",
  EXCEPTION: "EXCEPTION",
  HANDLING_EXCEPTION: "HANDLING_EXCEPTION",
  IN_PROGRESS: "IN_PROGRESS"
};
var SecurityPolicyProtocol = {
  FTPS: "FTPS",
  SFTP: "SFTP"
};
var SecurityPolicyResourceType = {
  CONNECTOR: "CONNECTOR",
  SERVER: "SERVER"
};
var State = {
  OFFLINE: "OFFLINE",
  ONLINE: "ONLINE",
  STARTING: "STARTING",
  START_FAILED: "START_FAILED",
  STOPPING: "STOPPING",
  STOP_FAILED: "STOP_FAILED"
};
var _InvalidNextTokenException = class _InvalidNextTokenException extends TransferServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidNextTokenException",
      $fault: "client",
      ...opts
    });
    this.name = "InvalidNextTokenException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _InvalidNextTokenException.prototype);
    this.Message = opts.Message;
  }
};
__name(_InvalidNextTokenException, "InvalidNextTokenException");
var InvalidNextTokenException = _InvalidNextTokenException;
var CreateServerRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HostKey && { HostKey: import_smithy_client.SENSITIVE_STRING }
}), "CreateServerRequestFilterSensitiveLog");
var DescribedCertificateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Certificate && { Certificate: import_smithy_client.SENSITIVE_STRING },
  ...obj.CertificateChain && { CertificateChain: import_smithy_client.SENSITIVE_STRING }
}), "DescribedCertificateFilterSensitiveLog");
var DescribeCertificateResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Certificate && { Certificate: DescribedCertificateFilterSensitiveLog(obj.Certificate) }
}), "DescribeCertificateResponseFilterSensitiveLog");
var ImportCertificateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.Certificate && { Certificate: import_smithy_client.SENSITIVE_STRING },
  ...obj.CertificateChain && { CertificateChain: import_smithy_client.SENSITIVE_STRING },
  ...obj.PrivateKey && { PrivateKey: import_smithy_client.SENSITIVE_STRING }
}), "ImportCertificateRequestFilterSensitiveLog");
var ImportHostKeyRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HostKeyBody && { HostKeyBody: import_smithy_client.SENSITIVE_STRING }
}), "ImportHostKeyRequestFilterSensitiveLog");
var TestIdentityProviderRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.UserPassword && { UserPassword: import_smithy_client.SENSITIVE_STRING }
}), "TestIdentityProviderRequestFilterSensitiveLog");
var UpdateServerRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.HostKey && { HostKey: import_smithy_client.SENSITIVE_STRING }
}), "UpdateServerRequestFilterSensitiveLog");

// src/protocols/Aws_json1_1.ts
var se_CreateAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateAccess");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAccessCommand");
var se_CreateAgreementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateAgreement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateAgreementCommand");
var se_CreateConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateConnector");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateConnectorCommand");
var se_CreateProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateProfileCommand");
var se_CreateServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateServerCommand");
var se_CreateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateUserCommand");
var se_CreateWorkflowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("CreateWorkflow");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_CreateWorkflowCommand");
var se_DeleteAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteAccess");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAccessCommand");
var se_DeleteAgreementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteAgreement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteAgreementCommand");
var se_DeleteCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteCertificateCommand");
var se_DeleteConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteConnector");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteConnectorCommand");
var se_DeleteHostKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteHostKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteHostKeyCommand");
var se_DeleteProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteProfileCommand");
var se_DeleteServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteServerCommand");
var se_DeleteSshPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteSshPublicKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteSshPublicKeyCommand");
var se_DeleteUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteUserCommand");
var se_DeleteWorkflowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DeleteWorkflow");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DeleteWorkflowCommand");
var se_DescribeAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeAccess");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAccessCommand");
var se_DescribeAgreementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeAgreement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeAgreementCommand");
var se_DescribeCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeCertificate");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeCertificateCommand");
var se_DescribeConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeConnector");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeConnectorCommand");
var se_DescribeExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeExecution");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeExecutionCommand");
var se_DescribeHostKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeHostKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeHostKeyCommand");
var se_DescribeProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeProfileCommand");
var se_DescribeSecurityPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeSecurityPolicy");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeSecurityPolicyCommand");
var se_DescribeServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeServerCommand");
var se_DescribeUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeUserCommand");
var se_DescribeWorkflowCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("DescribeWorkflow");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_DescribeWorkflowCommand");
var se_ImportCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportCertificate");
  let body;
  body = JSON.stringify(se_ImportCertificateRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportCertificateCommand");
var se_ImportHostKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportHostKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportHostKeyCommand");
var se_ImportSshPublicKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ImportSshPublicKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ImportSshPublicKeyCommand");
var se_ListAccessesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListAccesses");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAccessesCommand");
var se_ListAgreementsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListAgreements");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListAgreementsCommand");
var se_ListCertificatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListCertificates");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListCertificatesCommand");
var se_ListConnectorsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListConnectors");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListConnectorsCommand");
var se_ListExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListExecutions");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListExecutionsCommand");
var se_ListHostKeysCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListHostKeys");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListHostKeysCommand");
var se_ListProfilesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListProfiles");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListProfilesCommand");
var se_ListSecurityPoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListSecurityPolicies");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListSecurityPoliciesCommand");
var se_ListServersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListServers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListServersCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListTagsForResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListTagsForResourceCommand");
var se_ListUsersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListUsers");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListUsersCommand");
var se_ListWorkflowsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("ListWorkflows");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_ListWorkflowsCommand");
var se_SendWorkflowStepStateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("SendWorkflowStepState");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_SendWorkflowStepStateCommand");
var se_StartDirectoryListingCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartDirectoryListing");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartDirectoryListingCommand");
var se_StartFileTransferCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartFileTransfer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartFileTransferCommand");
var se_StartServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StartServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StartServerCommand");
var se_StopServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("StopServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_StopServerCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TagResourceCommand");
var se_TestConnectionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TestConnection");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TestConnectionCommand");
var se_TestIdentityProviderCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("TestIdentityProvider");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_TestIdentityProviderCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UntagResource");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UntagResourceCommand");
var se_UpdateAccessCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateAccess");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAccessCommand");
var se_UpdateAgreementCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateAgreement");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateAgreementCommand");
var se_UpdateCertificateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateCertificate");
  let body;
  body = JSON.stringify(se_UpdateCertificateRequest(input, context));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateCertificateCommand");
var se_UpdateConnectorCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateConnector");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateConnectorCommand");
var se_UpdateHostKeyCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateHostKey");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateHostKeyCommand");
var se_UpdateProfileCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateProfile");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateProfileCommand");
var se_UpdateServerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateServer");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateServerCommand");
var se_UpdateUserCommand = /* @__PURE__ */ __name(async (input, context) => {
  const headers = sharedHeaders("UpdateUser");
  let body;
  body = JSON.stringify((0, import_smithy_client._json)(input));
  return buildHttpRpcRequest(context, headers, "/", void 0, body);
}, "se_UpdateUserCommand");
var de_CreateAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateAccessCommand");
var de_CreateAgreementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateAgreementCommand");
var de_CreateConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateConnectorCommand");
var de_CreateProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateProfileCommand");
var de_CreateServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateServerCommand");
var de_CreateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateUserCommand");
var de_CreateWorkflowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_CreateWorkflowCommand");
var de_DeleteAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAccessCommand");
var de_DeleteAgreementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteAgreementCommand");
var de_DeleteCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteCertificateCommand");
var de_DeleteConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteConnectorCommand");
var de_DeleteHostKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteHostKeyCommand");
var de_DeleteProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteProfileCommand");
var de_DeleteServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteServerCommand");
var de_DeleteSshPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteSshPublicKeyCommand");
var de_DeleteUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteUserCommand");
var de_DeleteWorkflowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_DeleteWorkflowCommand");
var de_DescribeAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAccessCommand");
var de_DescribeAgreementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeAgreementCommand");
var de_DescribeCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeCertificateResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeCertificateCommand");
var de_DescribeConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeConnectorCommand");
var de_DescribeExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeExecutionCommand");
var de_DescribeHostKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeHostKeyResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeHostKeyCommand");
var de_DescribeProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeProfileCommand");
var de_DescribeSecurityPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeSecurityPolicyCommand");
var de_DescribeServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeServerCommand");
var de_DescribeUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_DescribeUserResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeUserCommand");
var de_DescribeWorkflowCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_DescribeWorkflowCommand");
var de_ImportCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportCertificateCommand");
var de_ImportHostKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportHostKeyCommand");
var de_ImportSshPublicKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ImportSshPublicKeyCommand");
var de_ListAccessesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAccessesCommand");
var de_ListAgreementsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListAgreementsCommand");
var de_ListCertificatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListCertificatesResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListCertificatesCommand");
var de_ListConnectorsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListConnectorsCommand");
var de_ListExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListExecutionsCommand");
var de_ListHostKeysCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = de_ListHostKeysResponse(data, context);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListHostKeysCommand");
var de_ListProfilesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListProfilesCommand");
var de_ListSecurityPoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListSecurityPoliciesCommand");
var de_ListServersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListServersCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListTagsForResourceCommand");
var de_ListUsersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListUsersCommand");
var de_ListWorkflowsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_ListWorkflowsCommand");
var de_SendWorkflowStepStateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_SendWorkflowStepStateCommand");
var de_StartDirectoryListingCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartDirectoryListingCommand");
var de_StartFileTransferCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_StartFileTransferCommand");
var de_StartServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StartServerCommand");
var de_StopServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_StopServerCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_TagResourceCommand");
var de_TestConnectionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TestConnectionCommand");
var de_TestIdentityProviderCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_TestIdentityProviderCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  await (0, import_smithy_client.collectBody)(output.body, context);
  const response = {
    $metadata: deserializeMetadata(output)
  };
  return response;
}, "de_UntagResourceCommand");
var de_UpdateAccessCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateAccessCommand");
var de_UpdateAgreementCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateAgreementCommand");
var de_UpdateCertificateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateCertificateCommand");
var de_UpdateConnectorCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateConnectorCommand");
var de_UpdateHostKeyCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateHostKeyCommand");
var de_UpdateProfileCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateProfileCommand");
var de_UpdateServerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateServerCommand");
var de_UpdateUserCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const data = await (0, import_core2.parseJsonBody)(output.body, context);
  let contents = {};
  contents = (0, import_smithy_client._json)(data);
  const response = {
    $metadata: deserializeMetadata(output),
    ...contents
  };
  return response;
}, "de_UpdateUserCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServiceError":
    case "com.amazonaws.transfer#InternalServiceError":
      throw await de_InternalServiceErrorRes(parsedOutput, context);
    case "InvalidRequestException":
    case "com.amazonaws.transfer#InvalidRequestException":
      throw await de_InvalidRequestExceptionRes(parsedOutput, context);
    case "ResourceExistsException":
    case "com.amazonaws.transfer#ResourceExistsException":
      throw await de_ResourceExistsExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.transfer#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ServiceUnavailableException":
    case "com.amazonaws.transfer#ServiceUnavailableException":
      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.transfer#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.transfer#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "InvalidNextTokenException":
    case "com.amazonaws.transfer#InvalidNextTokenException":
      throw await de_InvalidNextTokenExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.transfer#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ConflictExceptionRes");
var de_InternalServiceErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InternalServiceError({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InternalServiceErrorRes");
var de_InvalidNextTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidNextTokenException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidNextTokenExceptionRes");
var de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new InvalidRequestException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_InvalidRequestExceptionRes");
var de_ResourceExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceExistsExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ServiceUnavailableException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ServiceUnavailableExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const body = parsedOutput.body;
  const deserialized = (0, import_smithy_client._json)(body);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...deserialized
  });
  return (0, import_smithy_client.decorateServiceException)(exception, body);
}, "de_ThrottlingExceptionRes");
var se_ImportCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ActiveDate: (_) => Math.round(_.getTime() / 1e3),
    Certificate: [],
    CertificateChain: [],
    Description: [],
    InactiveDate: (_) => Math.round(_.getTime() / 1e3),
    PrivateKey: [],
    Tags: import_smithy_client._json,
    Usage: []
  });
}, "se_ImportCertificateRequest");
var se_UpdateCertificateRequest = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    ActiveDate: (_) => Math.round(_.getTime() / 1e3),
    CertificateId: [],
    Description: [],
    InactiveDate: (_) => Math.round(_.getTime() / 1e3)
  });
}, "se_UpdateCertificateRequest");
var de_DescribeCertificateResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Certificate: (_) => de_DescribedCertificate(_, context)
  });
}, "de_DescribeCertificateResponse");
var de_DescribedCertificate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ActiveDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Arn: import_smithy_client.expectString,
    Certificate: import_smithy_client.expectString,
    CertificateChain: import_smithy_client.expectString,
    CertificateId: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    InactiveDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NotAfterDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    NotBeforeDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Serial: import_smithy_client.expectString,
    Status: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Type: import_smithy_client.expectString,
    Usage: import_smithy_client.expectString
  });
}, "de_DescribedCertificate");
var de_DescribedHostKey = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    DateImported: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Description: import_smithy_client.expectString,
    HostKeyFingerprint: import_smithy_client.expectString,
    HostKeyId: import_smithy_client.expectString,
    Tags: import_smithy_client._json,
    Type: import_smithy_client.expectString
  });
}, "de_DescribedHostKey");
var de_DescribedUser = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    HomeDirectory: import_smithy_client.expectString,
    HomeDirectoryMappings: import_smithy_client._json,
    HomeDirectoryType: import_smithy_client.expectString,
    Policy: import_smithy_client.expectString,
    PosixProfile: import_smithy_client._json,
    Role: import_smithy_client.expectString,
    SshPublicKeys: (_) => de_SshPublicKeys(_, context),
    Tags: import_smithy_client._json,
    UserName: import_smithy_client.expectString
  });
}, "de_DescribedUser");
var de_DescribeHostKeyResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    HostKey: (_) => de_DescribedHostKey(_, context)
  });
}, "de_DescribeHostKeyResponse");
var de_DescribeUserResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ServerId: import_smithy_client.expectString,
    User: (_) => de_DescribedUser(_, context)
  });
}, "de_DescribeUserResponse");
var de_ListCertificatesResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Certificates: (_) => de_ListedCertificates(_, context),
    NextToken: import_smithy_client.expectString
  });
}, "de_ListCertificatesResponse");
var de_ListedCertificate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    ActiveDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Arn: import_smithy_client.expectString,
    CertificateId: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    InactiveDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Status: import_smithy_client.expectString,
    Type: import_smithy_client.expectString,
    Usage: import_smithy_client.expectString
  });
}, "de_ListedCertificate");
var de_ListedCertificates = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ListedCertificate(entry, context);
  });
  return retVal;
}, "de_ListedCertificates");
var de_ListedHostKey = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Arn: import_smithy_client.expectString,
    DateImported: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    Description: import_smithy_client.expectString,
    Fingerprint: import_smithy_client.expectString,
    HostKeyId: import_smithy_client.expectString,
    Type: import_smithy_client.expectString
  });
}, "de_ListedHostKey");
var de_ListedHostKeys = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ListedHostKey(entry, context);
  });
  return retVal;
}, "de_ListedHostKeys");
var de_ListHostKeysResponse = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    HostKeys: (_) => de_ListedHostKeys(_, context),
    NextToken: import_smithy_client.expectString,
    ServerId: import_smithy_client.expectString
  });
}, "de_ListHostKeysResponse");
var de_SshPublicKey = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    DateImported: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    SshPublicKeyBody: import_smithy_client.expectString,
    SshPublicKeyId: import_smithy_client.expectString
  });
}, "de_SshPublicKey");
var de_SshPublicKeys = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SshPublicKey(entry, context);
  });
  return retVal;
}, "de_SshPublicKeys");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var throwDefaultError = (0, import_smithy_client.withBaseException)(TransferServiceException);
var buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {
  const { hostname, protocol = "https", port, path: basePath } = await context.endpoint();
  const contents = {
    protocol,
    hostname,
    port,
    method: "POST",
    path: basePath.endsWith("/") ? basePath.slice(0, -1) + path : basePath + path,
    headers
  };
  if (resolvedHostname !== void 0) {
    contents.hostname = resolvedHostname;
  }
  if (body !== void 0) {
    contents.body = body;
  }
  return new import_protocol_http.HttpRequest(contents);
}, "buildHttpRpcRequest");
function sharedHeaders(operation) {
  return {
    "content-type": "application/x-amz-json-1.1",
    "x-amz-target": `TransferService.${operation}`
  };
}
__name(sharedHeaders, "sharedHeaders");

// src/commands/CreateAccessCommand.ts
var _CreateAccessCommand = class _CreateAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateAccess", {}).n("TransferClient", "CreateAccessCommand").f(void 0, void 0).ser(se_CreateAccessCommand).de(de_CreateAccessCommand).build() {
};
__name(_CreateAccessCommand, "CreateAccessCommand");
var CreateAccessCommand = _CreateAccessCommand;

// src/commands/CreateAgreementCommand.ts




var _CreateAgreementCommand = class _CreateAgreementCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateAgreement", {}).n("TransferClient", "CreateAgreementCommand").f(void 0, void 0).ser(se_CreateAgreementCommand).de(de_CreateAgreementCommand).build() {
};
__name(_CreateAgreementCommand, "CreateAgreementCommand");
var CreateAgreementCommand = _CreateAgreementCommand;

// src/commands/CreateConnectorCommand.ts




var _CreateConnectorCommand = class _CreateConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateConnector", {}).n("TransferClient", "CreateConnectorCommand").f(void 0, void 0).ser(se_CreateConnectorCommand).de(de_CreateConnectorCommand).build() {
};
__name(_CreateConnectorCommand, "CreateConnectorCommand");
var CreateConnectorCommand = _CreateConnectorCommand;

// src/commands/CreateProfileCommand.ts




var _CreateProfileCommand = class _CreateProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateProfile", {}).n("TransferClient", "CreateProfileCommand").f(void 0, void 0).ser(se_CreateProfileCommand).de(de_CreateProfileCommand).build() {
};
__name(_CreateProfileCommand, "CreateProfileCommand");
var CreateProfileCommand = _CreateProfileCommand;

// src/commands/CreateServerCommand.ts




var _CreateServerCommand = class _CreateServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateServer", {}).n("TransferClient", "CreateServerCommand").f(CreateServerRequestFilterSensitiveLog, void 0).ser(se_CreateServerCommand).de(de_CreateServerCommand).build() {
};
__name(_CreateServerCommand, "CreateServerCommand");
var CreateServerCommand = _CreateServerCommand;

// src/commands/CreateUserCommand.ts




var _CreateUserCommand = class _CreateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateUser", {}).n("TransferClient", "CreateUserCommand").f(void 0, void 0).ser(se_CreateUserCommand).de(de_CreateUserCommand).build() {
};
__name(_CreateUserCommand, "CreateUserCommand");
var CreateUserCommand = _CreateUserCommand;

// src/commands/CreateWorkflowCommand.ts




var _CreateWorkflowCommand = class _CreateWorkflowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "CreateWorkflow", {}).n("TransferClient", "CreateWorkflowCommand").f(void 0, void 0).ser(se_CreateWorkflowCommand).de(de_CreateWorkflowCommand).build() {
};
__name(_CreateWorkflowCommand, "CreateWorkflowCommand");
var CreateWorkflowCommand = _CreateWorkflowCommand;

// src/commands/DeleteAccessCommand.ts




var _DeleteAccessCommand = class _DeleteAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteAccess", {}).n("TransferClient", "DeleteAccessCommand").f(void 0, void 0).ser(se_DeleteAccessCommand).de(de_DeleteAccessCommand).build() {
};
__name(_DeleteAccessCommand, "DeleteAccessCommand");
var DeleteAccessCommand = _DeleteAccessCommand;

// src/commands/DeleteAgreementCommand.ts




var _DeleteAgreementCommand = class _DeleteAgreementCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteAgreement", {}).n("TransferClient", "DeleteAgreementCommand").f(void 0, void 0).ser(se_DeleteAgreementCommand).de(de_DeleteAgreementCommand).build() {
};
__name(_DeleteAgreementCommand, "DeleteAgreementCommand");
var DeleteAgreementCommand = _DeleteAgreementCommand;

// src/commands/DeleteCertificateCommand.ts




var _DeleteCertificateCommand = class _DeleteCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteCertificate", {}).n("TransferClient", "DeleteCertificateCommand").f(void 0, void 0).ser(se_DeleteCertificateCommand).de(de_DeleteCertificateCommand).build() {
};
__name(_DeleteCertificateCommand, "DeleteCertificateCommand");
var DeleteCertificateCommand = _DeleteCertificateCommand;

// src/commands/DeleteConnectorCommand.ts




var _DeleteConnectorCommand = class _DeleteConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteConnector", {}).n("TransferClient", "DeleteConnectorCommand").f(void 0, void 0).ser(se_DeleteConnectorCommand).de(de_DeleteConnectorCommand).build() {
};
__name(_DeleteConnectorCommand, "DeleteConnectorCommand");
var DeleteConnectorCommand = _DeleteConnectorCommand;

// src/commands/DeleteHostKeyCommand.ts




var _DeleteHostKeyCommand = class _DeleteHostKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteHostKey", {}).n("TransferClient", "DeleteHostKeyCommand").f(void 0, void 0).ser(se_DeleteHostKeyCommand).de(de_DeleteHostKeyCommand).build() {
};
__name(_DeleteHostKeyCommand, "DeleteHostKeyCommand");
var DeleteHostKeyCommand = _DeleteHostKeyCommand;

// src/commands/DeleteProfileCommand.ts




var _DeleteProfileCommand = class _DeleteProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteProfile", {}).n("TransferClient", "DeleteProfileCommand").f(void 0, void 0).ser(se_DeleteProfileCommand).de(de_DeleteProfileCommand).build() {
};
__name(_DeleteProfileCommand, "DeleteProfileCommand");
var DeleteProfileCommand = _DeleteProfileCommand;

// src/commands/DeleteServerCommand.ts




var _DeleteServerCommand = class _DeleteServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteServer", {}).n("TransferClient", "DeleteServerCommand").f(void 0, void 0).ser(se_DeleteServerCommand).de(de_DeleteServerCommand).build() {
};
__name(_DeleteServerCommand, "DeleteServerCommand");
var DeleteServerCommand = _DeleteServerCommand;

// src/commands/DeleteSshPublicKeyCommand.ts




var _DeleteSshPublicKeyCommand = class _DeleteSshPublicKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteSshPublicKey", {}).n("TransferClient", "DeleteSshPublicKeyCommand").f(void 0, void 0).ser(se_DeleteSshPublicKeyCommand).de(de_DeleteSshPublicKeyCommand).build() {
};
__name(_DeleteSshPublicKeyCommand, "DeleteSshPublicKeyCommand");
var DeleteSshPublicKeyCommand = _DeleteSshPublicKeyCommand;

// src/commands/DeleteUserCommand.ts




var _DeleteUserCommand = class _DeleteUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteUser", {}).n("TransferClient", "DeleteUserCommand").f(void 0, void 0).ser(se_DeleteUserCommand).de(de_DeleteUserCommand).build() {
};
__name(_DeleteUserCommand, "DeleteUserCommand");
var DeleteUserCommand = _DeleteUserCommand;

// src/commands/DeleteWorkflowCommand.ts




var _DeleteWorkflowCommand = class _DeleteWorkflowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DeleteWorkflow", {}).n("TransferClient", "DeleteWorkflowCommand").f(void 0, void 0).ser(se_DeleteWorkflowCommand).de(de_DeleteWorkflowCommand).build() {
};
__name(_DeleteWorkflowCommand, "DeleteWorkflowCommand");
var DeleteWorkflowCommand = _DeleteWorkflowCommand;

// src/commands/DescribeAccessCommand.ts




var _DescribeAccessCommand = class _DescribeAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeAccess", {}).n("TransferClient", "DescribeAccessCommand").f(void 0, void 0).ser(se_DescribeAccessCommand).de(de_DescribeAccessCommand).build() {
};
__name(_DescribeAccessCommand, "DescribeAccessCommand");
var DescribeAccessCommand = _DescribeAccessCommand;

// src/commands/DescribeAgreementCommand.ts




var _DescribeAgreementCommand = class _DescribeAgreementCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeAgreement", {}).n("TransferClient", "DescribeAgreementCommand").f(void 0, void 0).ser(se_DescribeAgreementCommand).de(de_DescribeAgreementCommand).build() {
};
__name(_DescribeAgreementCommand, "DescribeAgreementCommand");
var DescribeAgreementCommand = _DescribeAgreementCommand;

// src/commands/DescribeCertificateCommand.ts




var _DescribeCertificateCommand = class _DescribeCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeCertificate", {}).n("TransferClient", "DescribeCertificateCommand").f(void 0, DescribeCertificateResponseFilterSensitiveLog).ser(se_DescribeCertificateCommand).de(de_DescribeCertificateCommand).build() {
};
__name(_DescribeCertificateCommand, "DescribeCertificateCommand");
var DescribeCertificateCommand = _DescribeCertificateCommand;

// src/commands/DescribeConnectorCommand.ts




var _DescribeConnectorCommand = class _DescribeConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeConnector", {}).n("TransferClient", "DescribeConnectorCommand").f(void 0, void 0).ser(se_DescribeConnectorCommand).de(de_DescribeConnectorCommand).build() {
};
__name(_DescribeConnectorCommand, "DescribeConnectorCommand");
var DescribeConnectorCommand = _DescribeConnectorCommand;

// src/commands/DescribeExecutionCommand.ts




var _DescribeExecutionCommand = class _DescribeExecutionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeExecution", {}).n("TransferClient", "DescribeExecutionCommand").f(void 0, void 0).ser(se_DescribeExecutionCommand).de(de_DescribeExecutionCommand).build() {
};
__name(_DescribeExecutionCommand, "DescribeExecutionCommand");
var DescribeExecutionCommand = _DescribeExecutionCommand;

// src/commands/DescribeHostKeyCommand.ts




var _DescribeHostKeyCommand = class _DescribeHostKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeHostKey", {}).n("TransferClient", "DescribeHostKeyCommand").f(void 0, void 0).ser(se_DescribeHostKeyCommand).de(de_DescribeHostKeyCommand).build() {
};
__name(_DescribeHostKeyCommand, "DescribeHostKeyCommand");
var DescribeHostKeyCommand = _DescribeHostKeyCommand;

// src/commands/DescribeProfileCommand.ts




var _DescribeProfileCommand = class _DescribeProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeProfile", {}).n("TransferClient", "DescribeProfileCommand").f(void 0, void 0).ser(se_DescribeProfileCommand).de(de_DescribeProfileCommand).build() {
};
__name(_DescribeProfileCommand, "DescribeProfileCommand");
var DescribeProfileCommand = _DescribeProfileCommand;

// src/commands/DescribeSecurityPolicyCommand.ts




var _DescribeSecurityPolicyCommand = class _DescribeSecurityPolicyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeSecurityPolicy", {}).n("TransferClient", "DescribeSecurityPolicyCommand").f(void 0, void 0).ser(se_DescribeSecurityPolicyCommand).de(de_DescribeSecurityPolicyCommand).build() {
};
__name(_DescribeSecurityPolicyCommand, "DescribeSecurityPolicyCommand");
var DescribeSecurityPolicyCommand = _DescribeSecurityPolicyCommand;

// src/commands/DescribeServerCommand.ts




var _DescribeServerCommand = class _DescribeServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeServer", {}).n("TransferClient", "DescribeServerCommand").f(void 0, void 0).ser(se_DescribeServerCommand).de(de_DescribeServerCommand).build() {
};
__name(_DescribeServerCommand, "DescribeServerCommand");
var DescribeServerCommand = _DescribeServerCommand;

// src/commands/DescribeUserCommand.ts




var _DescribeUserCommand = class _DescribeUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeUser", {}).n("TransferClient", "DescribeUserCommand").f(void 0, void 0).ser(se_DescribeUserCommand).de(de_DescribeUserCommand).build() {
};
__name(_DescribeUserCommand, "DescribeUserCommand");
var DescribeUserCommand = _DescribeUserCommand;

// src/commands/DescribeWorkflowCommand.ts




var _DescribeWorkflowCommand = class _DescribeWorkflowCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "DescribeWorkflow", {}).n("TransferClient", "DescribeWorkflowCommand").f(void 0, void 0).ser(se_DescribeWorkflowCommand).de(de_DescribeWorkflowCommand).build() {
};
__name(_DescribeWorkflowCommand, "DescribeWorkflowCommand");
var DescribeWorkflowCommand = _DescribeWorkflowCommand;

// src/commands/ImportCertificateCommand.ts




var _ImportCertificateCommand = class _ImportCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ImportCertificate", {}).n("TransferClient", "ImportCertificateCommand").f(ImportCertificateRequestFilterSensitiveLog, void 0).ser(se_ImportCertificateCommand).de(de_ImportCertificateCommand).build() {
};
__name(_ImportCertificateCommand, "ImportCertificateCommand");
var ImportCertificateCommand = _ImportCertificateCommand;

// src/commands/ImportHostKeyCommand.ts




var _ImportHostKeyCommand = class _ImportHostKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ImportHostKey", {}).n("TransferClient", "ImportHostKeyCommand").f(ImportHostKeyRequestFilterSensitiveLog, void 0).ser(se_ImportHostKeyCommand).de(de_ImportHostKeyCommand).build() {
};
__name(_ImportHostKeyCommand, "ImportHostKeyCommand");
var ImportHostKeyCommand = _ImportHostKeyCommand;

// src/commands/ImportSshPublicKeyCommand.ts




var _ImportSshPublicKeyCommand = class _ImportSshPublicKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ImportSshPublicKey", {}).n("TransferClient", "ImportSshPublicKeyCommand").f(void 0, void 0).ser(se_ImportSshPublicKeyCommand).de(de_ImportSshPublicKeyCommand).build() {
};
__name(_ImportSshPublicKeyCommand, "ImportSshPublicKeyCommand");
var ImportSshPublicKeyCommand = _ImportSshPublicKeyCommand;

// src/commands/ListAccessesCommand.ts




var _ListAccessesCommand = class _ListAccessesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListAccesses", {}).n("TransferClient", "ListAccessesCommand").f(void 0, void 0).ser(se_ListAccessesCommand).de(de_ListAccessesCommand).build() {
};
__name(_ListAccessesCommand, "ListAccessesCommand");
var ListAccessesCommand = _ListAccessesCommand;

// src/commands/ListAgreementsCommand.ts




var _ListAgreementsCommand = class _ListAgreementsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListAgreements", {}).n("TransferClient", "ListAgreementsCommand").f(void 0, void 0).ser(se_ListAgreementsCommand).de(de_ListAgreementsCommand).build() {
};
__name(_ListAgreementsCommand, "ListAgreementsCommand");
var ListAgreementsCommand = _ListAgreementsCommand;

// src/commands/ListCertificatesCommand.ts




var _ListCertificatesCommand = class _ListCertificatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListCertificates", {}).n("TransferClient", "ListCertificatesCommand").f(void 0, void 0).ser(se_ListCertificatesCommand).de(de_ListCertificatesCommand).build() {
};
__name(_ListCertificatesCommand, "ListCertificatesCommand");
var ListCertificatesCommand = _ListCertificatesCommand;

// src/commands/ListConnectorsCommand.ts




var _ListConnectorsCommand = class _ListConnectorsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListConnectors", {}).n("TransferClient", "ListConnectorsCommand").f(void 0, void 0).ser(se_ListConnectorsCommand).de(de_ListConnectorsCommand).build() {
};
__name(_ListConnectorsCommand, "ListConnectorsCommand");
var ListConnectorsCommand = _ListConnectorsCommand;

// src/commands/ListExecutionsCommand.ts




var _ListExecutionsCommand = class _ListExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListExecutions", {}).n("TransferClient", "ListExecutionsCommand").f(void 0, void 0).ser(se_ListExecutionsCommand).de(de_ListExecutionsCommand).build() {
};
__name(_ListExecutionsCommand, "ListExecutionsCommand");
var ListExecutionsCommand = _ListExecutionsCommand;

// src/commands/ListHostKeysCommand.ts




var _ListHostKeysCommand = class _ListHostKeysCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListHostKeys", {}).n("TransferClient", "ListHostKeysCommand").f(void 0, void 0).ser(se_ListHostKeysCommand).de(de_ListHostKeysCommand).build() {
};
__name(_ListHostKeysCommand, "ListHostKeysCommand");
var ListHostKeysCommand = _ListHostKeysCommand;

// src/commands/ListProfilesCommand.ts




var _ListProfilesCommand = class _ListProfilesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListProfiles", {}).n("TransferClient", "ListProfilesCommand").f(void 0, void 0).ser(se_ListProfilesCommand).de(de_ListProfilesCommand).build() {
};
__name(_ListProfilesCommand, "ListProfilesCommand");
var ListProfilesCommand = _ListProfilesCommand;

// src/commands/ListSecurityPoliciesCommand.ts




var _ListSecurityPoliciesCommand = class _ListSecurityPoliciesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListSecurityPolicies", {}).n("TransferClient", "ListSecurityPoliciesCommand").f(void 0, void 0).ser(se_ListSecurityPoliciesCommand).de(de_ListSecurityPoliciesCommand).build() {
};
__name(_ListSecurityPoliciesCommand, "ListSecurityPoliciesCommand");
var ListSecurityPoliciesCommand = _ListSecurityPoliciesCommand;

// src/commands/ListServersCommand.ts




var _ListServersCommand = class _ListServersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListServers", {}).n("TransferClient", "ListServersCommand").f(void 0, void 0).ser(se_ListServersCommand).de(de_ListServersCommand).build() {
};
__name(_ListServersCommand, "ListServersCommand");
var ListServersCommand = _ListServersCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListTagsForResource", {}).n("TransferClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListUsersCommand.ts




var _ListUsersCommand = class _ListUsersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListUsers", {}).n("TransferClient", "ListUsersCommand").f(void 0, void 0).ser(se_ListUsersCommand).de(de_ListUsersCommand).build() {
};
__name(_ListUsersCommand, "ListUsersCommand");
var ListUsersCommand = _ListUsersCommand;

// src/commands/ListWorkflowsCommand.ts




var _ListWorkflowsCommand = class _ListWorkflowsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "ListWorkflows", {}).n("TransferClient", "ListWorkflowsCommand").f(void 0, void 0).ser(se_ListWorkflowsCommand).de(de_ListWorkflowsCommand).build() {
};
__name(_ListWorkflowsCommand, "ListWorkflowsCommand");
var ListWorkflowsCommand = _ListWorkflowsCommand;

// src/commands/SendWorkflowStepStateCommand.ts




var _SendWorkflowStepStateCommand = class _SendWorkflowStepStateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "SendWorkflowStepState", {}).n("TransferClient", "SendWorkflowStepStateCommand").f(void 0, void 0).ser(se_SendWorkflowStepStateCommand).de(de_SendWorkflowStepStateCommand).build() {
};
__name(_SendWorkflowStepStateCommand, "SendWorkflowStepStateCommand");
var SendWorkflowStepStateCommand = _SendWorkflowStepStateCommand;

// src/commands/StartDirectoryListingCommand.ts




var _StartDirectoryListingCommand = class _StartDirectoryListingCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "StartDirectoryListing", {}).n("TransferClient", "StartDirectoryListingCommand").f(void 0, void 0).ser(se_StartDirectoryListingCommand).de(de_StartDirectoryListingCommand).build() {
};
__name(_StartDirectoryListingCommand, "StartDirectoryListingCommand");
var StartDirectoryListingCommand = _StartDirectoryListingCommand;

// src/commands/StartFileTransferCommand.ts




var _StartFileTransferCommand = class _StartFileTransferCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "StartFileTransfer", {}).n("TransferClient", "StartFileTransferCommand").f(void 0, void 0).ser(se_StartFileTransferCommand).de(de_StartFileTransferCommand).build() {
};
__name(_StartFileTransferCommand, "StartFileTransferCommand");
var StartFileTransferCommand = _StartFileTransferCommand;

// src/commands/StartServerCommand.ts




var _StartServerCommand = class _StartServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "StartServer", {}).n("TransferClient", "StartServerCommand").f(void 0, void 0).ser(se_StartServerCommand).de(de_StartServerCommand).build() {
};
__name(_StartServerCommand, "StartServerCommand");
var StartServerCommand = _StartServerCommand;

// src/commands/StopServerCommand.ts




var _StopServerCommand = class _StopServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "StopServer", {}).n("TransferClient", "StopServerCommand").f(void 0, void 0).ser(se_StopServerCommand).de(de_StopServerCommand).build() {
};
__name(_StopServerCommand, "StopServerCommand");
var StopServerCommand = _StopServerCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "TagResource", {}).n("TransferClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/TestConnectionCommand.ts




var _TestConnectionCommand = class _TestConnectionCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "TestConnection", {}).n("TransferClient", "TestConnectionCommand").f(void 0, void 0).ser(se_TestConnectionCommand).de(de_TestConnectionCommand).build() {
};
__name(_TestConnectionCommand, "TestConnectionCommand");
var TestConnectionCommand = _TestConnectionCommand;

// src/commands/TestIdentityProviderCommand.ts




var _TestIdentityProviderCommand = class _TestIdentityProviderCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "TestIdentityProvider", {}).n("TransferClient", "TestIdentityProviderCommand").f(TestIdentityProviderRequestFilterSensitiveLog, void 0).ser(se_TestIdentityProviderCommand).de(de_TestIdentityProviderCommand).build() {
};
__name(_TestIdentityProviderCommand, "TestIdentityProviderCommand");
var TestIdentityProviderCommand = _TestIdentityProviderCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UntagResource", {}).n("TransferClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/commands/UpdateAccessCommand.ts




var _UpdateAccessCommand = class _UpdateAccessCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateAccess", {}).n("TransferClient", "UpdateAccessCommand").f(void 0, void 0).ser(se_UpdateAccessCommand).de(de_UpdateAccessCommand).build() {
};
__name(_UpdateAccessCommand, "UpdateAccessCommand");
var UpdateAccessCommand = _UpdateAccessCommand;

// src/commands/UpdateAgreementCommand.ts




var _UpdateAgreementCommand = class _UpdateAgreementCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateAgreement", {}).n("TransferClient", "UpdateAgreementCommand").f(void 0, void 0).ser(se_UpdateAgreementCommand).de(de_UpdateAgreementCommand).build() {
};
__name(_UpdateAgreementCommand, "UpdateAgreementCommand");
var UpdateAgreementCommand = _UpdateAgreementCommand;

// src/commands/UpdateCertificateCommand.ts




var _UpdateCertificateCommand = class _UpdateCertificateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateCertificate", {}).n("TransferClient", "UpdateCertificateCommand").f(void 0, void 0).ser(se_UpdateCertificateCommand).de(de_UpdateCertificateCommand).build() {
};
__name(_UpdateCertificateCommand, "UpdateCertificateCommand");
var UpdateCertificateCommand = _UpdateCertificateCommand;

// src/commands/UpdateConnectorCommand.ts




var _UpdateConnectorCommand = class _UpdateConnectorCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateConnector", {}).n("TransferClient", "UpdateConnectorCommand").f(void 0, void 0).ser(se_UpdateConnectorCommand).de(de_UpdateConnectorCommand).build() {
};
__name(_UpdateConnectorCommand, "UpdateConnectorCommand");
var UpdateConnectorCommand = _UpdateConnectorCommand;

// src/commands/UpdateHostKeyCommand.ts




var _UpdateHostKeyCommand = class _UpdateHostKeyCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateHostKey", {}).n("TransferClient", "UpdateHostKeyCommand").f(void 0, void 0).ser(se_UpdateHostKeyCommand).de(de_UpdateHostKeyCommand).build() {
};
__name(_UpdateHostKeyCommand, "UpdateHostKeyCommand");
var UpdateHostKeyCommand = _UpdateHostKeyCommand;

// src/commands/UpdateProfileCommand.ts




var _UpdateProfileCommand = class _UpdateProfileCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateProfile", {}).n("TransferClient", "UpdateProfileCommand").f(void 0, void 0).ser(se_UpdateProfileCommand).de(de_UpdateProfileCommand).build() {
};
__name(_UpdateProfileCommand, "UpdateProfileCommand");
var UpdateProfileCommand = _UpdateProfileCommand;

// src/commands/UpdateServerCommand.ts




var _UpdateServerCommand = class _UpdateServerCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateServer", {}).n("TransferClient", "UpdateServerCommand").f(UpdateServerRequestFilterSensitiveLog, void 0).ser(se_UpdateServerCommand).de(de_UpdateServerCommand).build() {
};
__name(_UpdateServerCommand, "UpdateServerCommand");
var UpdateServerCommand = _UpdateServerCommand;

// src/commands/UpdateUserCommand.ts




var _UpdateUserCommand = class _UpdateUserCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("TransferService", "UpdateUser", {}).n("TransferClient", "UpdateUserCommand").f(void 0, void 0).ser(se_UpdateUserCommand).de(de_UpdateUserCommand).build() {
};
__name(_UpdateUserCommand, "UpdateUserCommand");
var UpdateUserCommand = _UpdateUserCommand;

// src/Transfer.ts
var commands = {
  CreateAccessCommand,
  CreateAgreementCommand,
  CreateConnectorCommand,
  CreateProfileCommand,
  CreateServerCommand,
  CreateUserCommand,
  CreateWorkflowCommand,
  DeleteAccessCommand,
  DeleteAgreementCommand,
  DeleteCertificateCommand,
  DeleteConnectorCommand,
  DeleteHostKeyCommand,
  DeleteProfileCommand,
  DeleteServerCommand,
  DeleteSshPublicKeyCommand,
  DeleteUserCommand,
  DeleteWorkflowCommand,
  DescribeAccessCommand,
  DescribeAgreementCommand,
  DescribeCertificateCommand,
  DescribeConnectorCommand,
  DescribeExecutionCommand,
  DescribeHostKeyCommand,
  DescribeProfileCommand,
  DescribeSecurityPolicyCommand,
  DescribeServerCommand,
  DescribeUserCommand,
  DescribeWorkflowCommand,
  ImportCertificateCommand,
  ImportHostKeyCommand,
  ImportSshPublicKeyCommand,
  ListAccessesCommand,
  ListAgreementsCommand,
  ListCertificatesCommand,
  ListConnectorsCommand,
  ListExecutionsCommand,
  ListHostKeysCommand,
  ListProfilesCommand,
  ListSecurityPoliciesCommand,
  ListServersCommand,
  ListTagsForResourceCommand,
  ListUsersCommand,
  ListWorkflowsCommand,
  SendWorkflowStepStateCommand,
  StartDirectoryListingCommand,
  StartFileTransferCommand,
  StartServerCommand,
  StopServerCommand,
  TagResourceCommand,
  TestConnectionCommand,
  TestIdentityProviderCommand,
  UntagResourceCommand,
  UpdateAccessCommand,
  UpdateAgreementCommand,
  UpdateCertificateCommand,
  UpdateConnectorCommand,
  UpdateHostKeyCommand,
  UpdateProfileCommand,
  UpdateServerCommand,
  UpdateUserCommand
};
var _Transfer = class _Transfer extends TransferClient {
};
__name(_Transfer, "Transfer");
var Transfer = _Transfer;
(0, import_smithy_client.createAggregatedClient)(commands, Transfer);

// src/pagination/ListAccessesPaginator.ts

var paginateListAccesses = (0, import_core.createPaginator)(TransferClient, ListAccessesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListAgreementsPaginator.ts

var paginateListAgreements = (0, import_core.createPaginator)(TransferClient, ListAgreementsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListCertificatesPaginator.ts

var paginateListCertificates = (0, import_core.createPaginator)(TransferClient, ListCertificatesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListConnectorsPaginator.ts

var paginateListConnectors = (0, import_core.createPaginator)(TransferClient, ListConnectorsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListExecutionsPaginator.ts

var paginateListExecutions = (0, import_core.createPaginator)(TransferClient, ListExecutionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListProfilesPaginator.ts

var paginateListProfiles = (0, import_core.createPaginator)(TransferClient, ListProfilesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListSecurityPoliciesPaginator.ts

var paginateListSecurityPolicies = (0, import_core.createPaginator)(TransferClient, ListSecurityPoliciesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListServersPaginator.ts

var paginateListServers = (0, import_core.createPaginator)(TransferClient, ListServersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTagsForResourcePaginator.ts

var paginateListTagsForResource = (0, import_core.createPaginator)(TransferClient, ListTagsForResourceCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListUsersPaginator.ts

var paginateListUsers = (0, import_core.createPaginator)(TransferClient, ListUsersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListWorkflowsPaginator.ts

var paginateListWorkflows = (0, import_core.createPaginator)(TransferClient, ListWorkflowsCommand, "NextToken", "NextToken", "MaxResults");

// src/waiters/waitForServerOffline.ts
var import_util_waiter = require("@smithy/util-waiter");
var checkState = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeServerCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Server.State;
      }, "returnComparator");
      if (returnComparator() === "OFFLINE") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Server.State;
      }, "returnComparator");
      if (returnComparator() === "STOP_FAILED") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForServerOffline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 3600 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
}, "waitForServerOffline");
var waitUntilServerOffline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 3600 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilServerOffline");

// src/waiters/waitForServerOnline.ts

var checkState2 = /* @__PURE__ */ __name(async (client, input) => {
  let reason;
  try {
    const result = await client.send(new DescribeServerCommand(input));
    reason = result;
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Server.State;
      }, "returnComparator");
      if (returnComparator() === "ONLINE") {
        return { state: import_util_waiter.WaiterState.SUCCESS, reason };
      }
    } catch (e) {
    }
    try {
      const returnComparator = /* @__PURE__ */ __name(() => {
        return result.Server.State;
      }, "returnComparator");
      if (returnComparator() === "START_FAILED") {
        return { state: import_util_waiter.WaiterState.FAILURE, reason };
      }
    } catch (e) {
    }
  } catch (exception) {
    reason = exception;
  }
  return { state: import_util_waiter.WaiterState.RETRY, reason };
}, "checkState");
var waitForServerOnline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 3600 };
  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
}, "waitForServerOnline");
var waitUntilServerOnline = /* @__PURE__ */ __name(async (params, input) => {
  const serviceDefaults = { minDelay: 30, maxDelay: 3600 };
  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState2);
  return (0, import_util_waiter.checkExceptions)(result);
}, "waitUntilServerOnline");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  TransferServiceException,
  __Client,
  TransferClient,
  Transfer,
  $Command,
  CreateAccessCommand,
  CreateAgreementCommand,
  CreateConnectorCommand,
  CreateProfileCommand,
  CreateServerCommand,
  CreateUserCommand,
  CreateWorkflowCommand,
  DeleteAccessCommand,
  DeleteAgreementCommand,
  DeleteCertificateCommand,
  DeleteConnectorCommand,
  DeleteHostKeyCommand,
  DeleteProfileCommand,
  DeleteServerCommand,
  DeleteSshPublicKeyCommand,
  DeleteUserCommand,
  DeleteWorkflowCommand,
  DescribeAccessCommand,
  DescribeAgreementCommand,
  DescribeCertificateCommand,
  DescribeConnectorCommand,
  DescribeExecutionCommand,
  DescribeHostKeyCommand,
  DescribeProfileCommand,
  DescribeSecurityPolicyCommand,
  DescribeServerCommand,
  DescribeUserCommand,
  DescribeWorkflowCommand,
  ImportCertificateCommand,
  ImportHostKeyCommand,
  ImportSshPublicKeyCommand,
  ListAccessesCommand,
  ListAgreementsCommand,
  ListCertificatesCommand,
  ListConnectorsCommand,
  ListExecutionsCommand,
  ListHostKeysCommand,
  ListProfilesCommand,
  ListSecurityPoliciesCommand,
  ListServersCommand,
  ListTagsForResourceCommand,
  ListUsersCommand,
  ListWorkflowsCommand,
  SendWorkflowStepStateCommand,
  StartDirectoryListingCommand,
  StartFileTransferCommand,
  StartServerCommand,
  StopServerCommand,
  TagResourceCommand,
  TestConnectionCommand,
  TestIdentityProviderCommand,
  UntagResourceCommand,
  UpdateAccessCommand,
  UpdateAgreementCommand,
  UpdateCertificateCommand,
  UpdateConnectorCommand,
  UpdateHostKeyCommand,
  UpdateProfileCommand,
  UpdateServerCommand,
  UpdateUserCommand,
  paginateListAccesses,
  paginateListAgreements,
  paginateListCertificates,
  paginateListConnectors,
  paginateListExecutions,
  paginateListProfiles,
  paginateListSecurityPolicies,
  paginateListServers,
  paginateListTagsForResource,
  paginateListUsers,
  paginateListWorkflows,
  waitForServerOffline,
  waitUntilServerOffline,
  waitForServerOnline,
  waitUntilServerOnline,
  AccessDeniedException,
  AgreementStatusType,
  CompressionEnum,
  EncryptionAlg,
  MdnResponse,
  MdnSigningAlg,
  SigningAlg,
  As2Transport,
  CertificateStatusType,
  CertificateType,
  CertificateUsageType,
  ConflictException,
  OverwriteExisting,
  MapType,
  HomeDirectoryType,
  InternalServiceError,
  InvalidRequestException,
  ResourceExistsException,
  ResourceNotFoundException,
  ServiceUnavailableException,
  ThrottlingException,
  ProfileType,
  Domain,
  EndpointType,
  SftpAuthenticationMethods,
  IdentityProviderType,
  SetStatOption,
  TlsSessionResumptionMode,
  Protocol,
  DirectoryListingOptimization,
  EncryptionType,
  WorkflowStepType,
  CustomStepStatus,
  ExecutionErrorType,
  ExecutionStatus,
  SecurityPolicyProtocol,
  SecurityPolicyResourceType,
  State,
  InvalidNextTokenException,
  CreateServerRequestFilterSensitiveLog,
  DescribedCertificateFilterSensitiveLog,
  DescribeCertificateResponseFilterSensitiveLog,
  ImportCertificateRequestFilterSensitiveLog,
  ImportHostKeyRequestFilterSensitiveLog,
  TestIdentityProviderRequestFilterSensitiveLog,
  UpdateServerRequestFilterSensitiveLog
});

