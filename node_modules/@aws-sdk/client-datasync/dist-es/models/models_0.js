import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { DataSyncServiceException as __BaseException } from "./DataSyncServiceException";
export const DiscoverySystemType = {
    NetAppONTAP: "NetAppONTAP",
};
export class InternalException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalException.prototype);
        this.errorCode = opts.errorCode;
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
        this.errorCode = opts.errorCode;
        this.datasyncErrorCode = opts.datasyncErrorCode;
    }
}
export const AgentStatus = {
    OFFLINE: "OFFLINE",
    ONLINE: "ONLINE",
};
export const Atime = {
    BEST_EFFORT: "BEST_EFFORT",
    NONE: "NONE",
};
export const AzureAccessTier = {
    ARCHIVE: "ARCHIVE",
    COOL: "COOL",
    HOT: "HOT",
};
export const AzureBlobAuthenticationType = {
    SAS: "SAS",
};
export const AzureBlobType = {
    BLOCK: "BLOCK",
};
export const EfsInTransitEncryption = {
    NONE: "NONE",
    TLS1_2: "TLS1_2",
};
export const NfsVersion = {
    AUTOMATIC: "AUTOMATIC",
    NFS3: "NFS3",
    NFS4_0: "NFS4_0",
    NFS4_1: "NFS4_1",
};
export const SmbVersion = {
    AUTOMATIC: "AUTOMATIC",
    SMB1: "SMB1",
    SMB2: "SMB2",
    SMB2_0: "SMB2_0",
    SMB3: "SMB3",
};
export const HdfsAuthenticationType = {
    KERBEROS: "KERBEROS",
    SIMPLE: "SIMPLE",
};
export const HdfsDataTransferProtection = {
    AUTHENTICATION: "AUTHENTICATION",
    DISABLED: "DISABLED",
    INTEGRITY: "INTEGRITY",
    PRIVACY: "PRIVACY",
};
export const HdfsRpcProtection = {
    AUTHENTICATION: "AUTHENTICATION",
    DISABLED: "DISABLED",
    INTEGRITY: "INTEGRITY",
    PRIVACY: "PRIVACY",
};
export const ObjectStorageServerProtocol = {
    HTTP: "HTTP",
    HTTPS: "HTTPS",
};
export const S3StorageClass = {
    DEEP_ARCHIVE: "DEEP_ARCHIVE",
    GLACIER: "GLACIER",
    GLACIER_INSTANT_RETRIEVAL: "GLACIER_INSTANT_RETRIEVAL",
    INTELLIGENT_TIERING: "INTELLIGENT_TIERING",
    ONEZONE_IA: "ONEZONE_IA",
    OUTPOSTS: "OUTPOSTS",
    STANDARD: "STANDARD",
    STANDARD_IA: "STANDARD_IA",
};
export const FilterType = {
    SIMPLE_PATTERN: "SIMPLE_PATTERN",
};
export const ManifestAction = {
    TRANSFER: "TRANSFER",
};
export const ManifestFormat = {
    CSV: "CSV",
};
export const Gid = {
    BOTH: "BOTH",
    INT_VALUE: "INT_VALUE",
    NAME: "NAME",
    NONE: "NONE",
};
export const LogLevel = {
    BASIC: "BASIC",
    OFF: "OFF",
    TRANSFER: "TRANSFER",
};
export const Mtime = {
    NONE: "NONE",
    PRESERVE: "PRESERVE",
};
export const ObjectTags = {
    NONE: "NONE",
    PRESERVE: "PRESERVE",
};
export const OverwriteMode = {
    ALWAYS: "ALWAYS",
    NEVER: "NEVER",
};
export const PosixPermissions = {
    NONE: "NONE",
    PRESERVE: "PRESERVE",
};
export const PreserveDeletedFiles = {
    PRESERVE: "PRESERVE",
    REMOVE: "REMOVE",
};
export const PreserveDevices = {
    NONE: "NONE",
    PRESERVE: "PRESERVE",
};
export const SmbSecurityDescriptorCopyFlags = {
    NONE: "NONE",
    OWNER_DACL: "OWNER_DACL",
    OWNER_DACL_SACL: "OWNER_DACL_SACL",
};
export const TaskQueueing = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const TransferMode = {
    ALL: "ALL",
    CHANGED: "CHANGED",
};
export const Uid = {
    BOTH: "BOTH",
    INT_VALUE: "INT_VALUE",
    NAME: "NAME",
    NONE: "NONE",
};
export const VerifyMode = {
    NONE: "NONE",
    ONLY_FILES_TRANSFERRED: "ONLY_FILES_TRANSFERRED",
    POINT_IN_TIME_CONSISTENT: "POINT_IN_TIME_CONSISTENT",
};
export const ScheduleStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const ObjectVersionIds = {
    INCLUDE: "INCLUDE",
    NONE: "NONE",
};
export const ReportOutputType = {
    STANDARD: "STANDARD",
    SUMMARY_ONLY: "SUMMARY_ONLY",
};
export const ReportLevel = {
    ERRORS_ONLY: "ERRORS_ONLY",
    SUCCESSES_AND_ERRORS: "SUCCESSES_AND_ERRORS",
};
export const EndpointType = {
    FIPS: "FIPS",
    PRIVATE_LINK: "PRIVATE_LINK",
    PUBLIC: "PUBLIC",
};
export const DiscoveryJobStatus = {
    COMPLETED: "COMPLETED",
    COMPLETED_WITH_ISSUES: "COMPLETED_WITH_ISSUES",
    FAILED: "FAILED",
    RUNNING: "RUNNING",
    STOPPED: "STOPPED",
    TERMINATED: "TERMINATED",
    WARNING: "WARNING",
};
export const StorageSystemConnectivityStatus = {
    FAIL: "FAIL",
    PASS: "PASS",
    UNKNOWN: "UNKNOWN",
};
export const DiscoveryResourceType = {
    CLUSTER: "CLUSTER",
    SVM: "SVM",
    VOLUME: "VOLUME",
};
export const DiscoveryResourceFilter = {
    SVM: "SVM",
};
export const RecommendationStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    NONE: "NONE",
};
export const ScheduleDisabledBy = {
    SERVICE: "SERVICE",
    USER: "USER",
};
export const TaskStatus = {
    AVAILABLE: "AVAILABLE",
    CREATING: "CREATING",
    QUEUED: "QUEUED",
    RUNNING: "RUNNING",
    UNAVAILABLE: "UNAVAILABLE",
};
export const PhaseStatus = {
    ERROR: "ERROR",
    PENDING: "PENDING",
    SUCCESS: "SUCCESS",
};
export const TaskExecutionStatus = {
    ERROR: "ERROR",
    LAUNCHING: "LAUNCHING",
    PREPARING: "PREPARING",
    QUEUED: "QUEUED",
    SUCCESS: "SUCCESS",
    TRANSFERRING: "TRANSFERRING",
    VERIFYING: "VERIFYING",
};
export const LocationFilterName = {
    CreationTime: "CreationTime",
    LocationType: "LocationType",
    LocationUri: "LocationUri",
};
export const Operator = {
    BEGINS_WITH: "BeginsWith",
    CONTAINS: "Contains",
    EQ: "Equals",
    GE: "GreaterThanOrEqual",
    GT: "GreaterThan",
    IN: "In",
    LE: "LessThanOrEqual",
    LT: "LessThan",
    NE: "NotEquals",
    NOT_CONTAINS: "NotContains",
};
export const TaskFilterName = {
    CreationTime: "CreationTime",
    LocationId: "LocationId",
};
export const CredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: SENSITIVE_STRING }),
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const AddStorageSystemRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),
});
export const AzureBlobSasConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Token && { Token: SENSITIVE_STRING }),
});
export const CreateLocationAzureBlobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SasConfiguration && { SasConfiguration: AzureBlobSasConfigurationFilterSensitiveLog(obj.SasConfiguration) }),
});
export const FsxProtocolSmbFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const FsxProtocolFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SMB && { SMB: FsxProtocolSmbFilterSensitiveLog(obj.SMB) }),
});
export const CreateLocationFsxOntapRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Protocol && { Protocol: FsxProtocolFilterSensitiveLog(obj.Protocol) }),
});
export const CreateLocationFsxOpenZfsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Protocol && { Protocol: FsxProtocolFilterSensitiveLog(obj.Protocol) }),
});
export const CreateLocationFsxWindowsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const CreateLocationObjectStorageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretKey && { SecretKey: SENSITIVE_STRING }),
});
export const CreateLocationSmbRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const DescribeLocationFsxOntapResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Protocol && { Protocol: FsxProtocolFilterSensitiveLog(obj.Protocol) }),
});
export const DescribeLocationFsxOpenZfsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Protocol && { Protocol: FsxProtocolFilterSensitiveLog(obj.Protocol) }),
});
export const UpdateLocationAzureBlobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SasConfiguration && { SasConfiguration: AzureBlobSasConfigurationFilterSensitiveLog(obj.SasConfiguration) }),
});
export const UpdateLocationObjectStorageRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretKey && { SecretKey: SENSITIVE_STRING }),
});
export const UpdateLocationSmbRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Password && { Password: SENSITIVE_STRING }),
});
export const UpdateStorageSystemRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),
});
