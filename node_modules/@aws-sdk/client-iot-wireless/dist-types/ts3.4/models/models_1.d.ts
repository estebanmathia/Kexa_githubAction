import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { IoTWirelessServiceException as __BaseException } from "./IoTWirelessServiceException";
import {
  ApplicationConfig,
  CertificateList,
  ConnectionStatusEventConfiguration,
  ConnectionStatusResourceTypeEventConfiguration,
  DeviceRegistrationStateEventConfiguration,
  DeviceRegistrationStateResourceTypeEventConfiguration,
  DownlinkQueueMessage,
  EventNotificationPartnerType,
  ExpressionType,
  FuotaDeviceStatus,
  IdentifierType,
  ImportTaskStatus,
  JoinEventConfiguration,
  JoinResourceTypeEventConfiguration,
  LogLevel,
  LoRaWANFuotaTask,
  LoRaWANGateway,
  LoRaWANGatewayVersion,
  LoRaWANMulticast,
  LoRaWANMulticastSession,
  LoRaWANSendDataToDevice,
  MessageDeliveryStatusEventConfiguration,
  MessageDeliveryStatusResourceTypeEventConfiguration,
  PartnerType,
  PositionConfigurationFec,
  PositionConfigurationStatus,
  Positioning,
  PositioningConfigStatus,
  PositionResourceType,
  PositionSolverDetails,
  ProximityEventConfiguration,
  ProximityResourceTypeEventConfiguration,
  SidewalkGetStartImportInfo,
  SummaryMetricConfiguration,
  Tag,
  TraceContent,
  WirelessDeviceLogOption,
  WirelessDeviceSidewalkStatus,
  WirelessDeviceType,
  WirelessGatewayLogOption,
} from "./models_0";
export interface ListPositionConfigurationsRequest {
  ResourceType?: PositionResourceType;
  MaxResults?: number;
  NextToken?: string;
}
export interface PositionConfigurationItem {
  ResourceIdentifier?: string;
  ResourceType?: PositionResourceType;
  Solvers?: PositionSolverDetails;
  Destination?: string;
}
export interface ListPositionConfigurationsResponse {
  PositionConfigurationList?: PositionConfigurationItem[];
  NextToken?: string;
}
export interface ListQueuedMessagesRequest {
  Id: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  WirelessDeviceType?: WirelessDeviceType;
}
export interface ListQueuedMessagesResponse {
  NextToken?: string;
  DownlinkQueueMessagesList?: DownlinkQueueMessage[];
}
export interface ListServiceProfilesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ServiceProfile {
  Arn?: string;
  Name?: string;
  Id?: string;
}
export interface ListServiceProfilesResponse {
  NextToken?: string;
  ServiceProfileList?: ServiceProfile[];
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export interface ListWirelessDeviceImportTasksRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface WirelessDeviceImportTask {
  Id?: string;
  Arn?: string;
  DestinationName?: string;
  Sidewalk?: SidewalkGetStartImportInfo;
  CreationTime?: Date;
  Status?: ImportTaskStatus;
  StatusReason?: string;
  InitializedImportedDeviceCount?: number;
  PendingImportedDeviceCount?: number;
  OnboardedImportedDeviceCount?: number;
  FailedImportedDeviceCount?: number;
}
export interface ListWirelessDeviceImportTasksResponse {
  NextToken?: string;
  WirelessDeviceImportTaskList?: WirelessDeviceImportTask[];
}
export interface ListWirelessDevicesRequest {
  MaxResults?: number;
  NextToken?: string;
  DestinationName?: string;
  DeviceProfileId?: string;
  ServiceProfileId?: string;
  WirelessDeviceType?: WirelessDeviceType;
  FuotaTaskId?: string;
  MulticastGroupId?: string;
}
export interface LoRaWANListDevice {
  DevEui?: string;
}
export interface SidewalkListDevice {
  AmazonId?: string;
  SidewalkId?: string;
  SidewalkManufacturingSn?: string;
  DeviceCertificates?: CertificateList[];
  DeviceProfileId?: string;
  Status?: WirelessDeviceSidewalkStatus;
}
export interface WirelessDeviceStatistics {
  Arn?: string;
  Id?: string;
  Type?: WirelessDeviceType;
  Name?: string;
  DestinationName?: string;
  LastUplinkReceivedAt?: string;
  LoRaWAN?: LoRaWANListDevice;
  Sidewalk?: SidewalkListDevice;
  FuotaDeviceStatus?: FuotaDeviceStatus;
  MulticastDeviceStatus?: string;
  McGroupId?: number;
}
export interface ListWirelessDevicesResponse {
  NextToken?: string;
  WirelessDeviceList?: WirelessDeviceStatistics[];
}
export interface ListWirelessGatewaysRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface WirelessGatewayStatistics {
  Arn?: string;
  Id?: string;
  Name?: string;
  Description?: string;
  LoRaWAN?: LoRaWANGateway;
  LastUplinkReceivedAt?: string;
}
export interface ListWirelessGatewaysResponse {
  NextToken?: string;
  WirelessGatewayList?: WirelessGatewayStatistics[];
}
export declare const WirelessGatewayTaskDefinitionType: {
  readonly UPDATE: "UPDATE";
};
export type WirelessGatewayTaskDefinitionType =
  (typeof WirelessGatewayTaskDefinitionType)[keyof typeof WirelessGatewayTaskDefinitionType];
export interface ListWirelessGatewayTaskDefinitionsRequest {
  MaxResults?: number;
  NextToken?: string;
  TaskDefinitionType?: WirelessGatewayTaskDefinitionType;
}
export interface LoRaWANUpdateGatewayTaskEntry {
  CurrentVersion?: LoRaWANGatewayVersion;
  UpdateVersion?: LoRaWANGatewayVersion;
}
export interface UpdateWirelessGatewayTaskEntry {
  Id?: string;
  LoRaWAN?: LoRaWANUpdateGatewayTaskEntry;
  Arn?: string;
}
export interface ListWirelessGatewayTaskDefinitionsResponse {
  NextToken?: string;
  TaskDefinitions?: UpdateWirelessGatewayTaskEntry[];
}
export interface SemtechGnssConfiguration {
  Status: PositionConfigurationStatus | undefined;
  Fec: PositionConfigurationFec | undefined;
}
export interface PositionSolverConfigurations {
  SemtechGnss?: SemtechGnssConfiguration;
}
export interface PutPositionConfigurationRequest {
  ResourceIdentifier: string | undefined;
  ResourceType: PositionResourceType | undefined;
  Solvers?: PositionSolverConfigurations;
  Destination?: string;
}
export interface PutPositionConfigurationResponse {}
export interface PutResourceLogLevelRequest {
  ResourceIdentifier: string | undefined;
  ResourceType: string | undefined;
  LogLevel: LogLevel | undefined;
}
export interface PutResourceLogLevelResponse {}
export interface ResetAllResourceLogLevelsRequest {}
export interface ResetAllResourceLogLevelsResponse {}
export interface ResetResourceLogLevelRequest {
  ResourceIdentifier: string | undefined;
  ResourceType: string | undefined;
}
export interface ResetResourceLogLevelResponse {}
export interface LoRaWANMulticastMetadata {
  FPort?: number;
}
export interface MulticastWirelessMetadata {
  LoRaWAN?: LoRaWANMulticastMetadata;
}
export interface SendDataToMulticastGroupRequest {
  Id: string | undefined;
  PayloadData: string | undefined;
  WirelessMetadata: MulticastWirelessMetadata | undefined;
}
export interface SendDataToMulticastGroupResponse {
  MessageId?: string;
}
export declare const MessageType: {
  readonly CUSTOM_COMMAND_ID_GET: "CUSTOM_COMMAND_ID_GET";
  readonly CUSTOM_COMMAND_ID_NOTIFY: "CUSTOM_COMMAND_ID_NOTIFY";
  readonly CUSTOM_COMMAND_ID_RESP: "CUSTOM_COMMAND_ID_RESP";
  readonly CUSTOM_COMMAND_ID_SET: "CUSTOM_COMMAND_ID_SET";
};
export type MessageType = (typeof MessageType)[keyof typeof MessageType];
export interface SidewalkSendDataToDevice {
  Seq?: number;
  MessageType?: MessageType;
  AckModeRetryDurationSecs?: number;
}
export interface WirelessMetadata {
  LoRaWAN?: LoRaWANSendDataToDevice;
  Sidewalk?: SidewalkSendDataToDevice;
}
export interface SendDataToWirelessDeviceRequest {
  Id: string | undefined;
  TransmitMode: number | undefined;
  PayloadData: string | undefined;
  WirelessMetadata?: WirelessMetadata;
}
export interface SendDataToWirelessDeviceResponse {
  MessageId?: string;
}
export interface StartBulkAssociateWirelessDeviceWithMulticastGroupRequest {
  Id: string | undefined;
  QueryString?: string;
  Tags?: Tag[];
}
export interface StartBulkAssociateWirelessDeviceWithMulticastGroupResponse {}
export interface StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest {
  Id: string | undefined;
  QueryString?: string;
  Tags?: Tag[];
}
export interface StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse {}
export interface LoRaWANStartFuotaTask {
  StartTime?: Date;
}
export interface StartFuotaTaskRequest {
  Id: string | undefined;
  LoRaWAN?: LoRaWANStartFuotaTask;
}
export interface StartFuotaTaskResponse {}
export interface StartMulticastGroupSessionRequest {
  Id: string | undefined;
  LoRaWAN: LoRaWANMulticastSession | undefined;
}
export interface StartMulticastGroupSessionResponse {}
export interface SidewalkSingleStartImportInfo {
  SidewalkManufacturingSn?: string;
}
export interface StartSingleWirelessDeviceImportTaskRequest {
  DestinationName: string | undefined;
  ClientRequestToken?: string;
  DeviceName?: string;
  Tags?: Tag[];
  Sidewalk: SidewalkSingleStartImportInfo | undefined;
}
export interface StartSingleWirelessDeviceImportTaskResponse {
  Id?: string;
  Arn?: string;
}
export interface SidewalkStartImportInfo {
  DeviceCreationFile?: string;
  Role?: string;
}
export interface StartWirelessDeviceImportTaskRequest {
  DestinationName: string | undefined;
  ClientRequestToken?: string;
  Tags?: Tag[];
  Sidewalk: SidewalkStartImportInfo | undefined;
}
export interface StartWirelessDeviceImportTaskResponse {
  Id?: string;
  Arn?: string;
}
export interface TagResourceRequest {
  ResourceArn: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  Message?: string;
  ResourceName?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export interface TestWirelessDeviceRequest {
  Id: string | undefined;
}
export interface TestWirelessDeviceResponse {
  Result?: string;
}
export interface UntagResourceRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDestinationRequest {
  Name: string | undefined;
  ExpressionType?: ExpressionType;
  Expression?: string;
  Description?: string;
  RoleArn?: string;
}
export interface UpdateDestinationResponse {}
export interface UpdateEventConfigurationByResourceTypesRequest {
  DeviceRegistrationState?: DeviceRegistrationStateResourceTypeEventConfiguration;
  Proximity?: ProximityResourceTypeEventConfiguration;
  Join?: JoinResourceTypeEventConfiguration;
  ConnectionStatus?: ConnectionStatusResourceTypeEventConfiguration;
  MessageDeliveryStatus?: MessageDeliveryStatusResourceTypeEventConfiguration;
}
export interface UpdateEventConfigurationByResourceTypesResponse {}
export interface UpdateFuotaTaskRequest {
  Id: string | undefined;
  Name?: string;
  Description?: string;
  LoRaWAN?: LoRaWANFuotaTask;
  FirmwareUpdateImage?: string;
  FirmwareUpdateRole?: string;
  RedundancyPercent?: number;
  FragmentSizeBytes?: number;
  FragmentIntervalMS?: number;
}
export interface UpdateFuotaTaskResponse {}
export interface UpdateLogLevelsByResourceTypesRequest {
  DefaultLogLevel?: LogLevel;
  WirelessDeviceLogOptions?: WirelessDeviceLogOption[];
  WirelessGatewayLogOptions?: WirelessGatewayLogOption[];
}
export interface UpdateLogLevelsByResourceTypesResponse {}
export interface UpdateMetricConfigurationRequest {
  SummaryMetric?: SummaryMetricConfiguration;
}
export interface UpdateMetricConfigurationResponse {}
export interface UpdateMulticastGroupRequest {
  Id: string | undefined;
  Name?: string;
  Description?: string;
  LoRaWAN?: LoRaWANMulticast;
}
export interface UpdateMulticastGroupResponse {}
export interface UpdateNetworkAnalyzerConfigurationRequest {
  ConfigurationName: string | undefined;
  TraceContent?: TraceContent;
  WirelessDevicesToAdd?: string[];
  WirelessDevicesToRemove?: string[];
  WirelessGatewaysToAdd?: string[];
  WirelessGatewaysToRemove?: string[];
  Description?: string;
  MulticastGroupsToAdd?: string[];
  MulticastGroupsToRemove?: string[];
}
export interface UpdateNetworkAnalyzerConfigurationResponse {}
export interface SidewalkUpdateAccount {
  AppServerPrivateKey?: string;
}
export interface UpdatePartnerAccountRequest {
  Sidewalk: SidewalkUpdateAccount | undefined;
  PartnerAccountId: string | undefined;
  PartnerType: PartnerType | undefined;
}
export interface UpdatePartnerAccountResponse {}
export interface UpdatePositionRequest {
  ResourceIdentifier: string | undefined;
  ResourceType: PositionResourceType | undefined;
  Position: number[] | undefined;
}
export interface UpdatePositionResponse {}
export interface UpdateResourceEventConfigurationRequest {
  Identifier: string | undefined;
  IdentifierType: IdentifierType | undefined;
  PartnerType?: EventNotificationPartnerType;
  DeviceRegistrationState?: DeviceRegistrationStateEventConfiguration;
  Proximity?: ProximityEventConfiguration;
  Join?: JoinEventConfiguration;
  ConnectionStatus?: ConnectionStatusEventConfiguration;
  MessageDeliveryStatus?: MessageDeliveryStatusEventConfiguration;
}
export interface UpdateResourceEventConfigurationResponse {}
export interface UpdateResourcePositionRequest {
  ResourceIdentifier: string | undefined;
  ResourceType: PositionResourceType | undefined;
  GeoJsonPayload?: Uint8Array;
}
export interface UpdateResourcePositionResponse {}
export interface UpdateAbpV1_0_x {
  FCntStart?: number;
}
export interface UpdateAbpV1_1 {
  FCntStart?: number;
}
export interface UpdateFPorts {
  Positioning?: Positioning;
  Applications?: ApplicationConfig[];
}
export interface LoRaWANUpdateDevice {
  DeviceProfileId?: string;
  ServiceProfileId?: string;
  AbpV1_1?: UpdateAbpV1_1;
  AbpV1_0_x?: UpdateAbpV1_0_x;
  FPorts?: UpdateFPorts;
}
export interface UpdateWirelessDeviceRequest {
  Id: string | undefined;
  DestinationName?: string;
  Name?: string;
  Description?: string;
  LoRaWAN?: LoRaWANUpdateDevice;
  Positioning?: PositioningConfigStatus;
}
export interface UpdateWirelessDeviceResponse {}
export interface SidewalkUpdateImportInfo {
  DeviceCreationFile?: string;
}
export interface UpdateWirelessDeviceImportTaskRequest {
  Id: string | undefined;
  Sidewalk: SidewalkUpdateImportInfo | undefined;
}
export interface UpdateWirelessDeviceImportTaskResponse {}
export interface UpdateWirelessGatewayRequest {
  Id: string | undefined;
  Name?: string;
  Description?: string;
  JoinEuiFilters?: string[][];
  NetIdFilters?: string[];
  MaxEirp?: number;
}
export interface UpdateWirelessGatewayResponse {}
export declare const SidewalkUpdateAccountFilterSensitiveLog: (
  obj: SidewalkUpdateAccount
) => any;
export declare const UpdatePartnerAccountRequestFilterSensitiveLog: (
  obj: UpdatePartnerAccountRequest
) => any;
