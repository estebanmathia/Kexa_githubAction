"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  CancelJobRunCommand: () => CancelJobRunCommand,
  CertificateProviderType: () => CertificateProviderType,
  ConfigurationFilterSensitiveLog: () => ConfigurationFilterSensitiveLog,
  ConfigurationOverridesFilterSensitiveLog: () => ConfigurationOverridesFilterSensitiveLog,
  ContainerInfo: () => ContainerInfo,
  ContainerProviderType: () => ContainerProviderType,
  CreateJobTemplateCommand: () => CreateJobTemplateCommand,
  CreateJobTemplateRequestFilterSensitiveLog: () => CreateJobTemplateRequestFilterSensitiveLog,
  CreateManagedEndpointCommand: () => CreateManagedEndpointCommand,
  CreateManagedEndpointRequestFilterSensitiveLog: () => CreateManagedEndpointRequestFilterSensitiveLog,
  CreateSecurityConfigurationCommand: () => CreateSecurityConfigurationCommand,
  CreateVirtualClusterCommand: () => CreateVirtualClusterCommand,
  Credentials: () => Credentials,
  CredentialsFilterSensitiveLog: () => CredentialsFilterSensitiveLog,
  DeleteJobTemplateCommand: () => DeleteJobTemplateCommand,
  DeleteManagedEndpointCommand: () => DeleteManagedEndpointCommand,
  DeleteVirtualClusterCommand: () => DeleteVirtualClusterCommand,
  DescribeJobRunCommand: () => DescribeJobRunCommand,
  DescribeJobRunResponseFilterSensitiveLog: () => DescribeJobRunResponseFilterSensitiveLog,
  DescribeJobTemplateCommand: () => DescribeJobTemplateCommand,
  DescribeJobTemplateResponseFilterSensitiveLog: () => DescribeJobTemplateResponseFilterSensitiveLog,
  DescribeManagedEndpointCommand: () => DescribeManagedEndpointCommand,
  DescribeManagedEndpointResponseFilterSensitiveLog: () => DescribeManagedEndpointResponseFilterSensitiveLog,
  DescribeSecurityConfigurationCommand: () => DescribeSecurityConfigurationCommand,
  DescribeVirtualClusterCommand: () => DescribeVirtualClusterCommand,
  EKSRequestThrottledException: () => EKSRequestThrottledException,
  EMRContainers: () => EMRContainers,
  EMRContainersClient: () => EMRContainersClient,
  EMRContainersServiceException: () => EMRContainersServiceException,
  EndpointFilterSensitiveLog: () => EndpointFilterSensitiveLog,
  EndpointState: () => EndpointState,
  FailureReason: () => FailureReason,
  GetManagedEndpointSessionCredentialsCommand: () => GetManagedEndpointSessionCredentialsCommand,
  GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog: () => GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog,
  InternalServerException: () => InternalServerException,
  JobDriverFilterSensitiveLog: () => JobDriverFilterSensitiveLog,
  JobRunFilterSensitiveLog: () => JobRunFilterSensitiveLog,
  JobRunState: () => JobRunState,
  JobTemplateDataFilterSensitiveLog: () => JobTemplateDataFilterSensitiveLog,
  JobTemplateFilterSensitiveLog: () => JobTemplateFilterSensitiveLog,
  ListJobRunsCommand: () => ListJobRunsCommand,
  ListJobRunsResponseFilterSensitiveLog: () => ListJobRunsResponseFilterSensitiveLog,
  ListJobTemplatesCommand: () => ListJobTemplatesCommand,
  ListJobTemplatesResponseFilterSensitiveLog: () => ListJobTemplatesResponseFilterSensitiveLog,
  ListManagedEndpointsCommand: () => ListManagedEndpointsCommand,
  ListManagedEndpointsResponseFilterSensitiveLog: () => ListManagedEndpointsResponseFilterSensitiveLog,
  ListSecurityConfigurationsCommand: () => ListSecurityConfigurationsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  ListVirtualClustersCommand: () => ListVirtualClustersCommand,
  ParametricConfigurationOverridesFilterSensitiveLog: () => ParametricConfigurationOverridesFilterSensitiveLog,
  PersistentAppUI: () => PersistentAppUI,
  RequestThrottledException: () => RequestThrottledException,
  ResourceNotFoundException: () => ResourceNotFoundException,
  SparkSqlJobDriverFilterSensitiveLog: () => SparkSqlJobDriverFilterSensitiveLog,
  SparkSubmitJobDriverFilterSensitiveLog: () => SparkSubmitJobDriverFilterSensitiveLog,
  StartJobRunCommand: () => StartJobRunCommand,
  StartJobRunRequestFilterSensitiveLog: () => StartJobRunRequestFilterSensitiveLog,
  TagResourceCommand: () => TagResourceCommand,
  TemplateParameterDataType: () => TemplateParameterDataType,
  UntagResourceCommand: () => UntagResourceCommand,
  ValidationException: () => ValidationException,
  VirtualClusterState: () => VirtualClusterState,
  __Client: () => import_smithy_client.Client,
  paginateListJobRuns: () => paginateListJobRuns,
  paginateListJobTemplates: () => paginateListJobTemplates,
  paginateListManagedEndpoints: () => paginateListManagedEndpoints,
  paginateListSecurityConfigurations: () => paginateListSecurityConfigurations,
  paginateListVirtualClusters: () => paginateListVirtualClusters
});
module.exports = __toCommonJS(src_exports);

// src/EMRContainersClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "emr-containers"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/EMRContainersClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/EMRContainersClient.ts
var _EMRContainersClient = class _EMRContainersClient extends import_smithy_client.Client {
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);
    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);
    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),
        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
  getDefaultHttpAuthSchemeParametersProvider() {
    return import_httpAuthSchemeProvider.defaultEMRContainersHttpAuthSchemeParametersProvider;
  }
  getIdentityProviderConfigProvider() {
    return async (config) => new import_core.DefaultIdentityProviderConfig({
      "aws.auth#sigv4": config.credentials
    });
  }
};
__name(_EMRContainersClient, "EMRContainersClient");
var EMRContainersClient = _EMRContainersClient;

// src/EMRContainers.ts


// src/commands/CancelJobRunCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");

var import_types = require("@smithy/types");

// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/EMRContainersServiceException.ts

var _EMRContainersServiceException = class _EMRContainersServiceException extends import_smithy_client.ServiceException {
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _EMRContainersServiceException.prototype);
  }
};
__name(_EMRContainersServiceException, "EMRContainersServiceException");
var EMRContainersServiceException = _EMRContainersServiceException;

// src/models/models_0.ts

var CertificateProviderType = {
  PEM: "PEM"
};
var _InternalServerException = class _InternalServerException extends EMRContainersServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    this.name = "InternalServerException";
    this.$fault = "server";
    Object.setPrototypeOf(this, _InternalServerException.prototype);
  }
};
__name(_InternalServerException, "InternalServerException");
var InternalServerException = _InternalServerException;
var _ValidationException = class _ValidationException extends EMRContainersServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    this.name = "ValidationException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ValidationException.prototype);
  }
};
__name(_ValidationException, "ValidationException");
var ValidationException = _ValidationException;
var TemplateParameterDataType = {
  NUMBER: "NUMBER",
  STRING: "STRING"
};
var _ResourceNotFoundException = class _ResourceNotFoundException extends EMRContainersServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    this.name = "ResourceNotFoundException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
  }
};
__name(_ResourceNotFoundException, "ResourceNotFoundException");
var ResourceNotFoundException = _ResourceNotFoundException;
var PersistentAppUI = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ContainerInfo;
((ContainerInfo3) => {
  ContainerInfo3.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.eksInfo !== void 0)
      return visitor.eksInfo(value.eksInfo);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(ContainerInfo || (ContainerInfo = {}));
var ContainerProviderType = {
  EKS: "EKS"
};
var _EKSRequestThrottledException = class _EKSRequestThrottledException extends EMRContainersServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EKSRequestThrottledException",
      $fault: "client",
      ...opts
    });
    this.name = "EKSRequestThrottledException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _EKSRequestThrottledException.prototype);
  }
};
__name(_EKSRequestThrottledException, "EKSRequestThrottledException");
var EKSRequestThrottledException = _EKSRequestThrottledException;
var FailureReason = {
  CLUSTER_UNAVAILABLE: "CLUSTER_UNAVAILABLE",
  INTERNAL_ERROR: "INTERNAL_ERROR",
  USER_ERROR: "USER_ERROR",
  VALIDATION_ERROR: "VALIDATION_ERROR"
};
var JobRunState = {
  CANCELLED: "CANCELLED",
  CANCEL_PENDING: "CANCEL_PENDING",
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  PENDING: "PENDING",
  RUNNING: "RUNNING",
  SUBMITTED: "SUBMITTED"
};
var EndpointState = {
  ACTIVE: "ACTIVE",
  CREATING: "CREATING",
  TERMINATED: "TERMINATED",
  TERMINATED_WITH_ERRORS: "TERMINATED_WITH_ERRORS",
  TERMINATING: "TERMINATING"
};
var VirtualClusterState = {
  ARRESTED: "ARRESTED",
  RUNNING: "RUNNING",
  TERMINATED: "TERMINATED",
  TERMINATING: "TERMINATING"
};
var Credentials;
((Credentials2) => {
  Credentials2.visit = /* @__PURE__ */ __name((value, visitor) => {
    if (value.token !== void 0)
      return visitor.token(value.token);
    return visitor._(value.$unknown[0], value.$unknown[1]);
  }, "visit");
})(Credentials || (Credentials = {}));
var _RequestThrottledException = class _RequestThrottledException extends EMRContainersServiceException {
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RequestThrottledException",
      $fault: "client",
      ...opts
    });
    this.name = "RequestThrottledException";
    this.$fault = "client";
    Object.setPrototypeOf(this, _RequestThrottledException.prototype);
  }
};
__name(_RequestThrottledException, "RequestThrottledException");
var RequestThrottledException = _RequestThrottledException;
var SparkSqlJobDriverFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.entryPoint && { entryPoint: import_smithy_client.SENSITIVE_STRING },
  ...obj.sparkSqlParameters && { sparkSqlParameters: import_smithy_client.SENSITIVE_STRING }
}), "SparkSqlJobDriverFilterSensitiveLog");
var SparkSubmitJobDriverFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.entryPoint && { entryPoint: import_smithy_client.SENSITIVE_STRING },
  ...obj.entryPointArguments && { entryPointArguments: import_smithy_client.SENSITIVE_STRING },
  ...obj.sparkSubmitParameters && { sparkSubmitParameters: import_smithy_client.SENSITIVE_STRING }
}), "SparkSubmitJobDriverFilterSensitiveLog");
var JobDriverFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.sparkSubmitJobDriver && {
    sparkSubmitJobDriver: SparkSubmitJobDriverFilterSensitiveLog(obj.sparkSubmitJobDriver)
  },
  ...obj.sparkSqlJobDriver && { sparkSqlJobDriver: SparkSqlJobDriverFilterSensitiveLog(obj.sparkSqlJobDriver) }
}), "JobDriverFilterSensitiveLog");
var CredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => {
  if (obj.token !== void 0)
    return { token: import_smithy_client.SENSITIVE_STRING };
  if (obj.$unknown !== void 0)
    return { [obj.$unknown[0]]: "UNKNOWN" };
}, "CredentialsFilterSensitiveLog");
var GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.credentials && { credentials: CredentialsFilterSensitiveLog(obj.credentials) }
}), "GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog");
var ConfigurationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.properties && { properties: import_smithy_client.SENSITIVE_STRING },
  ...obj.configurations && {
    configurations: obj.configurations.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ConfigurationFilterSensitiveLog");
var ConfigurationOverridesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.applicationConfiguration && {
    applicationConfiguration: obj.applicationConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ConfigurationOverridesFilterSensitiveLog");
var ParametricConfigurationOverridesFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.applicationConfiguration && {
    applicationConfiguration: obj.applicationConfiguration.map((item) => ConfigurationFilterSensitiveLog(item))
  }
}), "ParametricConfigurationOverridesFilterSensitiveLog");
var CreateManagedEndpointRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  }
}), "CreateManagedEndpointRequestFilterSensitiveLog");
var EndpointFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  }
}), "EndpointFilterSensitiveLog");
var JobRunFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  },
  ...obj.jobDriver && { jobDriver: JobDriverFilterSensitiveLog(obj.jobDriver) }
}), "JobRunFilterSensitiveLog");
var JobTemplateDataFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.configurationOverrides && {
    configurationOverrides: ParametricConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  },
  ...obj.jobDriver && { jobDriver: JobDriverFilterSensitiveLog(obj.jobDriver) }
}), "JobTemplateDataFilterSensitiveLog");
var StartJobRunRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobDriver && { jobDriver: JobDriverFilterSensitiveLog(obj.jobDriver) },
  ...obj.configurationOverrides && {
    configurationOverrides: ConfigurationOverridesFilterSensitiveLog(obj.configurationOverrides)
  }
}), "StartJobRunRequestFilterSensitiveLog");
var CreateJobTemplateRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobTemplateData && { jobTemplateData: JobTemplateDataFilterSensitiveLog(obj.jobTemplateData) }
}), "CreateJobTemplateRequestFilterSensitiveLog");
var DescribeJobRunResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobRun && { jobRun: JobRunFilterSensitiveLog(obj.jobRun) }
}), "DescribeJobRunResponseFilterSensitiveLog");
var DescribeManagedEndpointResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.endpoint && { endpoint: EndpointFilterSensitiveLog(obj.endpoint) }
}), "DescribeManagedEndpointResponseFilterSensitiveLog");
var JobTemplateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobTemplateData && { jobTemplateData: JobTemplateDataFilterSensitiveLog(obj.jobTemplateData) }
}), "JobTemplateFilterSensitiveLog");
var DescribeJobTemplateResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobTemplate && { jobTemplate: JobTemplateFilterSensitiveLog(obj.jobTemplate) }
}), "DescribeJobTemplateResponseFilterSensitiveLog");
var ListJobRunsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.jobRuns && { jobRuns: obj.jobRuns.map((item) => JobRunFilterSensitiveLog(item)) }
}), "ListJobRunsResponseFilterSensitiveLog");
var ListManagedEndpointsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "ListManagedEndpointsResponseFilterSensitiveLog");
var ListJobTemplatesResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.templates && { templates: obj.templates.map((item) => JobTemplateFilterSensitiveLog(item)) }
}), "ListJobTemplatesResponseFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_CancelJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/jobruns/{id}");
  b.p("id", () => input.id, "{id}", false);
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_CancelJobRunCommand");
var se_CreateJobTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/jobtemplates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      jobTemplateData: (_) => se_JobTemplateData(_, context),
      kmsKeyArn: [],
      name: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateJobTemplateCommand");
var se_CreateManagedEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/virtualclusters/{virtualClusterId}/endpoints");
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      certificateArn: [],
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      configurationOverrides: (_) => se_ConfigurationOverrides(_, context),
      executionRoleArn: [],
      name: [],
      releaseLabel: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      type: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateManagedEndpointCommand");
var se_CreateSecurityConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/securityconfigurations");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      name: [],
      securityConfigurationData: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateSecurityConfigurationCommand");
var se_CreateVirtualClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/virtualclusters");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      containerProvider: (_) => (0, import_smithy_client._json)(_),
      name: [],
      securityConfigurationId: [],
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateVirtualClusterCommand");
var se_DeleteJobTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/jobtemplates/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteJobTemplateCommand");
var se_DeleteManagedEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/endpoints/{id}");
  b.p("id", () => input.id, "{id}", false);
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteManagedEndpointCommand");
var se_DeleteVirtualClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteVirtualClusterCommand");
var se_DescribeJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/jobruns/{id}");
  b.p("id", () => input.id, "{id}", false);
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeJobRunCommand");
var se_DescribeJobTemplateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/jobtemplates/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeJobTemplateCommand");
var se_DescribeManagedEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/endpoints/{id}");
  b.p("id", () => input.id, "{id}", false);
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeManagedEndpointCommand");
var se_DescribeSecurityConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/securityconfigurations/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeSecurityConfigurationCommand");
var se_DescribeVirtualClusterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{id}");
  b.p("id", () => input.id, "{id}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeVirtualClusterCommand");
var se_GetManagedEndpointSessionCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/virtualclusters/{virtualClusterIdentifier}/endpoints/{endpointIdentifier}/credentials");
  b.p("endpointIdentifier", () => input.endpointIdentifier, "{endpointIdentifier}", false);
  b.p("virtualClusterIdentifier", () => input.virtualClusterIdentifier, "{virtualClusterIdentifier}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      credentialType: [],
      durationInSeconds: [],
      executionRoleArn: [],
      logContext: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetManagedEndpointSessionCredentialsCommand");
var se_ListJobRunsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/jobruns");
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  const query = (0, import_smithy_client.map)({
    [_cB]: [() => input.createdBefore !== void 0, () => (input[_cB].toISOString().split(".")[0] + "Z").toString()],
    [_cA]: [() => input.createdAfter !== void 0, () => (input[_cA].toISOString().split(".")[0] + "Z").toString()],
    [_n]: [, input[_n]],
    [_s]: [() => input.states !== void 0, () => (input[_s] || []).map((_entry) => _entry)],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJobRunsCommand");
var se_ListJobTemplatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/jobtemplates");
  const query = (0, import_smithy_client.map)({
    [_cA]: [() => input.createdAfter !== void 0, () => (input[_cA].toISOString().split(".")[0] + "Z").toString()],
    [_cB]: [() => input.createdBefore !== void 0, () => (input[_cB].toISOString().split(".")[0] + "Z").toString()],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListJobTemplatesCommand");
var se_ListManagedEndpointsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters/{virtualClusterId}/endpoints");
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  const query = (0, import_smithy_client.map)({
    [_cB]: [() => input.createdBefore !== void 0, () => (input[_cB].toISOString().split(".")[0] + "Z").toString()],
    [_cA]: [() => input.createdAfter !== void 0, () => (input[_cA].toISOString().split(".")[0] + "Z").toString()],
    [_t]: [() => input.types !== void 0, () => (input[_t] || []).map((_entry) => _entry)],
    [_s]: [() => input.states !== void 0, () => (input[_s] || []).map((_entry) => _entry)],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListManagedEndpointsCommand");
var se_ListSecurityConfigurationsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/securityconfigurations");
  const query = (0, import_smithy_client.map)({
    [_cA]: [() => input.createdAfter !== void 0, () => (input[_cA].toISOString().split(".")[0] + "Z").toString()],
    [_cB]: [() => input.createdBefore !== void 0, () => (input[_cB].toISOString().split(".")[0] + "Z").toString()],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListSecurityConfigurationsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ListVirtualClustersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/virtualclusters");
  const query = (0, import_smithy_client.map)({
    [_cPI]: [, input[_cPI]],
    [_cPT]: [, input[_cPT]],
    [_cA]: [() => input.createdAfter !== void 0, () => (input[_cA].toISOString().split(".")[0] + "Z").toString()],
    [_cB]: [() => input.createdBefore !== void 0, () => (input[_cB].toISOString().split(".")[0] + "Z").toString()],
    [_s]: [() => input.states !== void 0, () => (input[_s] || []).map((_entry) => _entry)],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_eAEI]: [() => input.eksAccessEntryIntegrated !== void 0, () => input[_eAEI].toString()]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListVirtualClustersCommand");
var se_StartJobRunCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/virtualclusters/{virtualClusterId}/jobruns");
  b.p("virtualClusterId", () => input.virtualClusterId, "{virtualClusterId}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      configurationOverrides: (_) => se_ConfigurationOverrides(_, context),
      executionRoleArn: [],
      jobDriver: (_) => (0, import_smithy_client._json)(_),
      jobTemplateId: [],
      jobTemplateParameters: (_) => (0, import_smithy_client._json)(_),
      name: [],
      releaseLabel: [],
      retryPolicyConfiguration: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartJobRunCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [
      (0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null,
      () => (input[_tK] || []).map((_entry) => _entry)
    ]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var de_CancelJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    virtualClusterId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelJobRunCommand");
var de_CreateJobTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateJobTemplateCommand");
var de_CreateManagedEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    virtualClusterId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateManagedEndpointCommand");
var de_CreateSecurityConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateSecurityConfigurationCommand");
var de_CreateVirtualClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateVirtualClusterCommand");
var de_DeleteJobTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteJobTemplateCommand");
var de_DeleteManagedEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString,
    virtualClusterId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteManagedEndpointCommand");
var de_DeleteVirtualClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DeleteVirtualClusterCommand");
var de_DescribeJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobRun: (_) => de_JobRun(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJobRunCommand");
var de_DescribeJobTemplateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobTemplate: (_) => de_JobTemplate(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeJobTemplateCommand");
var de_DescribeManagedEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endpoint: (_) => de_Endpoint(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeManagedEndpointCommand");
var de_DescribeSecurityConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    securityConfiguration: (_) => de_SecurityConfiguration(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeSecurityConfigurationCommand");
var de_DescribeVirtualClusterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    virtualCluster: (_) => de_VirtualCluster(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeVirtualClusterCommand");
var de_GetManagedEndpointSessionCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    credentials: (_) => (0, import_smithy_client._json)((0, import_core2.awsExpectUnion)(_)),
    expiresAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetManagedEndpointSessionCredentialsCommand");
var de_ListJobRunsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    jobRuns: (_) => de_JobRuns(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJobRunsCommand");
var de_ListJobTemplatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    templates: (_) => de_JobTemplates(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListJobTemplatesCommand");
var de_ListManagedEndpointsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    endpoints: (_) => de_Endpoints(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListManagedEndpointsCommand");
var de_ListSecurityConfigurationsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    securityConfigurations: (_) => de_SecurityConfigurations(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListSecurityConfigurationsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ListVirtualClustersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    nextToken: import_smithy_client.expectString,
    virtualClusters: (_) => de_VirtualClusters(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListVirtualClustersCommand");
var de_StartJobRunCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    virtualClusterId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartJobRunCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerException":
    case "com.amazonaws.emrcontainers#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.emrcontainers#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.emrcontainers#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "EKSRequestThrottledException":
    case "com.amazonaws.emrcontainers#EKSRequestThrottledException":
      throw await de_EKSRequestThrottledExceptionRes(parsedOutput, context);
    case "RequestThrottledException":
    case "com.amazonaws.emrcontainers#RequestThrottledException":
      throw await de_RequestThrottledExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(EMRContainersServiceException);
var de_EKSRequestThrottledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new EKSRequestThrottledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_EKSRequestThrottledExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_RequestThrottledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new RequestThrottledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_RequestThrottledExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_Configuration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    classification: [],
    configurations: (_) => se_ConfigurationList(_, context),
    properties: import_smithy_client._json
  });
}, "se_Configuration");
var se_ConfigurationList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_Configuration(entry, context);
  });
}, "se_ConfigurationList");
var se_ConfigurationOverrides = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    applicationConfiguration: (_) => se_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "se_ConfigurationOverrides");
var se_JobTemplateData = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    configurationOverrides: (_) => se_ParametricConfigurationOverrides(_, context),
    executionRoleArn: [],
    jobDriver: import_smithy_client._json,
    jobTags: import_smithy_client._json,
    parameterConfiguration: import_smithy_client._json,
    releaseLabel: []
  });
}, "se_JobTemplateData");
var se_ParametricConfigurationOverrides = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    applicationConfiguration: (_) => se_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "se_ParametricConfigurationOverrides");
var de_Configuration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    classification: import_smithy_client.expectString,
    configurations: (_) => de_ConfigurationList(_, context),
    properties: import_smithy_client._json
  });
}, "de_Configuration");
var de_ConfigurationList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Configuration(entry, context);
  });
  return retVal;
}, "de_ConfigurationList");
var de_ConfigurationOverrides = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationConfiguration: (_) => de_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "de_ConfigurationOverrides");
var de_Endpoint = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    certificateArn: import_smithy_client.expectString,
    certificateAuthority: import_smithy_client._json,
    configurationOverrides: (_) => de_ConfigurationOverrides(_, context),
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    executionRoleArn: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    releaseLabel: import_smithy_client.expectString,
    securityGroup: import_smithy_client.expectString,
    serverUrl: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    subnetIds: import_smithy_client._json,
    tags: import_smithy_client._json,
    type: import_smithy_client.expectString,
    virtualClusterId: import_smithy_client.expectString
  });
}, "de_Endpoint");
var de_Endpoints = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Endpoint(entry, context);
  });
  return retVal;
}, "de_Endpoints");
var de_JobRun = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    clientToken: import_smithy_client.expectString,
    configurationOverrides: (_) => de_ConfigurationOverrides(_, context),
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    createdBy: import_smithy_client.expectString,
    executionRoleArn: import_smithy_client.expectString,
    failureReason: import_smithy_client.expectString,
    finishedAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    jobDriver: import_smithy_client._json,
    name: import_smithy_client.expectString,
    releaseLabel: import_smithy_client.expectString,
    retryPolicyConfiguration: import_smithy_client._json,
    retryPolicyExecution: import_smithy_client._json,
    state: import_smithy_client.expectString,
    stateDetails: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    virtualClusterId: import_smithy_client.expectString
  });
}, "de_JobRun");
var de_JobRuns = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JobRun(entry, context);
  });
  return retVal;
}, "de_JobRuns");
var de_JobTemplate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    createdBy: import_smithy_client.expectString,
    decryptionError: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    jobTemplateData: (_) => de_JobTemplateData(_, context),
    kmsKeyArn: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_JobTemplate");
var de_JobTemplateData = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    configurationOverrides: (_) => de_ParametricConfigurationOverrides(_, context),
    executionRoleArn: import_smithy_client.expectString,
    jobDriver: import_smithy_client._json,
    jobTags: import_smithy_client._json,
    parameterConfiguration: import_smithy_client._json,
    releaseLabel: import_smithy_client.expectString
  });
}, "de_JobTemplateData");
var de_JobTemplates = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_JobTemplate(entry, context);
  });
  return retVal;
}, "de_JobTemplates");
var de_ParametricConfigurationOverrides = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    applicationConfiguration: (_) => de_ConfigurationList(_, context),
    monitoringConfiguration: import_smithy_client._json
  });
}, "de_ParametricConfigurationOverrides");
var de_SecurityConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    createdBy: import_smithy_client.expectString,
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    securityConfigurationData: import_smithy_client._json,
    tags: import_smithy_client._json
  });
}, "de_SecurityConfiguration");
var de_SecurityConfigurations = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_SecurityConfiguration(entry, context);
  });
  return retVal;
}, "de_SecurityConfigurations");
var de_VirtualCluster = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    containerProvider: import_smithy_client._json,
    createdAt: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)),
    id: import_smithy_client.expectString,
    name: import_smithy_client.expectString,
    securityConfigurationId: import_smithy_client.expectString,
    state: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
}, "de_VirtualCluster");
var de_VirtualClusters = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_VirtualCluster(entry, context);
  });
  return retVal;
}, "de_VirtualClusters");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _cA = "createdAfter";
var _cB = "createdBefore";
var _cPI = "containerProviderId";
var _cPT = "containerProviderType";
var _eAEI = "eksAccessEntryIntegrated";
var _mR = "maxResults";
var _n = "name";
var _nT = "nextToken";
var _s = "states";
var _t = "types";
var _tK = "tagKeys";

// src/commands/CancelJobRunCommand.ts
var _CancelJobRunCommand = class _CancelJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "CancelJobRun", {}).n("EMRContainersClient", "CancelJobRunCommand").f(void 0, void 0).ser(se_CancelJobRunCommand).de(de_CancelJobRunCommand).build() {
};
__name(_CancelJobRunCommand, "CancelJobRunCommand");
var CancelJobRunCommand = _CancelJobRunCommand;

// src/commands/CreateJobTemplateCommand.ts




var _CreateJobTemplateCommand = class _CreateJobTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "CreateJobTemplate", {}).n("EMRContainersClient", "CreateJobTemplateCommand").f(CreateJobTemplateRequestFilterSensitiveLog, void 0).ser(se_CreateJobTemplateCommand).de(de_CreateJobTemplateCommand).build() {
};
__name(_CreateJobTemplateCommand, "CreateJobTemplateCommand");
var CreateJobTemplateCommand = _CreateJobTemplateCommand;

// src/commands/CreateManagedEndpointCommand.ts




var _CreateManagedEndpointCommand = class _CreateManagedEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "CreateManagedEndpoint", {}).n("EMRContainersClient", "CreateManagedEndpointCommand").f(CreateManagedEndpointRequestFilterSensitiveLog, void 0).ser(se_CreateManagedEndpointCommand).de(de_CreateManagedEndpointCommand).build() {
};
__name(_CreateManagedEndpointCommand, "CreateManagedEndpointCommand");
var CreateManagedEndpointCommand = _CreateManagedEndpointCommand;

// src/commands/CreateSecurityConfigurationCommand.ts




var _CreateSecurityConfigurationCommand = class _CreateSecurityConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "CreateSecurityConfiguration", {}).n("EMRContainersClient", "CreateSecurityConfigurationCommand").f(void 0, void 0).ser(se_CreateSecurityConfigurationCommand).de(de_CreateSecurityConfigurationCommand).build() {
};
__name(_CreateSecurityConfigurationCommand, "CreateSecurityConfigurationCommand");
var CreateSecurityConfigurationCommand = _CreateSecurityConfigurationCommand;

// src/commands/CreateVirtualClusterCommand.ts




var _CreateVirtualClusterCommand = class _CreateVirtualClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "CreateVirtualCluster", {}).n("EMRContainersClient", "CreateVirtualClusterCommand").f(void 0, void 0).ser(se_CreateVirtualClusterCommand).de(de_CreateVirtualClusterCommand).build() {
};
__name(_CreateVirtualClusterCommand, "CreateVirtualClusterCommand");
var CreateVirtualClusterCommand = _CreateVirtualClusterCommand;

// src/commands/DeleteJobTemplateCommand.ts




var _DeleteJobTemplateCommand = class _DeleteJobTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DeleteJobTemplate", {}).n("EMRContainersClient", "DeleteJobTemplateCommand").f(void 0, void 0).ser(se_DeleteJobTemplateCommand).de(de_DeleteJobTemplateCommand).build() {
};
__name(_DeleteJobTemplateCommand, "DeleteJobTemplateCommand");
var DeleteJobTemplateCommand = _DeleteJobTemplateCommand;

// src/commands/DeleteManagedEndpointCommand.ts




var _DeleteManagedEndpointCommand = class _DeleteManagedEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DeleteManagedEndpoint", {}).n("EMRContainersClient", "DeleteManagedEndpointCommand").f(void 0, void 0).ser(se_DeleteManagedEndpointCommand).de(de_DeleteManagedEndpointCommand).build() {
};
__name(_DeleteManagedEndpointCommand, "DeleteManagedEndpointCommand");
var DeleteManagedEndpointCommand = _DeleteManagedEndpointCommand;

// src/commands/DeleteVirtualClusterCommand.ts




var _DeleteVirtualClusterCommand = class _DeleteVirtualClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DeleteVirtualCluster", {}).n("EMRContainersClient", "DeleteVirtualClusterCommand").f(void 0, void 0).ser(se_DeleteVirtualClusterCommand).de(de_DeleteVirtualClusterCommand).build() {
};
__name(_DeleteVirtualClusterCommand, "DeleteVirtualClusterCommand");
var DeleteVirtualClusterCommand = _DeleteVirtualClusterCommand;

// src/commands/DescribeJobRunCommand.ts




var _DescribeJobRunCommand = class _DescribeJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DescribeJobRun", {}).n("EMRContainersClient", "DescribeJobRunCommand").f(void 0, DescribeJobRunResponseFilterSensitiveLog).ser(se_DescribeJobRunCommand).de(de_DescribeJobRunCommand).build() {
};
__name(_DescribeJobRunCommand, "DescribeJobRunCommand");
var DescribeJobRunCommand = _DescribeJobRunCommand;

// src/commands/DescribeJobTemplateCommand.ts




var _DescribeJobTemplateCommand = class _DescribeJobTemplateCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DescribeJobTemplate", {}).n("EMRContainersClient", "DescribeJobTemplateCommand").f(void 0, DescribeJobTemplateResponseFilterSensitiveLog).ser(se_DescribeJobTemplateCommand).de(de_DescribeJobTemplateCommand).build() {
};
__name(_DescribeJobTemplateCommand, "DescribeJobTemplateCommand");
var DescribeJobTemplateCommand = _DescribeJobTemplateCommand;

// src/commands/DescribeManagedEndpointCommand.ts




var _DescribeManagedEndpointCommand = class _DescribeManagedEndpointCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DescribeManagedEndpoint", {}).n("EMRContainersClient", "DescribeManagedEndpointCommand").f(void 0, DescribeManagedEndpointResponseFilterSensitiveLog).ser(se_DescribeManagedEndpointCommand).de(de_DescribeManagedEndpointCommand).build() {
};
__name(_DescribeManagedEndpointCommand, "DescribeManagedEndpointCommand");
var DescribeManagedEndpointCommand = _DescribeManagedEndpointCommand;

// src/commands/DescribeSecurityConfigurationCommand.ts




var _DescribeSecurityConfigurationCommand = class _DescribeSecurityConfigurationCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DescribeSecurityConfiguration", {}).n("EMRContainersClient", "DescribeSecurityConfigurationCommand").f(void 0, void 0).ser(se_DescribeSecurityConfigurationCommand).de(de_DescribeSecurityConfigurationCommand).build() {
};
__name(_DescribeSecurityConfigurationCommand, "DescribeSecurityConfigurationCommand");
var DescribeSecurityConfigurationCommand = _DescribeSecurityConfigurationCommand;

// src/commands/DescribeVirtualClusterCommand.ts




var _DescribeVirtualClusterCommand = class _DescribeVirtualClusterCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "DescribeVirtualCluster", {}).n("EMRContainersClient", "DescribeVirtualClusterCommand").f(void 0, void 0).ser(se_DescribeVirtualClusterCommand).de(de_DescribeVirtualClusterCommand).build() {
};
__name(_DescribeVirtualClusterCommand, "DescribeVirtualClusterCommand");
var DescribeVirtualClusterCommand = _DescribeVirtualClusterCommand;

// src/commands/GetManagedEndpointSessionCredentialsCommand.ts




var _GetManagedEndpointSessionCredentialsCommand = class _GetManagedEndpointSessionCredentialsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "GetManagedEndpointSessionCredentials", {}).n("EMRContainersClient", "GetManagedEndpointSessionCredentialsCommand").f(void 0, GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog).ser(se_GetManagedEndpointSessionCredentialsCommand).de(de_GetManagedEndpointSessionCredentialsCommand).build() {
};
__name(_GetManagedEndpointSessionCredentialsCommand, "GetManagedEndpointSessionCredentialsCommand");
var GetManagedEndpointSessionCredentialsCommand = _GetManagedEndpointSessionCredentialsCommand;

// src/commands/ListJobRunsCommand.ts




var _ListJobRunsCommand = class _ListJobRunsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListJobRuns", {}).n("EMRContainersClient", "ListJobRunsCommand").f(void 0, ListJobRunsResponseFilterSensitiveLog).ser(se_ListJobRunsCommand).de(de_ListJobRunsCommand).build() {
};
__name(_ListJobRunsCommand, "ListJobRunsCommand");
var ListJobRunsCommand = _ListJobRunsCommand;

// src/commands/ListJobTemplatesCommand.ts




var _ListJobTemplatesCommand = class _ListJobTemplatesCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListJobTemplates", {}).n("EMRContainersClient", "ListJobTemplatesCommand").f(void 0, ListJobTemplatesResponseFilterSensitiveLog).ser(se_ListJobTemplatesCommand).de(de_ListJobTemplatesCommand).build() {
};
__name(_ListJobTemplatesCommand, "ListJobTemplatesCommand");
var ListJobTemplatesCommand = _ListJobTemplatesCommand;

// src/commands/ListManagedEndpointsCommand.ts




var _ListManagedEndpointsCommand = class _ListManagedEndpointsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListManagedEndpoints", {}).n("EMRContainersClient", "ListManagedEndpointsCommand").f(void 0, ListManagedEndpointsResponseFilterSensitiveLog).ser(se_ListManagedEndpointsCommand).de(de_ListManagedEndpointsCommand).build() {
};
__name(_ListManagedEndpointsCommand, "ListManagedEndpointsCommand");
var ListManagedEndpointsCommand = _ListManagedEndpointsCommand;

// src/commands/ListSecurityConfigurationsCommand.ts




var _ListSecurityConfigurationsCommand = class _ListSecurityConfigurationsCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListSecurityConfigurations", {}).n("EMRContainersClient", "ListSecurityConfigurationsCommand").f(void 0, void 0).ser(se_ListSecurityConfigurationsCommand).de(de_ListSecurityConfigurationsCommand).build() {
};
__name(_ListSecurityConfigurationsCommand, "ListSecurityConfigurationsCommand");
var ListSecurityConfigurationsCommand = _ListSecurityConfigurationsCommand;

// src/commands/ListTagsForResourceCommand.ts




var _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListTagsForResource", {}).n("EMRContainersClient", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
};
__name(_ListTagsForResourceCommand, "ListTagsForResourceCommand");
var ListTagsForResourceCommand = _ListTagsForResourceCommand;

// src/commands/ListVirtualClustersCommand.ts




var _ListVirtualClustersCommand = class _ListVirtualClustersCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "ListVirtualClusters", {}).n("EMRContainersClient", "ListVirtualClustersCommand").f(void 0, void 0).ser(se_ListVirtualClustersCommand).de(de_ListVirtualClustersCommand).build() {
};
__name(_ListVirtualClustersCommand, "ListVirtualClustersCommand");
var ListVirtualClustersCommand = _ListVirtualClustersCommand;

// src/commands/StartJobRunCommand.ts




var _StartJobRunCommand = class _StartJobRunCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "StartJobRun", {}).n("EMRContainersClient", "StartJobRunCommand").f(StartJobRunRequestFilterSensitiveLog, void 0).ser(se_StartJobRunCommand).de(de_StartJobRunCommand).build() {
};
__name(_StartJobRunCommand, "StartJobRunCommand");
var StartJobRunCommand = _StartJobRunCommand;

// src/commands/TagResourceCommand.ts




var _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "TagResource", {}).n("EMRContainersClient", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
};
__name(_TagResourceCommand, "TagResourceCommand");
var TagResourceCommand = _TagResourceCommand;

// src/commands/UntagResourceCommand.ts




var _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({
  ...commonParams
}).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AwsChicagoWebService", "UntagResource", {}).n("EMRContainersClient", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
};
__name(_UntagResourceCommand, "UntagResourceCommand");
var UntagResourceCommand = _UntagResourceCommand;

// src/EMRContainers.ts
var commands = {
  CancelJobRunCommand,
  CreateJobTemplateCommand,
  CreateManagedEndpointCommand,
  CreateSecurityConfigurationCommand,
  CreateVirtualClusterCommand,
  DeleteJobTemplateCommand,
  DeleteManagedEndpointCommand,
  DeleteVirtualClusterCommand,
  DescribeJobRunCommand,
  DescribeJobTemplateCommand,
  DescribeManagedEndpointCommand,
  DescribeSecurityConfigurationCommand,
  DescribeVirtualClusterCommand,
  GetManagedEndpointSessionCredentialsCommand,
  ListJobRunsCommand,
  ListJobTemplatesCommand,
  ListManagedEndpointsCommand,
  ListSecurityConfigurationsCommand,
  ListTagsForResourceCommand,
  ListVirtualClustersCommand,
  StartJobRunCommand,
  TagResourceCommand,
  UntagResourceCommand
};
var _EMRContainers = class _EMRContainers extends EMRContainersClient {
};
__name(_EMRContainers, "EMRContainers");
var EMRContainers = _EMRContainers;
(0, import_smithy_client.createAggregatedClient)(commands, EMRContainers);

// src/pagination/ListJobRunsPaginator.ts

var paginateListJobRuns = (0, import_core.createPaginator)(EMRContainersClient, ListJobRunsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListJobTemplatesPaginator.ts

var paginateListJobTemplates = (0, import_core.createPaginator)(EMRContainersClient, ListJobTemplatesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListManagedEndpointsPaginator.ts

var paginateListManagedEndpoints = (0, import_core.createPaginator)(EMRContainersClient, ListManagedEndpointsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListSecurityConfigurationsPaginator.ts

var paginateListSecurityConfigurations = (0, import_core.createPaginator)(EMRContainersClient, ListSecurityConfigurationsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListVirtualClustersPaginator.ts

var paginateListVirtualClusters = (0, import_core.createPaginator)(EMRContainersClient, ListVirtualClustersCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  EMRContainersServiceException,
  __Client,
  EMRContainersClient,
  EMRContainers,
  $Command,
  CancelJobRunCommand,
  CreateJobTemplateCommand,
  CreateManagedEndpointCommand,
  CreateSecurityConfigurationCommand,
  CreateVirtualClusterCommand,
  DeleteJobTemplateCommand,
  DeleteManagedEndpointCommand,
  DeleteVirtualClusterCommand,
  DescribeJobRunCommand,
  DescribeJobTemplateCommand,
  DescribeManagedEndpointCommand,
  DescribeSecurityConfigurationCommand,
  DescribeVirtualClusterCommand,
  GetManagedEndpointSessionCredentialsCommand,
  ListJobRunsCommand,
  ListJobTemplatesCommand,
  ListManagedEndpointsCommand,
  ListSecurityConfigurationsCommand,
  ListTagsForResourceCommand,
  ListVirtualClustersCommand,
  StartJobRunCommand,
  TagResourceCommand,
  UntagResourceCommand,
  paginateListJobRuns,
  paginateListJobTemplates,
  paginateListManagedEndpoints,
  paginateListSecurityConfigurations,
  paginateListVirtualClusters,
  CertificateProviderType,
  InternalServerException,
  ValidationException,
  TemplateParameterDataType,
  ResourceNotFoundException,
  PersistentAppUI,
  ContainerInfo,
  ContainerProviderType,
  EKSRequestThrottledException,
  FailureReason,
  JobRunState,
  EndpointState,
  VirtualClusterState,
  Credentials,
  RequestThrottledException,
  SparkSqlJobDriverFilterSensitiveLog,
  SparkSubmitJobDriverFilterSensitiveLog,
  JobDriverFilterSensitiveLog,
  CredentialsFilterSensitiveLog,
  GetManagedEndpointSessionCredentialsResponseFilterSensitiveLog,
  ConfigurationFilterSensitiveLog,
  ConfigurationOverridesFilterSensitiveLog,
  ParametricConfigurationOverridesFilterSensitiveLog,
  CreateManagedEndpointRequestFilterSensitiveLog,
  EndpointFilterSensitiveLog,
  JobRunFilterSensitiveLog,
  JobTemplateDataFilterSensitiveLog,
  StartJobRunRequestFilterSensitiveLog,
  CreateJobTemplateRequestFilterSensitiveLog,
  DescribeJobRunResponseFilterSensitiveLog,
  DescribeManagedEndpointResponseFilterSensitiveLog,
  JobTemplateFilterSensitiveLog,
  DescribeJobTemplateResponseFilterSensitiveLog,
  ListJobRunsResponseFilterSensitiveLog,
  ListManagedEndpointsResponseFilterSensitiveLog,
  ListJobTemplatesResponseFilterSensitiveLog
});

