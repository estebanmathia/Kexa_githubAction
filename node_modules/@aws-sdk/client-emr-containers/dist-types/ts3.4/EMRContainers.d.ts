import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  CancelJobRunCommandInput,
  CancelJobRunCommandOutput,
} from "./commands/CancelJobRunCommand";
import {
  CreateJobTemplateCommandInput,
  CreateJobTemplateCommandOutput,
} from "./commands/CreateJobTemplateCommand";
import {
  CreateManagedEndpointCommandInput,
  CreateManagedEndpointCommandOutput,
} from "./commands/CreateManagedEndpointCommand";
import {
  CreateSecurityConfigurationCommandInput,
  CreateSecurityConfigurationCommandOutput,
} from "./commands/CreateSecurityConfigurationCommand";
import {
  CreateVirtualClusterCommandInput,
  CreateVirtualClusterCommandOutput,
} from "./commands/CreateVirtualClusterCommand";
import {
  DeleteJobTemplateCommandInput,
  DeleteJobTemplateCommandOutput,
} from "./commands/DeleteJobTemplateCommand";
import {
  DeleteManagedEndpointCommandInput,
  DeleteManagedEndpointCommandOutput,
} from "./commands/DeleteManagedEndpointCommand";
import {
  DeleteVirtualClusterCommandInput,
  DeleteVirtualClusterCommandOutput,
} from "./commands/DeleteVirtualClusterCommand";
import {
  DescribeJobRunCommandInput,
  DescribeJobRunCommandOutput,
} from "./commands/DescribeJobRunCommand";
import {
  DescribeJobTemplateCommandInput,
  DescribeJobTemplateCommandOutput,
} from "./commands/DescribeJobTemplateCommand";
import {
  DescribeManagedEndpointCommandInput,
  DescribeManagedEndpointCommandOutput,
} from "./commands/DescribeManagedEndpointCommand";
import {
  DescribeSecurityConfigurationCommandInput,
  DescribeSecurityConfigurationCommandOutput,
} from "./commands/DescribeSecurityConfigurationCommand";
import {
  DescribeVirtualClusterCommandInput,
  DescribeVirtualClusterCommandOutput,
} from "./commands/DescribeVirtualClusterCommand";
import {
  GetManagedEndpointSessionCredentialsCommandInput,
  GetManagedEndpointSessionCredentialsCommandOutput,
} from "./commands/GetManagedEndpointSessionCredentialsCommand";
import {
  ListJobRunsCommandInput,
  ListJobRunsCommandOutput,
} from "./commands/ListJobRunsCommand";
import {
  ListJobTemplatesCommandInput,
  ListJobTemplatesCommandOutput,
} from "./commands/ListJobTemplatesCommand";
import {
  ListManagedEndpointsCommandInput,
  ListManagedEndpointsCommandOutput,
} from "./commands/ListManagedEndpointsCommand";
import {
  ListSecurityConfigurationsCommandInput,
  ListSecurityConfigurationsCommandOutput,
} from "./commands/ListSecurityConfigurationsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ListVirtualClustersCommandInput,
  ListVirtualClustersCommandOutput,
} from "./commands/ListVirtualClustersCommand";
import {
  StartJobRunCommandInput,
  StartJobRunCommandOutput,
} from "./commands/StartJobRunCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import { EMRContainersClient } from "./EMRContainersClient";
export interface EMRContainers {
  cancelJobRun(
    args: CancelJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelJobRunCommandOutput>;
  cancelJobRun(
    args: CancelJobRunCommandInput,
    cb: (err: any, data?: CancelJobRunCommandOutput) => void
  ): void;
  cancelJobRun(
    args: CancelJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelJobRunCommandOutput) => void
  ): void;
  createJobTemplate(
    args: CreateJobTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateJobTemplateCommandOutput>;
  createJobTemplate(
    args: CreateJobTemplateCommandInput,
    cb: (err: any, data?: CreateJobTemplateCommandOutput) => void
  ): void;
  createJobTemplate(
    args: CreateJobTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateJobTemplateCommandOutput) => void
  ): void;
  createManagedEndpoint(
    args: CreateManagedEndpointCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateManagedEndpointCommandOutput>;
  createManagedEndpoint(
    args: CreateManagedEndpointCommandInput,
    cb: (err: any, data?: CreateManagedEndpointCommandOutput) => void
  ): void;
  createManagedEndpoint(
    args: CreateManagedEndpointCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateManagedEndpointCommandOutput) => void
  ): void;
  createSecurityConfiguration(
    args: CreateSecurityConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateSecurityConfigurationCommandOutput>;
  createSecurityConfiguration(
    args: CreateSecurityConfigurationCommandInput,
    cb: (err: any, data?: CreateSecurityConfigurationCommandOutput) => void
  ): void;
  createSecurityConfiguration(
    args: CreateSecurityConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateSecurityConfigurationCommandOutput) => void
  ): void;
  createVirtualCluster(
    args: CreateVirtualClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateVirtualClusterCommandOutput>;
  createVirtualCluster(
    args: CreateVirtualClusterCommandInput,
    cb: (err: any, data?: CreateVirtualClusterCommandOutput) => void
  ): void;
  createVirtualCluster(
    args: CreateVirtualClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateVirtualClusterCommandOutput) => void
  ): void;
  deleteJobTemplate(
    args: DeleteJobTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteJobTemplateCommandOutput>;
  deleteJobTemplate(
    args: DeleteJobTemplateCommandInput,
    cb: (err: any, data?: DeleteJobTemplateCommandOutput) => void
  ): void;
  deleteJobTemplate(
    args: DeleteJobTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteJobTemplateCommandOutput) => void
  ): void;
  deleteManagedEndpoint(
    args: DeleteManagedEndpointCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteManagedEndpointCommandOutput>;
  deleteManagedEndpoint(
    args: DeleteManagedEndpointCommandInput,
    cb: (err: any, data?: DeleteManagedEndpointCommandOutput) => void
  ): void;
  deleteManagedEndpoint(
    args: DeleteManagedEndpointCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteManagedEndpointCommandOutput) => void
  ): void;
  deleteVirtualCluster(
    args: DeleteVirtualClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteVirtualClusterCommandOutput>;
  deleteVirtualCluster(
    args: DeleteVirtualClusterCommandInput,
    cb: (err: any, data?: DeleteVirtualClusterCommandOutput) => void
  ): void;
  deleteVirtualCluster(
    args: DeleteVirtualClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteVirtualClusterCommandOutput) => void
  ): void;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJobRunCommandOutput>;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    cb: (err: any, data?: DescribeJobRunCommandOutput) => void
  ): void;
  describeJobRun(
    args: DescribeJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJobRunCommandOutput) => void
  ): void;
  describeJobTemplate(
    args: DescribeJobTemplateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeJobTemplateCommandOutput>;
  describeJobTemplate(
    args: DescribeJobTemplateCommandInput,
    cb: (err: any, data?: DescribeJobTemplateCommandOutput) => void
  ): void;
  describeJobTemplate(
    args: DescribeJobTemplateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeJobTemplateCommandOutput) => void
  ): void;
  describeManagedEndpoint(
    args: DescribeManagedEndpointCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeManagedEndpointCommandOutput>;
  describeManagedEndpoint(
    args: DescribeManagedEndpointCommandInput,
    cb: (err: any, data?: DescribeManagedEndpointCommandOutput) => void
  ): void;
  describeManagedEndpoint(
    args: DescribeManagedEndpointCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeManagedEndpointCommandOutput) => void
  ): void;
  describeSecurityConfiguration(
    args: DescribeSecurityConfigurationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSecurityConfigurationCommandOutput>;
  describeSecurityConfiguration(
    args: DescribeSecurityConfigurationCommandInput,
    cb: (err: any, data?: DescribeSecurityConfigurationCommandOutput) => void
  ): void;
  describeSecurityConfiguration(
    args: DescribeSecurityConfigurationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSecurityConfigurationCommandOutput) => void
  ): void;
  describeVirtualCluster(
    args: DescribeVirtualClusterCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeVirtualClusterCommandOutput>;
  describeVirtualCluster(
    args: DescribeVirtualClusterCommandInput,
    cb: (err: any, data?: DescribeVirtualClusterCommandOutput) => void
  ): void;
  describeVirtualCluster(
    args: DescribeVirtualClusterCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeVirtualClusterCommandOutput) => void
  ): void;
  getManagedEndpointSessionCredentials(
    args: GetManagedEndpointSessionCredentialsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetManagedEndpointSessionCredentialsCommandOutput>;
  getManagedEndpointSessionCredentials(
    args: GetManagedEndpointSessionCredentialsCommandInput,
    cb: (
      err: any,
      data?: GetManagedEndpointSessionCredentialsCommandOutput
    ) => void
  ): void;
  getManagedEndpointSessionCredentials(
    args: GetManagedEndpointSessionCredentialsCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetManagedEndpointSessionCredentialsCommandOutput
    ) => void
  ): void;
  listJobRuns(
    args: ListJobRunsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJobRunsCommandOutput>;
  listJobRuns(
    args: ListJobRunsCommandInput,
    cb: (err: any, data?: ListJobRunsCommandOutput) => void
  ): void;
  listJobRuns(
    args: ListJobRunsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJobRunsCommandOutput) => void
  ): void;
  listJobTemplates(): Promise<ListJobTemplatesCommandOutput>;
  listJobTemplates(
    args: ListJobTemplatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListJobTemplatesCommandOutput>;
  listJobTemplates(
    args: ListJobTemplatesCommandInput,
    cb: (err: any, data?: ListJobTemplatesCommandOutput) => void
  ): void;
  listJobTemplates(
    args: ListJobTemplatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListJobTemplatesCommandOutput) => void
  ): void;
  listManagedEndpoints(
    args: ListManagedEndpointsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListManagedEndpointsCommandOutput>;
  listManagedEndpoints(
    args: ListManagedEndpointsCommandInput,
    cb: (err: any, data?: ListManagedEndpointsCommandOutput) => void
  ): void;
  listManagedEndpoints(
    args: ListManagedEndpointsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListManagedEndpointsCommandOutput) => void
  ): void;
  listSecurityConfigurations(): Promise<ListSecurityConfigurationsCommandOutput>;
  listSecurityConfigurations(
    args: ListSecurityConfigurationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListSecurityConfigurationsCommandOutput>;
  listSecurityConfigurations(
    args: ListSecurityConfigurationsCommandInput,
    cb: (err: any, data?: ListSecurityConfigurationsCommandOutput) => void
  ): void;
  listSecurityConfigurations(
    args: ListSecurityConfigurationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListSecurityConfigurationsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listVirtualClusters(): Promise<ListVirtualClustersCommandOutput>;
  listVirtualClusters(
    args: ListVirtualClustersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListVirtualClustersCommandOutput>;
  listVirtualClusters(
    args: ListVirtualClustersCommandInput,
    cb: (err: any, data?: ListVirtualClustersCommandOutput) => void
  ): void;
  listVirtualClusters(
    args: ListVirtualClustersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListVirtualClustersCommandOutput) => void
  ): void;
  startJobRun(
    args: StartJobRunCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartJobRunCommandOutput>;
  startJobRun(
    args: StartJobRunCommandInput,
    cb: (err: any, data?: StartJobRunCommandOutput) => void
  ): void;
  startJobRun(
    args: StartJobRunCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartJobRunCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
}
export declare class EMRContainers
  extends EMRContainersClient
  implements EMRContainers {}
