import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { QuickSightServiceException as __BaseException } from "./QuickSightServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.Message = opts.Message;
        this.RequestId = opts.RequestId;
    }
}
export const Edition = {
    ENTERPRISE: "ENTERPRISE",
    ENTERPRISE_AND_Q: "ENTERPRISE_AND_Q",
    STANDARD: "STANDARD",
};
export const DashboardBehavior = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const SimpleAttributeAggregationFunction = {
    UNIQUE_VALUE: "UNIQUE_VALUE",
};
export const CategoricalAggregationFunction = {
    COUNT: "COUNT",
    DISTINCT_COUNT: "DISTINCT_COUNT",
};
export const DateAggregationFunction = {
    COUNT: "COUNT",
    DISTINCT_COUNT: "DISTINCT_COUNT",
    MAX: "MAX",
    MIN: "MIN",
};
export const SimpleNumericalAggregationFunction = {
    AVERAGE: "AVERAGE",
    COUNT: "COUNT",
    DISTINCT_COUNT: "DISTINCT_COUNT",
    MAX: "MAX",
    MEDIAN: "MEDIAN",
    MIN: "MIN",
    STDEV: "STDEV",
    STDEVP: "STDEVP",
    SUM: "SUM",
    VAR: "VAR",
    VARP: "VARP",
};
export const SortDirection = {
    ASC: "ASC",
    DESC: "DESC",
};
export const AnalysisErrorType = {
    ACCESS_DENIED: "ACCESS_DENIED",
    COLUMN_GEOGRAPHIC_ROLE_MISMATCH: "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
    COLUMN_REPLACEMENT_MISSING: "COLUMN_REPLACEMENT_MISSING",
    COLUMN_TYPE_MISMATCH: "COLUMN_TYPE_MISMATCH",
    DATA_SET_NOT_FOUND: "DATA_SET_NOT_FOUND",
    INTERNAL_FAILURE: "INTERNAL_FAILURE",
    PARAMETER_NOT_FOUND: "PARAMETER_NOT_FOUND",
    PARAMETER_TYPE_INVALID: "PARAMETER_TYPE_INVALID",
    PARAMETER_VALUE_INCOMPATIBLE: "PARAMETER_VALUE_INCOMPATIBLE",
    SOURCE_NOT_FOUND: "SOURCE_NOT_FOUND",
};
export const ResourceStatus = {
    CREATION_FAILED: "CREATION_FAILED",
    CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS",
    CREATION_SUCCESSFUL: "CREATION_SUCCESSFUL",
    DELETED: "DELETED",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS",
    UPDATE_SUCCESSFUL: "UPDATE_SUCCESSFUL",
};
export const ResizeOption = {
    FIXED: "FIXED",
    RESPONSIVE: "RESPONSIVE",
};
export const PaperOrientation = {
    LANDSCAPE: "LANDSCAPE",
    PORTRAIT: "PORTRAIT",
};
export const PaperSize = {
    A0: "A0",
    A1: "A1",
    A2: "A2",
    A3: "A3",
    A4: "A4",
    A5: "A5",
    JIS_B4: "JIS_B4",
    JIS_B5: "JIS_B5",
    US_LEGAL: "US_LEGAL",
    US_LETTER: "US_LETTER",
    US_TABLOID_LEDGER: "US_TABLOID_LEDGER",
};
export const SheetContentType = {
    INTERACTIVE: "INTERACTIVE",
    PAGINATED: "PAGINATED",
};
export const SpecialValue = {
    EMPTY: "EMPTY",
    NULL: "NULL",
    OTHER: "OTHER",
};
export const NegativeValueDisplayMode = {
    NEGATIVE: "NEGATIVE",
    POSITIVE: "POSITIVE",
};
export const NumberScale = {
    AUTO: "AUTO",
    BILLIONS: "BILLIONS",
    MILLIONS: "MILLIONS",
    NONE: "NONE",
    THOUSANDS: "THOUSANDS",
    TRILLIONS: "TRILLIONS",
};
export const NumericSeparatorSymbol = {
    COMMA: "COMMA",
    DOT: "DOT",
    SPACE: "SPACE",
};
export const Visibility = {
    HIDDEN: "HIDDEN",
    VISIBLE: "VISIBLE",
};
export const ColumnRole = {
    DIMENSION: "DIMENSION",
    MEASURE: "MEASURE",
};
export const CrossDatasetTypes = {
    ALL_DATASETS: "ALL_DATASETS",
    SINGLE_DATASET: "SINGLE_DATASET",
};
export const CategoryFilterMatchOperator = {
    CONTAINS: "CONTAINS",
    DOES_NOT_CONTAIN: "DOES_NOT_CONTAIN",
    DOES_NOT_EQUAL: "DOES_NOT_EQUAL",
    ENDS_WITH: "ENDS_WITH",
    EQUALS: "EQUALS",
    STARTS_WITH: "STARTS_WITH",
};
export const FilterNullOption = {
    ALL_VALUES: "ALL_VALUES",
    NON_NULLS_ONLY: "NON_NULLS_ONLY",
    NULLS_ONLY: "NULLS_ONLY",
};
export const CategoryFilterSelectAllOptions = {
    FILTER_ALL_VALUES: "FILTER_ALL_VALUES",
};
export const FontDecoration = {
    NONE: "NONE",
    UNDERLINE: "UNDERLINE",
};
export const RelativeFontSize = {
    EXTRA_LARGE: "EXTRA_LARGE",
    EXTRA_SMALL: "EXTRA_SMALL",
    LARGE: "LARGE",
    MEDIUM: "MEDIUM",
    SMALL: "SMALL",
};
export const FontStyle = {
    ITALIC: "ITALIC",
    NORMAL: "NORMAL",
};
export const FontWeightName = {
    BOLD: "BOLD",
    NORMAL: "NORMAL",
};
export const SheetControlDateTimePickerType = {
    DATE_RANGE: "DATE_RANGE",
    SINGLE_VALUED: "SINGLE_VALUED",
};
export const SheetControlListType = {
    MULTI_SELECT: "MULTI_SELECT",
    SINGLE_SELECT: "SINGLE_SELECT",
};
export const SheetControlSliderType = {
    RANGE: "RANGE",
    SINGLE_POINT: "SINGLE_POINT",
};
export const NumericEqualityMatchOperator = {
    DOES_NOT_EQUAL: "DOES_NOT_EQUAL",
    EQUALS: "EQUALS",
};
export const NumericFilterSelectAllOptions = {
    FILTER_ALL_VALUES: "FILTER_ALL_VALUES",
};
export const AnchorOption = {
    NOW: "NOW",
};
export const TimeGranularity = {
    DAY: "DAY",
    HOUR: "HOUR",
    MILLISECOND: "MILLISECOND",
    MINUTE: "MINUTE",
    MONTH: "MONTH",
    QUARTER: "QUARTER",
    SECOND: "SECOND",
    WEEK: "WEEK",
    YEAR: "YEAR",
};
export const WidgetStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const RelativeDateType = {
    LAST: "LAST",
    NEXT: "NEXT",
    NOW: "NOW",
    PREVIOUS: "PREVIOUS",
    THIS: "THIS",
};
export const FilterVisualScope = {
    ALL_VISUALS: "ALL_VISUALS",
    SELECTED_VISUALS: "SELECTED_VISUALS",
};
export const DayOfTheWeek = {
    FRIDAY: "FRIDAY",
    MONDAY: "MONDAY",
    SATURDAY: "SATURDAY",
    SUNDAY: "SUNDAY",
    THURSDAY: "THURSDAY",
    TUESDAY: "TUESDAY",
    WEDNESDAY: "WEDNESDAY",
};
export const ValueWhenUnsetOption = {
    NULL: "NULL",
    RECOMMENDED_VALUE: "RECOMMENDED_VALUE",
};
export const ParameterValueType = {
    MULTI_VALUED: "MULTI_VALUED",
    SINGLE_VALUED: "SINGLE_VALUED",
};
export const LayoutElementType = {
    FILTER_CONTROL: "FILTER_CONTROL",
    PARAMETER_CONTROL: "PARAMETER_CONTROL",
    TEXT_BOX: "TEXT_BOX",
    VISUAL: "VISUAL",
};
export const SectionPageBreakStatus = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const SelectedFieldOptions = {
    ALL_FIELDS: "ALL_FIELDS",
};
export const TargetVisualOptions = {
    ALL_VISUALS: "ALL_VISUALS",
};
export const SelectAllValueOptions = {
    ALL_VALUES: "ALL_VALUES",
};
export const URLTargetConfiguration = {
    NEW_TAB: "NEW_TAB",
    NEW_WINDOW: "NEW_WINDOW",
    SAME_TAB: "SAME_TAB",
};
export const VisualCustomActionTrigger = {
    DATA_POINT_CLICK: "DATA_POINT_CLICK",
    DATA_POINT_MENU: "DATA_POINT_MENU",
};
export const BarsArrangement = {
    CLUSTERED: "CLUSTERED",
    STACKED: "STACKED",
    STACKED_PERCENT: "STACKED_PERCENT",
};
export const DataLabelContent = {
    PERCENT: "PERCENT",
    VALUE: "VALUE",
    VALUE_AND_PERCENT: "VALUE_AND_PERCENT",
};
export const DataLabelOverlap = {
    DISABLE_OVERLAP: "DISABLE_OVERLAP",
    ENABLE_OVERLAP: "ENABLE_OVERLAP",
};
export const DataLabelPosition = {
    BOTTOM: "BOTTOM",
    INSIDE: "INSIDE",
    LEFT: "LEFT",
    OUTSIDE: "OUTSIDE",
    RIGHT: "RIGHT",
    TOP: "TOP",
};
export const LegendPosition = {
    AUTO: "AUTO",
    BOTTOM: "BOTTOM",
    RIGHT: "RIGHT",
    TOP: "TOP",
};
export const BarChartOrientation = {
    HORIZONTAL: "HORIZONTAL",
    VERTICAL: "VERTICAL",
};
export const AxisBinding = {
    PRIMARY_YAXIS: "PRIMARY_YAXIS",
    SECONDARY_YAXIS: "SECONDARY_YAXIS",
};
export const ReferenceLineSeriesType = {
    BAR: "BAR",
    LINE: "LINE",
};
export const ReferenceLineLabelHorizontalPosition = {
    CENTER: "CENTER",
    LEFT: "LEFT",
    RIGHT: "RIGHT",
};
export const ReferenceLineValueLabelRelativePosition = {
    AFTER_CUSTOM_LABEL: "AFTER_CUSTOM_LABEL",
    BEFORE_CUSTOM_LABEL: "BEFORE_CUSTOM_LABEL",
};
export const ReferenceLineLabelVerticalPosition = {
    ABOVE: "ABOVE",
    BELOW: "BELOW",
};
export const ReferenceLinePatternType = {
    DASHED: "DASHED",
    DOTTED: "DOTTED",
    SOLID: "SOLID",
};
export const PanelBorderStyle = {
    DASHED: "DASHED",
    DOTTED: "DOTTED",
    SOLID: "SOLID",
};
export const HorizontalTextAlignment = {
    AUTO: "AUTO",
    CENTER: "CENTER",
    LEFT: "LEFT",
    RIGHT: "RIGHT",
};
export const SmallMultiplesAxisPlacement = {
    INSIDE: "INSIDE",
    OUTSIDE: "OUTSIDE",
};
export const SmallMultiplesAxisScale = {
    INDEPENDENT: "INDEPENDENT",
    SHARED: "SHARED",
};
export const OtherCategories = {
    EXCLUDE: "EXCLUDE",
    INCLUDE: "INCLUDE",
};
export const TooltipTarget = {
    BAR: "BAR",
    BOTH: "BOTH",
    LINE: "LINE",
};
export const TooltipTitleType = {
    NONE: "NONE",
    PRIMARY_VALUE: "PRIMARY_VALUE",
};
export const SelectedTooltipType = {
    BASIC: "BASIC",
    DETAILED: "DETAILED",
};
export const PivotTableDataPathType = {
    COUNT_METRIC_COLUMN: "COUNT_METRIC_COLUMN",
    EMPTY_COLUMN_HEADER: "EMPTY_COLUMN_HEADER",
    HIERARCHY_ROWS_LAYOUT_COLUMN: "HIERARCHY_ROWS_LAYOUT_COLUMN",
    MULTIPLE_ROW_METRICS_COLUMN: "MULTIPLE_ROW_METRICS_COLUMN",
};
export const CalculatedFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Expression && { Expression: SENSITIVE_STRING }),
});
export const CustomColorFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FieldValue && { FieldValue: SENSITIVE_STRING }),
});
export const ColorsConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomColors && { CustomColors: obj.CustomColors.map((item) => CustomColorFilterSensitiveLog(item)) }),
});
export const NullValueFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NullString && { NullString: SENSITIVE_STRING }),
});
export const CurrencyDisplayFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Prefix && { Prefix: SENSITIVE_STRING }),
    ...(obj.Suffix && { Suffix: SENSITIVE_STRING }),
    ...(obj.NullValueFormatConfiguration && {
        NullValueFormatConfiguration: NullValueFormatConfigurationFilterSensitiveLog(obj.NullValueFormatConfiguration),
    }),
});
export const NumberDisplayFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Prefix && { Prefix: SENSITIVE_STRING }),
    ...(obj.Suffix && { Suffix: SENSITIVE_STRING }),
    ...(obj.NullValueFormatConfiguration && {
        NullValueFormatConfiguration: NullValueFormatConfigurationFilterSensitiveLog(obj.NullValueFormatConfiguration),
    }),
});
export const PercentageDisplayFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Prefix && { Prefix: SENSITIVE_STRING }),
    ...(obj.Suffix && { Suffix: SENSITIVE_STRING }),
    ...(obj.NullValueFormatConfiguration && {
        NullValueFormatConfiguration: NullValueFormatConfigurationFilterSensitiveLog(obj.NullValueFormatConfiguration),
    }),
});
export const NumericFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NumberDisplayFormatConfiguration && {
        NumberDisplayFormatConfiguration: NumberDisplayFormatConfigurationFilterSensitiveLog(obj.NumberDisplayFormatConfiguration),
    }),
    ...(obj.CurrencyDisplayFormatConfiguration && {
        CurrencyDisplayFormatConfiguration: CurrencyDisplayFormatConfigurationFilterSensitiveLog(obj.CurrencyDisplayFormatConfiguration),
    }),
    ...(obj.PercentageDisplayFormatConfiguration && {
        PercentageDisplayFormatConfiguration: PercentageDisplayFormatConfigurationFilterSensitiveLog(obj.PercentageDisplayFormatConfiguration),
    }),
});
export const DateTimeFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NullValueFormatConfiguration && {
        NullValueFormatConfiguration: NullValueFormatConfigurationFilterSensitiveLog(obj.NullValueFormatConfiguration),
    }),
    ...(obj.NumericFormatConfiguration && {
        NumericFormatConfiguration: NumericFormatConfigurationFilterSensitiveLog(obj.NumericFormatConfiguration),
    }),
});
export const NumberFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: NumericFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const StringFormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.NullValueFormatConfiguration && {
        NullValueFormatConfiguration: NullValueFormatConfigurationFilterSensitiveLog(obj.NullValueFormatConfiguration),
    }),
    ...(obj.NumericFormatConfiguration && {
        NumericFormatConfiguration: NumericFormatConfigurationFilterSensitiveLog(obj.NumericFormatConfiguration),
    }),
});
export const FormatConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StringFormatConfiguration && {
        StringFormatConfiguration: StringFormatConfigurationFilterSensitiveLog(obj.StringFormatConfiguration),
    }),
    ...(obj.NumberFormatConfiguration && {
        NumberFormatConfiguration: NumberFormatConfigurationFilterSensitiveLog(obj.NumberFormatConfiguration),
    }),
    ...(obj.DateTimeFormatConfiguration && {
        DateTimeFormatConfiguration: DateTimeFormatConfigurationFilterSensitiveLog(obj.DateTimeFormatConfiguration),
    }),
});
export const ColumnConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: FormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
    ...(obj.ColorsConfiguration && {
        ColorsConfiguration: ColorsConfigurationFilterSensitiveLog(obj.ColorsConfiguration),
    }),
});
export const RollingDateConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Expression && { Expression: SENSITIVE_STRING }),
});
export const TimeEqualityFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RollingDate && { RollingDate: RollingDateConfigurationFilterSensitiveLog(obj.RollingDate) }),
});
export const TimeRangeFilterValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RollingDate && { RollingDate: RollingDateConfigurationFilterSensitiveLog(obj.RollingDate) }),
});
export const TimeRangeFilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RangeMinimumValue && { RangeMinimumValue: TimeRangeFilterValueFilterSensitiveLog(obj.RangeMinimumValue) }),
    ...(obj.RangeMaximumValue && { RangeMaximumValue: TimeRangeFilterValueFilterSensitiveLog(obj.RangeMaximumValue) }),
});
export const FilterFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TimeEqualityFilter && { TimeEqualityFilter: TimeEqualityFilterFilterSensitiveLog(obj.TimeEqualityFilter) }),
    ...(obj.TimeRangeFilter && { TimeRangeFilter: TimeRangeFilterFilterSensitiveLog(obj.TimeRangeFilter) }),
});
export const FilterGroupFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Filters && { Filters: obj.Filters.map((item) => FilterFilterSensitiveLog(item)) }),
});
export const DateTimeDefaultValuesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StaticValues && { StaticValues: SENSITIVE_STRING }),
    ...(obj.RollingDate && { RollingDate: RollingDateConfigurationFilterSensitiveLog(obj.RollingDate) }),
});
export const DateTimeValueWhenUnsetConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValue && { CustomValue: SENSITIVE_STRING }),
});
export const DateTimeParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DefaultValues && { DefaultValues: DateTimeDefaultValuesFilterSensitiveLog(obj.DefaultValues) }),
    ...(obj.ValueWhenUnset && {
        ValueWhenUnset: DateTimeValueWhenUnsetConfigurationFilterSensitiveLog(obj.ValueWhenUnset),
    }),
});
export const DecimalDefaultValuesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StaticValues && { StaticValues: SENSITIVE_STRING }),
});
export const DecimalValueWhenUnsetConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValue && { CustomValue: SENSITIVE_STRING }),
});
export const DecimalParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DefaultValues && { DefaultValues: DecimalDefaultValuesFilterSensitiveLog(obj.DefaultValues) }),
    ...(obj.ValueWhenUnset && {
        ValueWhenUnset: DecimalValueWhenUnsetConfigurationFilterSensitiveLog(obj.ValueWhenUnset),
    }),
});
export const IntegerDefaultValuesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StaticValues && { StaticValues: SENSITIVE_STRING }),
});
export const IntegerValueWhenUnsetConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValue && { CustomValue: SENSITIVE_STRING }),
});
export const IntegerParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DefaultValues && { DefaultValues: IntegerDefaultValuesFilterSensitiveLog(obj.DefaultValues) }),
    ...(obj.ValueWhenUnset && {
        ValueWhenUnset: IntegerValueWhenUnsetConfigurationFilterSensitiveLog(obj.ValueWhenUnset),
    }),
});
export const StringDefaultValuesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StaticValues && { StaticValues: SENSITIVE_STRING }),
});
export const StringValueWhenUnsetConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValue && { CustomValue: SENSITIVE_STRING }),
});
export const StringParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DefaultValues && { DefaultValues: StringDefaultValuesFilterSensitiveLog(obj.DefaultValues) }),
    ...(obj.ValueWhenUnset && {
        ValueWhenUnset: StringValueWhenUnsetConfigurationFilterSensitiveLog(obj.ValueWhenUnset),
    }),
});
export const ParameterDeclarationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StringParameterDeclaration && {
        StringParameterDeclaration: StringParameterDeclarationFilterSensitiveLog(obj.StringParameterDeclaration),
    }),
    ...(obj.DecimalParameterDeclaration && {
        DecimalParameterDeclaration: DecimalParameterDeclarationFilterSensitiveLog(obj.DecimalParameterDeclaration),
    }),
    ...(obj.IntegerParameterDeclaration && {
        IntegerParameterDeclaration: IntegerParameterDeclarationFilterSensitiveLog(obj.IntegerParameterDeclaration),
    }),
    ...(obj.DateTimeParameterDeclaration && {
        DateTimeParameterDeclaration: DateTimeParameterDeclarationFilterSensitiveLog(obj.DateTimeParameterDeclaration),
    }),
});
export const SheetElementRenderingRuleFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Expression && { Expression: SENSITIVE_STRING }),
});
export const FreeFormLayoutElementFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RenderingRules && {
        RenderingRules: obj.RenderingRules.map((item) => SheetElementRenderingRuleFilterSensitiveLog(item)),
    }),
});
export const FreeFormLayoutConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FreeFormSectionLayoutConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SectionLayoutConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BodySectionContentFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BodySectionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HeaderFooterSectionConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SectionBasedLayoutConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LayoutConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LayoutFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CustomParameterValuesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StringValues && { StringValues: SENSITIVE_STRING }),
    ...(obj.IntegerValues && { IntegerValues: SENSITIVE_STRING }),
    ...(obj.DecimalValues && { DecimalValues: SENSITIVE_STRING }),
    ...(obj.DateTimeValues && { DateTimeValues: SENSITIVE_STRING }),
});
export const CustomValuesConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValues && { CustomValues: CustomParameterValuesFilterSensitiveLog(obj.CustomValues) }),
});
export const DestinationParameterValueConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomValuesConfiguration && {
        CustomValuesConfiguration: CustomValuesConfigurationFilterSensitiveLog(obj.CustomValuesConfiguration),
    }),
});
export const SetParameterValueConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: DestinationParameterValueConfigurationFilterSensitiveLog(obj.Value) }),
});
export const CustomActionSetParametersOperationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ParameterValueConfigurations && {
        ParameterValueConfigurations: obj.ParameterValueConfigurations.map((item) => SetParameterValueConfigurationFilterSensitiveLog(item)),
    }),
});
export const VisualCustomActionOperationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SetParametersOperation && {
        SetParametersOperation: CustomActionSetParametersOperationFilterSensitiveLog(obj.SetParametersOperation),
    }),
});
export const VisualCustomActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DataPathLabelTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FieldValue && { FieldValue: SENSITIVE_STRING }),
});
export const DataLabelTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DataPathLabelType && { DataPathLabelType: DataPathLabelTypeFilterSensitiveLog(obj.DataPathLabelType) }),
});
export const DataLabelOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DataLabelTypes && {
        DataLabelTypes: obj.DataLabelTypes.map((item) => DataLabelTypeFilterSensitiveLog(item)),
    }),
});
export const CategoricalDimensionFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: StringFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const DateDimensionFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: DateTimeFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const NumericalDimensionFieldFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DimensionFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CategoricalDimensionField && {
        CategoricalDimensionField: CategoricalDimensionFieldFilterSensitiveLog(obj.CategoricalDimensionField),
    }),
    ...(obj.DateDimensionField && { DateDimensionField: DateDimensionFieldFilterSensitiveLog(obj.DateDimensionField) }),
});
export const CalculatedMeasureFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Expression && { Expression: SENSITIVE_STRING }),
});
export const CategoricalMeasureFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: StringFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const DateMeasureFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: DateTimeFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const NumericalMeasureFieldFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MeasureFieldFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CategoricalMeasureField && {
        CategoricalMeasureField: CategoricalMeasureFieldFilterSensitiveLog(obj.CategoricalMeasureField),
    }),
    ...(obj.DateMeasureField && { DateMeasureField: DateMeasureFieldFilterSensitiveLog(obj.DateMeasureField) }),
    ...(obj.CalculatedMeasureField && {
        CalculatedMeasureField: CalculatedMeasureFieldFilterSensitiveLog(obj.CalculatedMeasureField),
    }),
});
export const BarChartAggregatedFieldWellsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Values && { Values: obj.Values.map((item) => MeasureFieldFilterSensitiveLog(item)) }),
});
export const BarChartFieldWellsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReferenceLineStaticDataConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const ReferenceLineDataConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.StaticConfiguration && {
        StaticConfiguration: ReferenceLineStaticDataConfigurationFilterSensitiveLog(obj.StaticConfiguration),
    }),
});
export const ReferenceLineValueLabelConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.FormatConfiguration && {
        FormatConfiguration: NumericFormatConfigurationFilterSensitiveLog(obj.FormatConfiguration),
    }),
});
export const ReferenceLineLabelConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ValueLabelConfiguration && {
        ValueLabelConfiguration: ReferenceLineValueLabelConfigurationFilterSensitiveLog(obj.ValueLabelConfiguration),
    }),
});
export const ReferenceLineFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DataConfiguration && {
        DataConfiguration: ReferenceLineDataConfigurationFilterSensitiveLog(obj.DataConfiguration),
    }),
    ...(obj.LabelConfiguration && {
        LabelConfiguration: ReferenceLineLabelConfigurationFilterSensitiveLog(obj.LabelConfiguration),
    }),
});
