import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  AccountCustomization,
  AccountInfo,
  AccountSettings,
  Analysis,
  AnalysisError,
  Entity,
  NumberScale,
  ResourceStatus,
  Sheet,
} from "./models_0";
import {
  _Parameters,
  AnalysisDefinition,
  AnalysisSummary,
  AnonymousUserEmbeddingExperienceConfiguration,
  AnonymousUserSnapshotJobResult,
  AssetBundleCloudFormationOverridePropertyConfiguration,
  AssetBundleExportFormat,
  AssetBundleExportJobError,
  AssetBundleExportJobStatus,
  AssetBundleExportJobSummary,
  AssetBundleExportJobValidationStrategy,
  AssetBundleExportJobWarning,
  AssetBundleImportFailureAction,
  AssetBundleImportJobError,
  AssetBundleImportJobOverrideParameters,
  AssetBundleImportJobOverridePermissions,
  AssetBundleImportJobOverrideTags,
  AssetBundleImportJobOverrideValidationStrategy,
  AssetBundleImportJobStatus,
  AssetBundleImportJobSummary,
  AssetBundleImportJobWarning,
  AssetBundleImportSourceDescription,
  AssignmentStatus,
  AuthorSpecifiedAggregation,
  BookmarksConfigurations,
  CategoryFilterFunction,
  CategoryFilterType,
  CellValueSynonym,
  CollectiveConstant,
  ColumnDataRole,
  ColumnDataSubType,
  ColumnDataType,
  ColumnGroup,
  ColumnLevelPermissionRule,
  ComparativeOrder,
  ConstantType,
  DashboardPublishOptions,
  DashboardVersionDefinition,
  DashboardVisualId,
  DataSetConfiguration,
  DataSetImportMode,
  DatasetParameter,
  DataSetUsageConfiguration,
  DataSourceParameters,
  DataSourceType,
  FieldFolder,
  FilterOperator,
  FolderType,
  Group,
  GroupMember,
  IdentityStore,
  IngestionStatus,
  LinkSharingConfiguration,
  LogicalTable,
  MemberType,
  NamespaceStatus,
  PhysicalTable,
  RefreshSchedule,
  ResourcePermission,
  Role,
  RowLevelPermissionDataSet,
  RowLevelPermissionTagConfiguration,
  ServiceType,
  SharingModel,
  SnapshotFile,
  SnapshotS3DestinationConfiguration,
  SslProperties,
  Tag,
  TemplateAlias,
  TemplateVersionDefinition,
  ThemeConfiguration,
  VpcConnectionProperties,
} from "./models_2";
import { QuickSightServiceException as __BaseException } from "./QuickSightServiceException";
export interface CreateThemeRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  Name: string | undefined;
  BaseThemeId: string | undefined;
  VersionDescription?: string;
  Configuration: ThemeConfiguration | undefined;
  Permissions?: ResourcePermission[];
  Tags?: Tag[];
}
export interface CreateThemeResponse {
  Arn?: string;
  VersionArn?: string;
  ThemeId?: string;
  CreationStatus?: ResourceStatus;
  Status?: number;
  RequestId?: string;
}
export interface CreateThemeAliasRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  AliasName: string | undefined;
  ThemeVersionNumber: number | undefined;
}
export interface ThemeAlias {
  Arn?: string;
  AliasName?: string;
  ThemeVersionNumber?: number;
}
export interface CreateThemeAliasResponse {
  ThemeAlias?: ThemeAlias;
  Status?: number;
  RequestId?: string;
}
export declare const DefaultAggregation: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type DefaultAggregation =
  (typeof DefaultAggregation)[keyof typeof DefaultAggregation];
export declare const DisplayFormat: {
  readonly AUTO: "AUTO";
  readonly CURRENCY: "CURRENCY";
  readonly DATE: "DATE";
  readonly NUMBER: "NUMBER";
  readonly PERCENT: "PERCENT";
  readonly STRING: "STRING";
};
export type DisplayFormat = (typeof DisplayFormat)[keyof typeof DisplayFormat];
export declare const TopicNumericSeparatorSymbol: {
  readonly COMMA: "COMMA";
  readonly DOT: "DOT";
};
export type TopicNumericSeparatorSymbol =
  (typeof TopicNumericSeparatorSymbol)[keyof typeof TopicNumericSeparatorSymbol];
export interface NegativeFormat {
  Prefix?: string;
  Suffix?: string;
}
export interface DisplayFormatOptions {
  UseBlankCellFormat?: boolean;
  BlankCellFormat?: string;
  DateFormat?: string;
  DecimalSeparator?: TopicNumericSeparatorSymbol;
  GroupingSeparator?: string;
  UseGrouping?: boolean;
  FractionDigits?: number;
  Prefix?: string;
  Suffix?: string;
  UnitScaler?: NumberScale;
  NegativeFormat?: NegativeFormat;
  CurrencySymbol?: string;
}
export interface DefaultFormatting {
  DisplayFormat?: DisplayFormat;
  DisplayFormatOptions?: DisplayFormatOptions;
}
export interface SemanticType {
  TypeName?: string;
  SubTypeName?: string;
  TypeParameters?: Record<string, string>;
  TruthyCellValue?: string;
  TruthyCellValueSynonyms?: string[];
  FalseyCellValue?: string;
  FalseyCellValueSynonyms?: string[];
}
export declare const TopicTimeGranularity: {
  readonly DAY: "DAY";
  readonly HOUR: "HOUR";
  readonly MINUTE: "MINUTE";
  readonly MONTH: "MONTH";
  readonly QUARTER: "QUARTER";
  readonly SECOND: "SECOND";
  readonly WEEK: "WEEK";
  readonly YEAR: "YEAR";
};
export type TopicTimeGranularity =
  (typeof TopicTimeGranularity)[keyof typeof TopicTimeGranularity];
export interface TopicCalculatedField {
  CalculatedFieldName: string | undefined;
  CalculatedFieldDescription?: string;
  Expression: string | undefined;
  CalculatedFieldSynonyms?: string[];
  IsIncludedInTopic?: boolean;
  DisableIndexing?: boolean;
  ColumnDataRole?: ColumnDataRole;
  TimeGranularity?: TopicTimeGranularity;
  DefaultFormatting?: DefaultFormatting;
  Aggregation?: DefaultAggregation;
  ComparativeOrder?: ComparativeOrder;
  SemanticType?: SemanticType;
  AllowedAggregations?: AuthorSpecifiedAggregation[];
  NotAllowedAggregations?: AuthorSpecifiedAggregation[];
  NeverAggregateInFilter?: boolean;
  CellValueSynonyms?: CellValueSynonym[];
  NonAdditive?: boolean;
}
export interface TopicColumn {
  ColumnName: string | undefined;
  ColumnFriendlyName?: string;
  ColumnDescription?: string;
  ColumnSynonyms?: string[];
  ColumnDataRole?: ColumnDataRole;
  Aggregation?: DefaultAggregation;
  IsIncludedInTopic?: boolean;
  DisableIndexing?: boolean;
  ComparativeOrder?: ComparativeOrder;
  SemanticType?: SemanticType;
  TimeGranularity?: TopicTimeGranularity;
  AllowedAggregations?: AuthorSpecifiedAggregation[];
  NotAllowedAggregations?: AuthorSpecifiedAggregation[];
  DefaultFormatting?: DefaultFormatting;
  NeverAggregateInFilter?: boolean;
  CellValueSynonyms?: CellValueSynonym[];
  NonAdditive?: boolean;
}
export interface DataAggregation {
  DatasetRowDateGranularity?: TopicTimeGranularity;
  DefaultDateColumnName?: string;
}
export interface TopicCategoryFilterConstant {
  ConstantType?: ConstantType;
  SingularConstant?: string;
  CollectiveConstant?: CollectiveConstant;
}
export interface TopicCategoryFilter {
  CategoryFilterFunction?: CategoryFilterFunction;
  CategoryFilterType?: CategoryFilterType;
  Constant?: TopicCategoryFilterConstant;
  Inverse?: boolean;
}
export interface RangeConstant {
  Minimum?: string;
  Maximum?: string;
}
export interface TopicRangeFilterConstant {
  ConstantType?: ConstantType;
  RangeConstant?: RangeConstant;
}
export interface TopicDateRangeFilter {
  Inclusive?: boolean;
  Constant?: TopicRangeFilterConstant;
}
export declare const FilterClass: {
  readonly CONDITIONAL_VALUE_FILTER: "CONDITIONAL_VALUE_FILTER";
  readonly ENFORCED_VALUE_FILTER: "ENFORCED_VALUE_FILTER";
  readonly NAMED_VALUE_FILTER: "NAMED_VALUE_FILTER";
};
export type FilterClass = (typeof FilterClass)[keyof typeof FilterClass];
export declare const NamedFilterType: {
  readonly CATEGORY_FILTER: "CATEGORY_FILTER";
  readonly DATE_RANGE_FILTER: "DATE_RANGE_FILTER";
  readonly NUMERIC_EQUALITY_FILTER: "NUMERIC_EQUALITY_FILTER";
  readonly NUMERIC_RANGE_FILTER: "NUMERIC_RANGE_FILTER";
  readonly RELATIVE_DATE_FILTER: "RELATIVE_DATE_FILTER";
};
export type NamedFilterType =
  (typeof NamedFilterType)[keyof typeof NamedFilterType];
export declare const NamedFilterAggType: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly NO_AGGREGATION: "NO_AGGREGATION";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type NamedFilterAggType =
  (typeof NamedFilterAggType)[keyof typeof NamedFilterAggType];
export interface TopicSingularFilterConstant {
  ConstantType?: ConstantType;
  SingularConstant?: string;
}
export interface TopicNumericEqualityFilter {
  Constant?: TopicSingularFilterConstant;
  Aggregation?: NamedFilterAggType;
}
export interface TopicNumericRangeFilter {
  Inclusive?: boolean;
  Constant?: TopicRangeFilterConstant;
  Aggregation?: NamedFilterAggType;
}
export declare const TopicRelativeDateFilterFunction: {
  readonly LAST: "LAST";
  readonly NEXT: "NEXT";
  readonly NOW: "NOW";
  readonly PREVIOUS: "PREVIOUS";
  readonly THIS: "THIS";
};
export type TopicRelativeDateFilterFunction =
  (typeof TopicRelativeDateFilterFunction)[keyof typeof TopicRelativeDateFilterFunction];
export interface TopicRelativeDateFilter {
  TimeGranularity?: TopicTimeGranularity;
  RelativeDateFilterFunction?: TopicRelativeDateFilterFunction;
  Constant?: TopicSingularFilterConstant;
}
export interface TopicFilter {
  FilterDescription?: string;
  FilterClass?: FilterClass;
  FilterName: string | undefined;
  FilterSynonyms?: string[];
  OperandFieldName: string | undefined;
  FilterType?: NamedFilterType;
  CategoryFilter?: TopicCategoryFilter;
  NumericEqualityFilter?: TopicNumericEqualityFilter;
  NumericRangeFilter?: TopicNumericRangeFilter;
  DateRangeFilter?: TopicDateRangeFilter;
  RelativeDateFilter?: TopicRelativeDateFilter;
}
export declare const NamedEntityAggType: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly CUSTOM: "CUSTOM";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly PERCENTILE: "PERCENTILE";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type NamedEntityAggType =
  (typeof NamedEntityAggType)[keyof typeof NamedEntityAggType];
export interface NamedEntityDefinitionMetric {
  Aggregation?: NamedEntityAggType;
  AggregationFunctionParameters?: Record<string, string>;
}
export declare const PropertyRole: {
  readonly ID: "ID";
  readonly PRIMARY: "PRIMARY";
};
export type PropertyRole = (typeof PropertyRole)[keyof typeof PropertyRole];
export declare const PropertyUsage: {
  readonly DIMENSION: "DIMENSION";
  readonly INHERIT: "INHERIT";
  readonly MEASURE: "MEASURE";
};
export type PropertyUsage = (typeof PropertyUsage)[keyof typeof PropertyUsage];
export interface NamedEntityDefinition {
  FieldName?: string;
  PropertyName?: string;
  PropertyRole?: PropertyRole;
  PropertyUsage?: PropertyUsage;
  Metric?: NamedEntityDefinitionMetric;
}
export interface SemanticEntityType {
  TypeName?: string;
  SubTypeName?: string;
  TypeParameters?: Record<string, string>;
}
export interface TopicNamedEntity {
  EntityName: string | undefined;
  EntityDescription?: string;
  EntitySynonyms?: string[];
  SemanticEntityType?: SemanticEntityType;
  Definition?: NamedEntityDefinition[];
}
export interface DatasetMetadata {
  DatasetArn: string | undefined;
  DatasetName?: string;
  DatasetDescription?: string;
  DataAggregation?: DataAggregation;
  Filters?: TopicFilter[];
  Columns?: TopicColumn[];
  CalculatedFields?: TopicCalculatedField[];
  NamedEntities?: TopicNamedEntity[];
}
export declare const TopicUserExperienceVersion: {
  readonly LEGACY: "LEGACY";
  readonly NEW_READER_EXPERIENCE: "NEW_READER_EXPERIENCE";
};
export type TopicUserExperienceVersion =
  (typeof TopicUserExperienceVersion)[keyof typeof TopicUserExperienceVersion];
export interface TopicDetails {
  Name?: string;
  Description?: string;
  UserExperienceVersion?: TopicUserExperienceVersion;
  DataSets?: DatasetMetadata[];
}
export interface CreateTopicRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  Topic: TopicDetails | undefined;
  Tags?: Tag[];
}
export interface CreateTopicResponse {
  Arn?: string;
  TopicId?: string;
  RefreshArn?: string;
  RequestId?: string;
  Status?: number;
}
export declare const TopicScheduleType: {
  readonly DAILY: "DAILY";
  readonly HOURLY: "HOURLY";
  readonly MONTHLY: "MONTHLY";
  readonly WEEKLY: "WEEKLY";
};
export type TopicScheduleType =
  (typeof TopicScheduleType)[keyof typeof TopicScheduleType];
export interface TopicRefreshSchedule {
  IsEnabled: boolean | undefined;
  BasedOnSpiceSchedule: boolean | undefined;
  StartingAt?: Date;
  Timezone?: string;
  RepeatAt?: string;
  TopicScheduleType?: TopicScheduleType;
}
export interface CreateTopicRefreshScheduleRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  DatasetArn: string | undefined;
  DatasetName?: string;
  RefreshSchedule: TopicRefreshSchedule | undefined;
}
export interface CreateTopicRefreshScheduleResponse {
  TopicId?: string;
  TopicArn?: string;
  DatasetArn?: string;
  Status?: number;
  RequestId?: string;
}
export interface CreateVPCConnectionRequest {
  AwsAccountId: string | undefined;
  VPCConnectionId: string | undefined;
  Name: string | undefined;
  SubnetIds: string[] | undefined;
  SecurityGroupIds: string[] | undefined;
  DnsResolvers?: string[];
  RoleArn: string | undefined;
  Tags?: Tag[];
}
export declare const VPCConnectionAvailabilityStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly PARTIALLY_AVAILABLE: "PARTIALLY_AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type VPCConnectionAvailabilityStatus =
  (typeof VPCConnectionAvailabilityStatus)[keyof typeof VPCConnectionAvailabilityStatus];
export declare const VPCConnectionResourceStatus: {
  readonly CREATION_FAILED: "CREATION_FAILED";
  readonly CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS";
  readonly CREATION_SUCCESSFUL: "CREATION_SUCCESSFUL";
  readonly DELETED: "DELETED";
  readonly DELETION_FAILED: "DELETION_FAILED";
  readonly DELETION_IN_PROGRESS: "DELETION_IN_PROGRESS";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
  readonly UPDATE_SUCCESSFUL: "UPDATE_SUCCESSFUL";
};
export type VPCConnectionResourceStatus =
  (typeof VPCConnectionResourceStatus)[keyof typeof VPCConnectionResourceStatus];
export interface CreateVPCConnectionResponse {
  Arn?: string;
  VPCConnectionId?: string;
  CreationStatus?: VPCConnectionResourceStatus;
  AvailabilityStatus?: VPCConnectionAvailabilityStatus;
  RequestId?: string;
  Status?: number;
}
export declare const DashboardErrorType: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly COLUMN_GEOGRAPHIC_ROLE_MISMATCH: "COLUMN_GEOGRAPHIC_ROLE_MISMATCH";
  readonly COLUMN_REPLACEMENT_MISSING: "COLUMN_REPLACEMENT_MISSING";
  readonly COLUMN_TYPE_MISMATCH: "COLUMN_TYPE_MISMATCH";
  readonly DATA_SET_NOT_FOUND: "DATA_SET_NOT_FOUND";
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly PARAMETER_NOT_FOUND: "PARAMETER_NOT_FOUND";
  readonly PARAMETER_TYPE_INVALID: "PARAMETER_TYPE_INVALID";
  readonly PARAMETER_VALUE_INCOMPATIBLE: "PARAMETER_VALUE_INCOMPATIBLE";
  readonly SOURCE_NOT_FOUND: "SOURCE_NOT_FOUND";
};
export type DashboardErrorType =
  (typeof DashboardErrorType)[keyof typeof DashboardErrorType];
export interface DashboardError {
  Type?: DashboardErrorType;
  Message?: string;
  ViolatedEntities?: Entity[];
}
export interface DashboardVersion {
  CreatedTime?: Date;
  Errors?: DashboardError[];
  VersionNumber?: number;
  Status?: ResourceStatus;
  Arn?: string;
  SourceEntityArn?: string;
  DataSetArns?: string[];
  Description?: string;
  ThemeArn?: string;
  Sheets?: Sheet[];
}
export interface Dashboard {
  DashboardId?: string;
  Arn?: string;
  Name?: string;
  Version?: DashboardVersion;
  CreatedTime?: Date;
  LastPublishedTime?: Date;
  LastUpdatedTime?: Date;
  LinkEntities?: string[];
}
export declare const DashboardFilterAttribute: {
  readonly DASHBOARD_NAME: "DASHBOARD_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_USER: "QUICKSIGHT_USER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DashboardFilterAttribute =
  (typeof DashboardFilterAttribute)[keyof typeof DashboardFilterAttribute];
export interface DashboardSearchFilter {
  Operator: FilterOperator | undefined;
  Name?: DashboardFilterAttribute;
  Value?: string;
}
export interface DashboardSummary {
  Arn?: string;
  DashboardId?: string;
  Name?: string;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  PublishedVersionNumber?: number;
  LastPublishedTime?: Date;
}
export interface DashboardVersionSummary {
  Arn?: string;
  CreatedTime?: Date;
  VersionNumber?: number;
  Status?: ResourceStatus;
  SourceEntityArn?: string;
  Description?: string;
}
export interface OutputColumn {
  Name?: string;
  Description?: string;
  Type?: ColumnDataType;
  SubType?: ColumnDataSubType;
}
export interface DataSet {
  Arn?: string;
  DataSetId?: string;
  Name?: string;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  PhysicalTableMap?: Record<string, PhysicalTable>;
  LogicalTableMap?: Record<string, LogicalTable>;
  OutputColumns?: OutputColumn[];
  ImportMode?: DataSetImportMode;
  ConsumedSpiceCapacityInBytes?: number;
  ColumnGroups?: ColumnGroup[];
  FieldFolders?: Record<string, FieldFolder>;
  RowLevelPermissionDataSet?: RowLevelPermissionDataSet;
  RowLevelPermissionTagConfiguration?: RowLevelPermissionTagConfiguration;
  ColumnLevelPermissionRules?: ColumnLevelPermissionRule[];
  DataSetUsageConfiguration?: DataSetUsageConfiguration;
  DatasetParameters?: DatasetParameter[];
}
export declare const DataSetFilterAttribute: {
  readonly DATASET_NAME: "DATASET_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DataSetFilterAttribute =
  (typeof DataSetFilterAttribute)[keyof typeof DataSetFilterAttribute];
export declare const LookbackWindowSizeUnit: {
  readonly DAY: "DAY";
  readonly HOUR: "HOUR";
  readonly WEEK: "WEEK";
};
export type LookbackWindowSizeUnit =
  (typeof LookbackWindowSizeUnit)[keyof typeof LookbackWindowSizeUnit];
export interface LookbackWindow {
  ColumnName: string | undefined;
  Size: number | undefined;
  SizeUnit: LookbackWindowSizeUnit | undefined;
}
export interface IncrementalRefresh {
  LookbackWindow: LookbackWindow | undefined;
}
export interface RefreshConfiguration {
  IncrementalRefresh: IncrementalRefresh | undefined;
}
export interface DataSetRefreshProperties {
  RefreshConfiguration: RefreshConfiguration | undefined;
}
export interface DataSetSearchFilter {
  Operator: FilterOperator | undefined;
  Name: DataSetFilterAttribute | undefined;
  Value: string | undefined;
}
export interface DataSetSummary {
  Arn?: string;
  DataSetId?: string;
  Name?: string;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  ImportMode?: DataSetImportMode;
  RowLevelPermissionDataSet?: RowLevelPermissionDataSet;
  RowLevelPermissionTagConfigurationApplied?: boolean;
  ColumnLevelPermissionRulesApplied?: boolean;
}
export declare const DataSourceErrorInfoType: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly CONFLICT: "CONFLICT";
  readonly COPY_SOURCE_NOT_FOUND: "COPY_SOURCE_NOT_FOUND";
  readonly ENGINE_VERSION_NOT_SUPPORTED: "ENGINE_VERSION_NOT_SUPPORTED";
  readonly GENERIC_SQL_FAILURE: "GENERIC_SQL_FAILURE";
  readonly TIMEOUT: "TIMEOUT";
  readonly UNKNOWN: "UNKNOWN";
  readonly UNKNOWN_HOST: "UNKNOWN_HOST";
};
export type DataSourceErrorInfoType =
  (typeof DataSourceErrorInfoType)[keyof typeof DataSourceErrorInfoType];
export interface DataSourceErrorInfo {
  Type?: DataSourceErrorInfoType;
  Message?: string;
}
export interface DataSource {
  Arn?: string;
  DataSourceId?: string;
  Name?: string;
  Type?: DataSourceType;
  Status?: ResourceStatus;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  DataSourceParameters?: DataSourceParameters;
  AlternateDataSourceParameters?: DataSourceParameters[];
  VpcConnectionProperties?: VpcConnectionProperties;
  SslProperties?: SslProperties;
  ErrorInfo?: DataSourceErrorInfo;
  SecretArn?: string;
}
export declare const DataSourceFilterAttribute: {
  readonly DATASOURCE_NAME: "DATASOURCE_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DataSourceFilterAttribute =
  (typeof DataSourceFilterAttribute)[keyof typeof DataSourceFilterAttribute];
export interface DataSourceSearchFilter {
  Operator: FilterOperator | undefined;
  Name: DataSourceFilterAttribute | undefined;
  Value: string | undefined;
}
export interface DataSourceSummary {
  Arn?: string;
  DataSourceId?: string;
  Name?: string;
  Type?: DataSourceType;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
}
export interface DeleteAccountCustomizationRequest {
  AwsAccountId: string | undefined;
  Namespace?: string;
}
export interface DeleteAccountCustomizationResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteAccountSubscriptionRequest {
  AwsAccountId: string | undefined;
}
export interface DeleteAccountSubscriptionResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteAnalysisRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
  RecoveryWindowInDays?: number;
  ForceDeleteWithoutRecovery?: boolean;
}
export interface DeleteAnalysisResponse {
  Status?: number;
  Arn?: string;
  AnalysisId?: string;
  DeletionTime?: Date;
  RequestId?: string;
}
export interface DeleteDashboardRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  VersionNumber?: number;
}
export interface DeleteDashboardResponse {
  Status?: number;
  Arn?: string;
  DashboardId?: string;
  RequestId?: string;
}
export interface DeleteDataSetRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DeleteDataSetResponse {
  Arn?: string;
  DataSetId?: string;
  RequestId?: string;
  Status?: number;
}
export interface DeleteDataSetRefreshPropertiesRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DeleteDataSetRefreshPropertiesResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteDataSourceRequest {
  AwsAccountId: string | undefined;
  DataSourceId: string | undefined;
}
export interface DeleteDataSourceResponse {
  Arn?: string;
  DataSourceId?: string;
  RequestId?: string;
  Status?: number;
}
export interface DeleteFolderRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
}
export interface DeleteFolderResponse {
  Status?: number;
  Arn?: string;
  FolderId?: string;
  RequestId?: string;
}
export interface DeleteFolderMembershipRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  MemberId: string | undefined;
  MemberType: MemberType | undefined;
}
export interface DeleteFolderMembershipResponse {
  Status?: number;
  RequestId?: string;
}
export interface DeleteGroupRequest {
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteGroupResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteGroupMembershipRequest {
  MemberName: string | undefined;
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteGroupMembershipResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteIAMPolicyAssignmentRequest {
  AwsAccountId: string | undefined;
  AssignmentName: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteIAMPolicyAssignmentResponse {
  AssignmentName?: string;
  RequestId?: string;
  Status?: number;
}
export interface DeleteIdentityPropagationConfigRequest {
  AwsAccountId: string | undefined;
  Service: ServiceType | undefined;
}
export interface DeleteIdentityPropagationConfigResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteNamespaceRequest {
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteNamespaceResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteRefreshScheduleRequest {
  DataSetId: string | undefined;
  AwsAccountId: string | undefined;
  ScheduleId: string | undefined;
}
export interface DeleteRefreshScheduleResponse {
  Status?: number;
  RequestId?: string;
  ScheduleId?: string;
  Arn?: string;
}
export interface DeleteRoleCustomPermissionRequest {
  Role: Role | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteRoleCustomPermissionResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteRoleMembershipRequest {
  MemberName: string | undefined;
  Role: Role | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteRoleMembershipResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteTemplateRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  VersionNumber?: number;
}
export interface DeleteTemplateResponse {
  RequestId?: string;
  Arn?: string;
  TemplateId?: string;
  Status?: number;
}
export interface DeleteTemplateAliasRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  AliasName: string | undefined;
}
export interface DeleteTemplateAliasResponse {
  Status?: number;
  TemplateId?: string;
  AliasName?: string;
  Arn?: string;
  RequestId?: string;
}
export interface DeleteThemeRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  VersionNumber?: number;
}
export interface DeleteThemeResponse {
  Arn?: string;
  RequestId?: string;
  Status?: number;
  ThemeId?: string;
}
export interface DeleteThemeAliasRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  AliasName: string | undefined;
}
export interface DeleteThemeAliasResponse {
  AliasName?: string;
  Arn?: string;
  RequestId?: string;
  Status?: number;
  ThemeId?: string;
}
export interface DeleteTopicRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
}
export interface DeleteTopicResponse {
  Arn?: string;
  TopicId?: string;
  RequestId?: string;
  Status?: number;
}
export interface DeleteTopicRefreshScheduleRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  DatasetId: string | undefined;
}
export interface DeleteTopicRefreshScheduleResponse {
  TopicId?: string;
  TopicArn?: string;
  DatasetArn?: string;
  Status?: number;
  RequestId?: string;
}
export interface DeleteUserRequest {
  UserName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteUserResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteUserByPrincipalIdRequest {
  PrincipalId: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteUserByPrincipalIdResponse {
  RequestId?: string;
  Status?: number;
}
export interface DeleteVPCConnectionRequest {
  AwsAccountId: string | undefined;
  VPCConnectionId: string | undefined;
}
export interface DeleteVPCConnectionResponse {
  Arn?: string;
  VPCConnectionId?: string;
  DeletionStatus?: VPCConnectionResourceStatus;
  AvailabilityStatus?: VPCConnectionAvailabilityStatus;
  RequestId?: string;
  Status?: number;
}
export interface DescribeAccountCustomizationRequest {
  AwsAccountId: string | undefined;
  Namespace?: string;
  Resolved?: boolean;
}
export interface DescribeAccountCustomizationResponse {
  Arn?: string;
  AwsAccountId?: string;
  Namespace?: string;
  AccountCustomization?: AccountCustomization;
  RequestId?: string;
  Status?: number;
}
export interface DescribeAccountSettingsRequest {
  AwsAccountId: string | undefined;
}
export interface DescribeAccountSettingsResponse {
  AccountSettings?: AccountSettings;
  RequestId?: string;
  Status?: number;
}
export interface DescribeAccountSubscriptionRequest {
  AwsAccountId: string | undefined;
}
export interface DescribeAccountSubscriptionResponse {
  AccountInfo?: AccountInfo;
  Status?: number;
  RequestId?: string;
}
export interface DescribeAnalysisRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
}
export interface DescribeAnalysisResponse {
  Analysis?: Analysis;
  Status?: number;
  RequestId?: string;
}
export interface DescribeAnalysisDefinitionRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
}
export interface DescribeAnalysisDefinitionResponse {
  AnalysisId?: string;
  Name?: string;
  Errors?: AnalysisError[];
  ResourceStatus?: ResourceStatus;
  ThemeArn?: string;
  Definition?: AnalysisDefinition;
  Status?: number;
  RequestId?: string;
}
export interface DescribeAnalysisPermissionsRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
}
export interface DescribeAnalysisPermissionsResponse {
  AnalysisId?: string;
  AnalysisArn?: string;
  Permissions?: ResourcePermission[];
  Status?: number;
  RequestId?: string;
}
export interface DescribeAssetBundleExportJobRequest {
  AwsAccountId: string | undefined;
  AssetBundleExportJobId: string | undefined;
}
export interface DescribeAssetBundleExportJobResponse {
  JobStatus?: AssetBundleExportJobStatus;
  DownloadUrl?: string;
  Errors?: AssetBundleExportJobError[];
  Arn?: string;
  CreatedTime?: Date;
  AssetBundleExportJobId?: string;
  AwsAccountId?: string;
  ResourceArns?: string[];
  IncludeAllDependencies?: boolean;
  ExportFormat?: AssetBundleExportFormat;
  CloudFormationOverridePropertyConfiguration?: AssetBundleCloudFormationOverridePropertyConfiguration;
  RequestId?: string;
  Status?: number;
  IncludePermissions?: boolean;
  IncludeTags?: boolean;
  ValidationStrategy?: AssetBundleExportJobValidationStrategy;
  Warnings?: AssetBundleExportJobWarning[];
}
export interface DescribeAssetBundleImportJobRequest {
  AwsAccountId: string | undefined;
  AssetBundleImportJobId: string | undefined;
}
export interface DescribeAssetBundleImportJobResponse {
  JobStatus?: AssetBundleImportJobStatus;
  Errors?: AssetBundleImportJobError[];
  RollbackErrors?: AssetBundleImportJobError[];
  Arn?: string;
  CreatedTime?: Date;
  AssetBundleImportJobId?: string;
  AwsAccountId?: string;
  AssetBundleImportSource?: AssetBundleImportSourceDescription;
  OverrideParameters?: AssetBundleImportJobOverrideParameters;
  FailureAction?: AssetBundleImportFailureAction;
  RequestId?: string;
  Status?: number;
  OverridePermissions?: AssetBundleImportJobOverridePermissions;
  OverrideTags?: AssetBundleImportJobOverrideTags;
  OverrideValidationStrategy?: AssetBundleImportJobOverrideValidationStrategy;
  Warnings?: AssetBundleImportJobWarning[];
}
export interface DescribeDashboardRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  VersionNumber?: number;
  AliasName?: string;
}
export interface DescribeDashboardResponse {
  Dashboard?: Dashboard;
  Status?: number;
  RequestId?: string;
}
export interface DescribeDashboardDefinitionRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  VersionNumber?: number;
  AliasName?: string;
}
export interface DescribeDashboardDefinitionResponse {
  DashboardId?: string;
  Errors?: DashboardError[];
  Name?: string;
  ResourceStatus?: ResourceStatus;
  ThemeArn?: string;
  Definition?: DashboardVersionDefinition;
  Status?: number;
  RequestId?: string;
  DashboardPublishOptions?: DashboardPublishOptions;
}
export interface DescribeDashboardPermissionsRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
}
export interface DescribeDashboardPermissionsResponse {
  DashboardId?: string;
  DashboardArn?: string;
  Permissions?: ResourcePermission[];
  Status?: number;
  RequestId?: string;
  LinkSharingConfiguration?: LinkSharingConfiguration;
}
export interface DescribeDashboardSnapshotJobRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  SnapshotJobId: string | undefined;
}
export declare const SnapshotJobStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly QUEUED: "QUEUED";
  readonly RUNNING: "RUNNING";
};
export type SnapshotJobStatus =
  (typeof SnapshotJobStatus)[keyof typeof SnapshotJobStatus];
export interface SnapshotDestinationConfiguration {
  S3Destinations?: SnapshotS3DestinationConfiguration[];
}
export interface SnapshotFileGroup {
  Files?: SnapshotFile[];
}
export interface SnapshotConfiguration {
  FileGroups: SnapshotFileGroup[] | undefined;
  DestinationConfiguration?: SnapshotDestinationConfiguration;
  Parameters?: _Parameters;
}
export interface SnapshotAnonymousUserRedacted {
  RowLevelPermissionTagKeys?: string[];
}
export interface SnapshotUserConfigurationRedacted {
  AnonymousUsers?: SnapshotAnonymousUserRedacted[];
}
export interface DescribeDashboardSnapshotJobResponse {
  AwsAccountId?: string;
  DashboardId?: string;
  SnapshotJobId?: string;
  UserConfiguration?: SnapshotUserConfigurationRedacted;
  SnapshotConfiguration?: SnapshotConfiguration;
  Arn?: string;
  JobStatus?: SnapshotJobStatus;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  RequestId?: string;
  Status?: number;
}
export interface DescribeDashboardSnapshotJobResultRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  SnapshotJobId: string | undefined;
}
export interface SnapshotJobErrorInfo {
  ErrorMessage?: string;
  ErrorType?: string;
}
export interface SnapshotJobResult {
  AnonymousUsers?: AnonymousUserSnapshotJobResult[];
}
export interface DescribeDashboardSnapshotJobResultResponse {
  Arn?: string;
  JobStatus?: SnapshotJobStatus;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  Result?: SnapshotJobResult;
  ErrorInfo?: SnapshotJobErrorInfo;
  RequestId?: string;
  Status?: number;
}
export interface DescribeDataSetRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DescribeDataSetResponse {
  DataSet?: DataSet;
  RequestId?: string;
  Status?: number;
}
export interface DescribeDataSetPermissionsRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DescribeDataSetPermissionsResponse {
  DataSetArn?: string;
  DataSetId?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  Status?: number;
}
export interface DescribeDataSetRefreshPropertiesRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DescribeDataSetRefreshPropertiesResponse {
  RequestId?: string;
  Status?: number;
  DataSetRefreshProperties?: DataSetRefreshProperties;
}
export interface DescribeDataSourceRequest {
  AwsAccountId: string | undefined;
  DataSourceId: string | undefined;
}
export interface DescribeDataSourceResponse {
  DataSource?: DataSource;
  RequestId?: string;
  Status?: number;
}
export interface DescribeDataSourcePermissionsRequest {
  AwsAccountId: string | undefined;
  DataSourceId: string | undefined;
}
export interface DescribeDataSourcePermissionsResponse {
  DataSourceArn?: string;
  DataSourceId?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  Status?: number;
}
export interface DescribeFolderRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
}
export interface Folder {
  FolderId?: string;
  Arn?: string;
  Name?: string;
  FolderType?: FolderType;
  FolderPath?: string[];
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  SharingModel?: SharingModel;
}
export interface DescribeFolderResponse {
  Status?: number;
  Folder?: Folder;
  RequestId?: string;
}
export interface DescribeFolderPermissionsRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  Namespace?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeFolderPermissionsResponse {
  Status?: number;
  FolderId?: string;
  Arn?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export interface DescribeFolderResolvedPermissionsRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  Namespace?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeFolderResolvedPermissionsResponse {
  Status?: number;
  FolderId?: string;
  Arn?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  NextToken?: string;
}
export interface DescribeGroupRequest {
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DescribeGroupResponse {
  Group?: Group;
  RequestId?: string;
  Status?: number;
}
export interface DescribeGroupMembershipRequest {
  MemberName: string | undefined;
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DescribeGroupMembershipResponse {
  GroupMember?: GroupMember;
  RequestId?: string;
  Status?: number;
}
export interface DescribeIAMPolicyAssignmentRequest {
  AwsAccountId: string | undefined;
  AssignmentName: string | undefined;
  Namespace: string | undefined;
}
export interface IAMPolicyAssignment {
  AwsAccountId?: string;
  AssignmentId?: string;
  AssignmentName?: string;
  PolicyArn?: string;
  Identities?: Record<string, string[]>;
  AssignmentStatus?: AssignmentStatus;
}
export interface DescribeIAMPolicyAssignmentResponse {
  IAMPolicyAssignment?: IAMPolicyAssignment;
  RequestId?: string;
  Status?: number;
}
export interface DescribeIngestionRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
  IngestionId: string | undefined;
}
export declare const IngestionErrorType: {
  readonly ACCOUNT_CAPACITY_LIMIT_EXCEEDED: "ACCOUNT_CAPACITY_LIMIT_EXCEEDED";
  readonly CONNECTION_FAILURE: "CONNECTION_FAILURE";
  readonly CURSOR_NOT_ENABLED: "CURSOR_NOT_ENABLED";
  readonly CUSTOMER_ERROR: "CUSTOMER_ERROR";
  readonly DATA_SET_DELETED: "DATA_SET_DELETED";
  readonly DATA_SET_NOT_SPICE: "DATA_SET_NOT_SPICE";
  readonly DATA_SET_SIZE_LIMIT_EXCEEDED: "DATA_SET_SIZE_LIMIT_EXCEEDED";
  readonly DATA_SOURCE_AUTH_FAILED: "DATA_SOURCE_AUTH_FAILED";
  readonly DATA_SOURCE_CONNECTION_FAILED: "DATA_SOURCE_CONNECTION_FAILED";
  readonly DATA_SOURCE_NOT_FOUND: "DATA_SOURCE_NOT_FOUND";
  readonly DATA_TOLERANCE_EXCEPTION: "DATA_TOLERANCE_EXCEPTION";
  readonly DUPLICATE_COLUMN_NAMES_FOUND: "DUPLICATE_COLUMN_NAMES_FOUND";
  readonly ELASTICSEARCH_CURSOR_NOT_ENABLED: "ELASTICSEARCH_CURSOR_NOT_ENABLED";
  readonly FAILURE_TO_ASSUME_ROLE: "FAILURE_TO_ASSUME_ROLE";
  readonly FAILURE_TO_PROCESS_JSON_FILE: "FAILURE_TO_PROCESS_JSON_FILE";
  readonly IAM_ROLE_NOT_AVAILABLE: "IAM_ROLE_NOT_AVAILABLE";
  readonly INGESTION_CANCELED: "INGESTION_CANCELED";
  readonly INGESTION_SUPERSEDED: "INGESTION_SUPERSEDED";
  readonly INTERNAL_SERVICE_ERROR: "INTERNAL_SERVICE_ERROR";
  readonly INVALID_DATAPREP_SYNTAX: "INVALID_DATAPREP_SYNTAX";
  readonly INVALID_DATA_SOURCE_CONFIG: "INVALID_DATA_SOURCE_CONFIG";
  readonly INVALID_DATE_FORMAT: "INVALID_DATE_FORMAT";
  readonly IOT_DATA_SET_FILE_EMPTY: "IOT_DATA_SET_FILE_EMPTY";
  readonly IOT_FILE_NOT_FOUND: "IOT_FILE_NOT_FOUND";
  readonly OAUTH_TOKEN_FAILURE: "OAUTH_TOKEN_FAILURE";
  readonly PASSWORD_AUTHENTICATION_FAILURE: "PASSWORD_AUTHENTICATION_FAILURE";
  readonly PERMISSION_DENIED: "PERMISSION_DENIED";
  readonly PERMISSION_NOT_FOUND: "PERMISSION_NOT_FOUND";
  readonly QUERY_TIMEOUT: "QUERY_TIMEOUT";
  readonly REFRESH_SUPPRESSED_BY_EDIT: "REFRESH_SUPPRESSED_BY_EDIT";
  readonly ROW_SIZE_LIMIT_EXCEEDED: "ROW_SIZE_LIMIT_EXCEEDED";
  readonly S3_FILE_INACCESSIBLE: "S3_FILE_INACCESSIBLE";
  readonly S3_MANIFEST_ERROR: "S3_MANIFEST_ERROR";
  readonly S3_UPLOADED_FILE_DELETED: "S3_UPLOADED_FILE_DELETED";
  readonly SOURCE_API_LIMIT_EXCEEDED_FAILURE: "SOURCE_API_LIMIT_EXCEEDED_FAILURE";
  readonly SOURCE_RESOURCE_LIMIT_EXCEEDED: "SOURCE_RESOURCE_LIMIT_EXCEEDED";
  readonly SPICE_TABLE_NOT_FOUND: "SPICE_TABLE_NOT_FOUND";
  readonly SQL_EXCEPTION: "SQL_EXCEPTION";
  readonly SQL_INVALID_PARAMETER_VALUE: "SQL_INVALID_PARAMETER_VALUE";
  readonly SQL_NUMERIC_OVERFLOW: "SQL_NUMERIC_OVERFLOW";
  readonly SQL_SCHEMA_MISMATCH_ERROR: "SQL_SCHEMA_MISMATCH_ERROR";
  readonly SQL_TABLE_NOT_FOUND: "SQL_TABLE_NOT_FOUND";
  readonly SSL_CERTIFICATE_VALIDATION_FAILURE: "SSL_CERTIFICATE_VALIDATION_FAILURE";
  readonly UNRESOLVABLE_HOST: "UNRESOLVABLE_HOST";
  readonly UNROUTABLE_HOST: "UNROUTABLE_HOST";
};
export type IngestionErrorType =
  (typeof IngestionErrorType)[keyof typeof IngestionErrorType];
export interface ErrorInfo {
  Type?: IngestionErrorType;
  Message?: string;
}
export interface QueueInfo {
  WaitingOnIngestion: string | undefined;
  QueuedIngestion: string | undefined;
}
export declare const IngestionRequestSource: {
  readonly MANUAL: "MANUAL";
  readonly SCHEDULED: "SCHEDULED";
};
export type IngestionRequestSource =
  (typeof IngestionRequestSource)[keyof typeof IngestionRequestSource];
export declare const IngestionRequestType: {
  readonly EDIT: "EDIT";
  readonly FULL_REFRESH: "FULL_REFRESH";
  readonly INCREMENTAL_REFRESH: "INCREMENTAL_REFRESH";
  readonly INITIAL_INGESTION: "INITIAL_INGESTION";
};
export type IngestionRequestType =
  (typeof IngestionRequestType)[keyof typeof IngestionRequestType];
export interface RowInfo {
  RowsIngested?: number;
  RowsDropped?: number;
  TotalRowsInDataset?: number;
}
export interface Ingestion {
  Arn: string | undefined;
  IngestionId?: string;
  IngestionStatus: IngestionStatus | undefined;
  ErrorInfo?: ErrorInfo;
  RowInfo?: RowInfo;
  QueueInfo?: QueueInfo;
  CreatedTime: Date | undefined;
  IngestionTimeInSeconds?: number;
  IngestionSizeInBytes?: number;
  RequestSource?: IngestionRequestSource;
  RequestType?: IngestionRequestType;
}
export interface DescribeIngestionResponse {
  Ingestion?: Ingestion;
  RequestId?: string;
  Status?: number;
}
export interface DescribeIpRestrictionRequest {
  AwsAccountId: string | undefined;
}
export interface DescribeIpRestrictionResponse {
  AwsAccountId?: string;
  IpRestrictionRuleMap?: Record<string, string>;
  VpcIdRestrictionRuleMap?: Record<string, string>;
  VpcEndpointIdRestrictionRuleMap?: Record<string, string>;
  Enabled?: boolean;
  RequestId?: string;
  Status?: number;
}
export interface DescribeNamespaceRequest {
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export declare const NamespaceErrorType: {
  readonly INTERNAL_SERVICE_ERROR: "INTERNAL_SERVICE_ERROR";
  readonly PERMISSION_DENIED: "PERMISSION_DENIED";
};
export type NamespaceErrorType =
  (typeof NamespaceErrorType)[keyof typeof NamespaceErrorType];
export interface NamespaceError {
  Type?: NamespaceErrorType;
  Message?: string;
}
export interface NamespaceInfoV2 {
  Name?: string;
  Arn?: string;
  CapacityRegion?: string;
  CreationStatus?: NamespaceStatus;
  IdentityStore?: IdentityStore;
  NamespaceError?: NamespaceError;
}
export interface DescribeNamespaceResponse {
  Namespace?: NamespaceInfoV2;
  RequestId?: string;
  Status?: number;
}
export interface DescribeRefreshScheduleRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
  ScheduleId: string | undefined;
}
export interface DescribeRefreshScheduleResponse {
  RefreshSchedule?: RefreshSchedule;
  Status?: number;
  RequestId?: string;
  Arn?: string;
}
export interface DescribeRoleCustomPermissionRequest {
  Role: Role | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DescribeRoleCustomPermissionResponse {
  CustomPermissionsName?: string;
  RequestId?: string;
  Status?: number;
}
export interface DescribeTemplateRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  VersionNumber?: number;
  AliasName?: string;
}
export declare const TemplateErrorType: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly DATA_SET_NOT_FOUND: "DATA_SET_NOT_FOUND";
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly SOURCE_NOT_FOUND: "SOURCE_NOT_FOUND";
};
export type TemplateErrorType =
  (typeof TemplateErrorType)[keyof typeof TemplateErrorType];
export interface TemplateError {
  Type?: TemplateErrorType;
  Message?: string;
  ViolatedEntities?: Entity[];
}
export interface TemplateVersion {
  CreatedTime?: Date;
  Errors?: TemplateError[];
  VersionNumber?: number;
  Status?: ResourceStatus;
  DataSetConfigurations?: DataSetConfiguration[];
  Description?: string;
  SourceEntityArn?: string;
  ThemeArn?: string;
  Sheets?: Sheet[];
}
export interface Template {
  Arn?: string;
  Name?: string;
  Version?: TemplateVersion;
  TemplateId?: string;
  LastUpdatedTime?: Date;
  CreatedTime?: Date;
}
export interface DescribeTemplateResponse {
  Template?: Template;
  Status?: number;
  RequestId?: string;
}
export interface DescribeTemplateAliasRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  AliasName: string | undefined;
}
export interface DescribeTemplateAliasResponse {
  TemplateAlias?: TemplateAlias;
  Status?: number;
  RequestId?: string;
}
export interface DescribeTemplateDefinitionRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  VersionNumber?: number;
  AliasName?: string;
}
export interface DescribeTemplateDefinitionResponse {
  Name?: string;
  TemplateId?: string;
  Errors?: TemplateError[];
  ResourceStatus?: ResourceStatus;
  ThemeArn?: string;
  Definition?: TemplateVersionDefinition;
  Status?: number;
  RequestId?: string;
}
export interface DescribeTemplatePermissionsRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
}
export interface DescribeTemplatePermissionsResponse {
  TemplateId?: string;
  TemplateArn?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  Status?: number;
}
export interface DescribeThemeRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  VersionNumber?: number;
  AliasName?: string;
}
export declare const ThemeType: {
  readonly ALL: "ALL";
  readonly CUSTOM: "CUSTOM";
  readonly QUICKSIGHT: "QUICKSIGHT";
};
export type ThemeType = (typeof ThemeType)[keyof typeof ThemeType];
export declare const ThemeErrorType: {
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
};
export type ThemeErrorType =
  (typeof ThemeErrorType)[keyof typeof ThemeErrorType];
export interface ThemeError {
  Type?: ThemeErrorType;
  Message?: string;
}
export interface ThemeVersion {
  VersionNumber?: number;
  Arn?: string;
  Description?: string;
  BaseThemeId?: string;
  CreatedTime?: Date;
  Configuration?: ThemeConfiguration;
  Errors?: ThemeError[];
  Status?: ResourceStatus;
}
export interface Theme {
  Arn?: string;
  Name?: string;
  ThemeId?: string;
  Version?: ThemeVersion;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  Type?: ThemeType;
}
export interface DescribeThemeResponse {
  Theme?: Theme;
  Status?: number;
  RequestId?: string;
}
export interface DescribeThemeAliasRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  AliasName: string | undefined;
}
export interface DescribeThemeAliasResponse {
  ThemeAlias?: ThemeAlias;
  Status?: number;
  RequestId?: string;
}
export interface DescribeThemePermissionsRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
}
export interface DescribeThemePermissionsResponse {
  ThemeId?: string;
  ThemeArn?: string;
  Permissions?: ResourcePermission[];
  RequestId?: string;
  Status?: number;
}
export interface DescribeTopicRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
}
export interface DescribeTopicResponse {
  Arn?: string;
  TopicId?: string;
  Topic?: TopicDetails;
  RequestId?: string;
  Status?: number;
}
export interface DescribeTopicPermissionsRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
}
export interface DescribeTopicPermissionsResponse {
  TopicId?: string;
  TopicArn?: string;
  Permissions?: ResourcePermission[];
  Status?: number;
  RequestId?: string;
}
export interface DescribeTopicRefreshRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  RefreshId: string | undefined;
}
export declare const TopicRefreshStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly INITIALIZED: "INITIALIZED";
  readonly RUNNING: "RUNNING";
};
export type TopicRefreshStatus =
  (typeof TopicRefreshStatus)[keyof typeof TopicRefreshStatus];
export interface TopicRefreshDetails {
  RefreshArn?: string;
  RefreshId?: string;
  RefreshStatus?: TopicRefreshStatus;
}
export interface DescribeTopicRefreshResponse {
  RefreshDetails?: TopicRefreshDetails;
  RequestId?: string;
  Status?: number;
}
export interface DescribeTopicRefreshScheduleRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  DatasetId: string | undefined;
}
export interface DescribeTopicRefreshScheduleResponse {
  TopicId?: string;
  TopicArn?: string;
  DatasetArn?: string;
  RefreshSchedule?: TopicRefreshSchedule;
  Status?: number;
  RequestId?: string;
}
export interface DescribeUserRequest {
  UserName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export declare const IdentityType: {
  readonly IAM: "IAM";
  readonly IAM_IDENTITY_CENTER: "IAM_IDENTITY_CENTER";
  readonly QUICKSIGHT: "QUICKSIGHT";
};
export type IdentityType = (typeof IdentityType)[keyof typeof IdentityType];
export declare const UserRole: {
  readonly ADMIN: "ADMIN";
  readonly AUTHOR: "AUTHOR";
  readonly READER: "READER";
  readonly RESTRICTED_AUTHOR: "RESTRICTED_AUTHOR";
  readonly RESTRICTED_READER: "RESTRICTED_READER";
};
export type UserRole = (typeof UserRole)[keyof typeof UserRole];
export interface User {
  Arn?: string;
  UserName?: string;
  Email?: string;
  Role?: UserRole;
  IdentityType?: IdentityType;
  Active?: boolean;
  PrincipalId?: string;
  CustomPermissionsName?: string;
  ExternalLoginFederationProviderType?: string;
  ExternalLoginFederationProviderUrl?: string;
  ExternalLoginId?: string;
}
export interface DescribeUserResponse {
  User?: User;
  RequestId?: string;
  Status?: number;
}
export interface DescribeVPCConnectionRequest {
  AwsAccountId: string | undefined;
  VPCConnectionId: string | undefined;
}
export declare const NetworkInterfaceStatus: {
  readonly ATTACHMENT_FAILED_ROLLBACK_FAILED: "ATTACHMENT_FAILED_ROLLBACK_FAILED";
  readonly AVAILABLE: "AVAILABLE";
  readonly CREATING: "CREATING";
  readonly CREATION_FAILED: "CREATION_FAILED";
  readonly DELETED: "DELETED";
  readonly DELETING: "DELETING";
  readonly DELETION_FAILED: "DELETION_FAILED";
  readonly DELETION_SCHEDULED: "DELETION_SCHEDULED";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATING: "UPDATING";
};
export type NetworkInterfaceStatus =
  (typeof NetworkInterfaceStatus)[keyof typeof NetworkInterfaceStatus];
export interface NetworkInterface {
  SubnetId?: string;
  AvailabilityZone?: string;
  ErrorMessage?: string;
  Status?: NetworkInterfaceStatus;
  NetworkInterfaceId?: string;
}
export interface VPCConnection {
  VPCConnectionId?: string;
  Arn?: string;
  Name?: string;
  VPCId?: string;
  SecurityGroupIds?: string[];
  DnsResolvers?: string[];
  Status?: VPCConnectionResourceStatus;
  AvailabilityStatus?: VPCConnectionAvailabilityStatus;
  NetworkInterfaces?: NetworkInterface[];
  RoleArn?: string;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
}
export interface DescribeVPCConnectionResponse {
  VPCConnection?: VPCConnection;
  RequestId?: string;
  Status?: number;
}
export declare class DomainNotWhitelistedException extends __BaseException {
  readonly name: "DomainNotWhitelistedException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<DomainNotWhitelistedException, __BaseException>
  );
}
export declare const EmbeddingIdentityType: {
  readonly ANONYMOUS: "ANONYMOUS";
  readonly IAM: "IAM";
  readonly QUICKSIGHT: "QUICKSIGHT";
};
export type EmbeddingIdentityType =
  (typeof EmbeddingIdentityType)[keyof typeof EmbeddingIdentityType];
export declare const FolderFilterAttribute: {
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly FOLDER_NAME: "FOLDER_NAME";
  readonly PARENT_FOLDER_ARN: "PARENT_FOLDER_ARN";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type FolderFilterAttribute =
  (typeof FolderFilterAttribute)[keyof typeof FolderFilterAttribute];
export interface MemberIdArnPair {
  MemberId?: string;
  MemberArn?: string;
}
export interface FolderSearchFilter {
  Operator?: FilterOperator;
  Name?: FolderFilterAttribute;
  Value?: string;
}
export interface FolderSummary {
  Arn?: string;
  FolderId?: string;
  Name?: string;
  FolderType?: FolderType;
  CreatedTime?: Date;
  LastUpdatedTime?: Date;
  SharingModel?: SharingModel;
}
export interface SessionTag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface GenerateEmbedUrlForAnonymousUserRequest {
  AwsAccountId: string | undefined;
  SessionLifetimeInMinutes?: number;
  Namespace: string | undefined;
  SessionTags?: SessionTag[];
  AuthorizedResourceArns: string[] | undefined;
  ExperienceConfiguration:
    | AnonymousUserEmbeddingExperienceConfiguration
    | undefined;
  AllowedDomains?: string[];
}
export interface GenerateEmbedUrlForAnonymousUserResponse {
  EmbedUrl: string | undefined;
  Status: number | undefined;
  RequestId: string | undefined;
  AnonymousUserArn: string | undefined;
}
export declare class SessionLifetimeInMinutesInvalidException extends __BaseException {
  readonly name: "SessionLifetimeInMinutesInvalidException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<
      SessionLifetimeInMinutesInvalidException,
      __BaseException
    >
  );
}
export declare class UnsupportedPricingPlanException extends __BaseException {
  readonly name: "UnsupportedPricingPlanException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<
      UnsupportedPricingPlanException,
      __BaseException
    >
  );
}
export interface StatePersistenceConfigurations {
  Enabled: boolean | undefined;
}
export interface RegisteredUserDashboardFeatureConfigurations {
  StatePersistence?: StatePersistenceConfigurations;
  Bookmarks?: BookmarksConfigurations;
}
export interface RegisteredUserDashboardEmbeddingConfiguration {
  InitialDashboardId: string | undefined;
  FeatureConfigurations?: RegisteredUserDashboardFeatureConfigurations;
}
export interface RegisteredUserDashboardVisualEmbeddingConfiguration {
  InitialDashboardVisualId: DashboardVisualId | undefined;
}
export interface RegisteredUserQSearchBarEmbeddingConfiguration {
  InitialTopicId?: string;
}
export interface RegisteredUserConsoleFeatureConfigurations {
  StatePersistence?: StatePersistenceConfigurations;
}
export interface RegisteredUserQuickSightConsoleEmbeddingConfiguration {
  InitialPath?: string;
  FeatureConfigurations?: RegisteredUserConsoleFeatureConfigurations;
}
export interface RegisteredUserEmbeddingExperienceConfiguration {
  Dashboard?: RegisteredUserDashboardEmbeddingConfiguration;
  QuickSightConsole?: RegisteredUserQuickSightConsoleEmbeddingConfiguration;
  QSearchBar?: RegisteredUserQSearchBarEmbeddingConfiguration;
  DashboardVisual?: RegisteredUserDashboardVisualEmbeddingConfiguration;
}
export interface GenerateEmbedUrlForRegisteredUserRequest {
  AwsAccountId: string | undefined;
  SessionLifetimeInMinutes?: number;
  UserArn: string | undefined;
  ExperienceConfiguration:
    | RegisteredUserEmbeddingExperienceConfiguration
    | undefined;
  AllowedDomains?: string[];
}
export interface GenerateEmbedUrlForRegisteredUserResponse {
  EmbedUrl: string | undefined;
  Status: number | undefined;
  RequestId: string | undefined;
}
export declare class QuickSightUserNotFoundException extends __BaseException {
  readonly name: "QuickSightUserNotFoundException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<
      QuickSightUserNotFoundException,
      __BaseException
    >
  );
}
export interface GetDashboardEmbedUrlRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  IdentityType: EmbeddingIdentityType | undefined;
  SessionLifetimeInMinutes?: number;
  UndoRedoDisabled?: boolean;
  ResetDisabled?: boolean;
  StatePersistenceEnabled?: boolean;
  UserArn?: string;
  Namespace?: string;
  AdditionalDashboardIds?: string[];
}
export interface GetDashboardEmbedUrlResponse {
  EmbedUrl?: string;
  Status?: number;
  RequestId?: string;
}
export declare class IdentityTypeNotSupportedException extends __BaseException {
  readonly name: "IdentityTypeNotSupportedException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<
      IdentityTypeNotSupportedException,
      __BaseException
    >
  );
}
export interface GetSessionEmbedUrlRequest {
  AwsAccountId: string | undefined;
  EntryPoint?: string;
  SessionLifetimeInMinutes?: number;
  UserArn?: string;
}
export interface GetSessionEmbedUrlResponse {
  EmbedUrl?: string;
  Status?: number;
  RequestId?: string;
}
export declare const GroupFilterAttribute: {
  readonly GROUP_NAME: "GROUP_NAME";
};
export type GroupFilterAttribute =
  (typeof GroupFilterAttribute)[keyof typeof GroupFilterAttribute];
export declare const GroupFilterOperator: {
  readonly StartsWith: "StartsWith";
};
export type GroupFilterOperator =
  (typeof GroupFilterOperator)[keyof typeof GroupFilterOperator];
export interface GroupSearchFilter {
  Operator: GroupFilterOperator | undefined;
  Name: GroupFilterAttribute | undefined;
  Value: string | undefined;
}
export interface IAMPolicyAssignmentSummary {
  AssignmentName?: string;
  AssignmentStatus?: AssignmentStatus;
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  RequestId?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface ListAnalysesRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAnalysesResponse {
  AnalysisSummaryList?: AnalysisSummary[];
  NextToken?: string;
  Status?: number;
  RequestId?: string;
}
export interface ListAssetBundleExportJobsRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAssetBundleExportJobsResponse {
  AssetBundleExportJobSummaryList?: AssetBundleExportJobSummary[];
  NextToken?: string;
  RequestId?: string;
  Status?: number;
}
export interface ListAssetBundleImportJobsRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAssetBundleImportJobsResponse {
  AssetBundleImportJobSummaryList?: AssetBundleImportJobSummary[];
  NextToken?: string;
  RequestId?: string;
  Status?: number;
}
export interface ListDashboardsRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDashboardsResponse {
  DashboardSummaryList?: DashboardSummary[];
  NextToken?: string;
  Status?: number;
  RequestId?: string;
}
export interface ListDashboardVersionsRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDashboardVersionsResponse {
  DashboardVersionSummaryList?: DashboardVersionSummary[];
  NextToken?: string;
  Status?: number;
  RequestId?: string;
}
export interface ListDataSetsRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDataSetsResponse {
  DataSetSummaries?: DataSetSummary[];
  NextToken?: string;
  RequestId?: string;
  Status?: number;
}
export interface ListDataSourcesRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDataSourcesResponse {
  DataSources?: DataSource[];
  NextToken?: string;
  RequestId?: string;
  Status?: number;
}
export interface ListFolderMembersRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFolderMembersResponse {
  Status?: number;
  FolderMemberList?: MemberIdArnPair[];
  NextToken?: string;
  RequestId?: string;
}
export interface ListFoldersRequest {
  AwsAccountId: string | undefined;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListFoldersResponse {
  Status?: number;
  FolderSummaryList?: FolderSummary[];
  NextToken?: string;
  RequestId?: string;
}
export interface ListGroupMembershipsRequest {
  GroupName: string | undefined;
  NextToken?: string;
  MaxResults?: number;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface ListGroupMembershipsResponse {
  GroupMemberList?: GroupMember[];
  NextToken?: string;
  RequestId?: string;
  Status?: number;
}
export declare const SemanticTypeFilterSensitiveLog: (obj: SemanticType) => any;
export declare const TopicCalculatedFieldFilterSensitiveLog: (
  obj: TopicCalculatedField
) => any;
export declare const TopicColumnFilterSensitiveLog: (obj: TopicColumn) => any;
export declare const TopicCategoryFilterConstantFilterSensitiveLog: (
  obj: TopicCategoryFilterConstant
) => any;
export declare const TopicCategoryFilterFilterSensitiveLog: (
  obj: TopicCategoryFilter
) => any;
export declare const TopicRangeFilterConstantFilterSensitiveLog: (
  obj: TopicRangeFilterConstant
) => any;
export declare const TopicDateRangeFilterFilterSensitiveLog: (
  obj: TopicDateRangeFilter
) => any;
export declare const TopicSingularFilterConstantFilterSensitiveLog: (
  obj: TopicSingularFilterConstant
) => any;
export declare const TopicNumericEqualityFilterFilterSensitiveLog: (
  obj: TopicNumericEqualityFilter
) => any;
export declare const TopicNumericRangeFilterFilterSensitiveLog: (
  obj: TopicNumericRangeFilter
) => any;
export declare const TopicRelativeDateFilterFilterSensitiveLog: (
  obj: TopicRelativeDateFilter
) => any;
export declare const TopicFilterFilterSensitiveLog: (obj: TopicFilter) => any;
export declare const DatasetMetadataFilterSensitiveLog: (
  obj: DatasetMetadata
) => any;
export declare const TopicDetailsFilterSensitiveLog: (obj: TopicDetails) => any;
export declare const CreateTopicRequestFilterSensitiveLog: (
  obj: CreateTopicRequest
) => any;
export declare const DataSetFilterSensitiveLog: (obj: DataSet) => any;
export declare const DescribeAnalysisDefinitionResponseFilterSensitiveLog: (
  obj: DescribeAnalysisDefinitionResponse
) => any;
export declare const DescribeAssetBundleExportJobResponseFilterSensitiveLog: (
  obj: DescribeAssetBundleExportJobResponse
) => any;
export declare const DescribeAssetBundleImportJobResponseFilterSensitiveLog: (
  obj: DescribeAssetBundleImportJobResponse
) => any;
export declare const DescribeDashboardDefinitionResponseFilterSensitiveLog: (
  obj: DescribeDashboardDefinitionResponse
) => any;
export declare const SnapshotConfigurationFilterSensitiveLog: (
  obj: SnapshotConfiguration
) => any;
export declare const DescribeDashboardSnapshotJobResponseFilterSensitiveLog: (
  obj: DescribeDashboardSnapshotJobResponse
) => any;
export declare const SnapshotJobResultFilterSensitiveLog: (
  obj: SnapshotJobResult
) => any;
export declare const DescribeDashboardSnapshotJobResultResponseFilterSensitiveLog: (
  obj: DescribeDashboardSnapshotJobResultResponse
) => any;
export declare const DescribeDataSetResponseFilterSensitiveLog: (
  obj: DescribeDataSetResponse
) => any;
export declare const DescribeTemplateDefinitionResponseFilterSensitiveLog: (
  obj: DescribeTemplateDefinitionResponse
) => any;
export declare const DescribeTopicResponseFilterSensitiveLog: (
  obj: DescribeTopicResponse
) => any;
export declare const SessionTagFilterSensitiveLog: (obj: SessionTag) => any;
export declare const GenerateEmbedUrlForAnonymousUserRequestFilterSensitiveLog: (
  obj: GenerateEmbedUrlForAnonymousUserRequest
) => any;
export declare const GenerateEmbedUrlForAnonymousUserResponseFilterSensitiveLog: (
  obj: GenerateEmbedUrlForAnonymousUserResponse
) => any;
export declare const GenerateEmbedUrlForRegisteredUserResponseFilterSensitiveLog: (
  obj: GenerateEmbedUrlForRegisteredUserResponse
) => any;
export declare const GetDashboardEmbedUrlResponseFilterSensitiveLog: (
  obj: GetDashboardEmbedUrlResponse
) => any;
export declare const GetSessionEmbedUrlResponseFilterSensitiveLog: (
  obj: GetSessionEmbedUrlResponse
) => any;
