import { StreamingBlobTypes } from "@smithy/types";
import {
  CdiInputSpecification,
  ChannelClass,
  ChannelEgressEndpoint,
  ChannelPipelineIdToRestart,
  ChannelState,
  ChannelSummary,
  CloudWatchAlarmTemplateComparisonOperator,
  CloudWatchAlarmTemplateGroupSummary,
  CloudWatchAlarmTemplateStatistic,
  CloudWatchAlarmTemplateSummary,
  CloudWatchAlarmTemplateTargetResourceType,
  CloudWatchAlarmTemplateTreatMissingData,
  DeviceSettingsSyncState,
  DeviceUpdateStatus,
  EventBridgeRuleTemplateEventType,
  EventBridgeRuleTemplateGroupSummary,
  EventBridgeRuleTemplateSummary,
  EventBridgeRuleTemplateTarget,
  Input,
  InputAttachment,
  InputClass,
  InputDestination,
  InputDestinationRequest,
  InputDeviceCodec,
  InputDeviceConfigurableAudioChannelPairConfig,
  InputDeviceConfiguredInput,
  InputDeviceConnectionState,
  InputDeviceHdSettings,
  InputDeviceNetworkSettings,
  InputDeviceOutputType,
  InputDeviceRequest,
  InputDeviceSettings,
  InputDeviceSummary,
  InputDeviceType,
  InputDeviceUhdSettings,
  InputSecurityGroup,
  InputSecurityGroupState,
  InputSource,
  InputSourceRequest,
  InputSourceType,
  InputSpecification,
  InputState,
  InputType,
  InputWhitelistRule,
  InputWhitelistRuleCidr,
  LogLevel,
  MaintenanceDay,
  MaintenanceStatus,
  MediaConnectFlow,
  MediaConnectFlowRequest,
  MultiplexOutputDestination,
  MultiplexProgramPipelineDetail,
  MultiplexProgramSummary,
  MultiplexState,
  MultiplexSummary,
  Offering,
  OfferingDurationUnits,
  OfferingType,
  OutputDestination,
  ReservationResourceSpecification,
  VpcOutputSettingsDescription,
} from "./models_0";
import {
  AcceptHeader,
  AccountConfiguration,
  Channel,
  ContentType,
  EncoderSettings,
  MediaResource,
  MonitorDeployment,
  Multiplex,
  MultiplexProgram,
  MultiplexProgramPacketIdentifiersMap,
  MultiplexProgramSettings,
  MultiplexSettings,
  PipelineDetail,
  RenewalSettings,
  Reservation,
  ReservationState,
  ScheduleAction,
  SignalMapStatus,
  SignalMapSummary,
  SuccessfulMonitorDeployment,
  ThumbnailDetail,
  TransferringInputDeviceSummary,
} from "./models_1";
export interface DeleteCloudWatchAlarmTemplateRequest {
  Identifier: string | undefined;
}
export interface DeleteCloudWatchAlarmTemplateGroupRequest {
  Identifier: string | undefined;
}
export interface DeleteEventBridgeRuleTemplateRequest {
  Identifier: string | undefined;
}
export interface DeleteEventBridgeRuleTemplateGroupRequest {
  Identifier: string | undefined;
}
export interface DeleteInputRequest {
  InputId: string | undefined;
}
export interface DeleteInputResponse {}
export interface DeleteInputSecurityGroupRequest {
  InputSecurityGroupId: string | undefined;
}
export interface DeleteInputSecurityGroupResponse {}
export interface DeleteMultiplexRequest {
  MultiplexId: string | undefined;
}
export interface DeleteMultiplexResponse {
  Arn?: string;
  AvailabilityZones?: string[];
  Destinations?: MultiplexOutputDestination[];
  Id?: string;
  MultiplexSettings?: MultiplexSettings;
  Name?: string;
  PipelinesRunningCount?: number;
  ProgramCount?: number;
  State?: MultiplexState;
  Tags?: Record<string, string>;
}
export interface DeleteMultiplexProgramRequest {
  MultiplexId: string | undefined;
  ProgramName: string | undefined;
}
export interface DeleteMultiplexProgramResponse {
  ChannelId?: string;
  MultiplexProgramSettings?: MultiplexProgramSettings;
  PacketIdentifiersMap?: MultiplexProgramPacketIdentifiersMap;
  PipelineDetails?: MultiplexProgramPipelineDetail[];
  ProgramName?: string;
}
export interface DeleteReservationRequest {
  ReservationId: string | undefined;
}
export interface DeleteReservationResponse {
  Arn?: string;
  Count?: number;
  CurrencyCode?: string;
  Duration?: number;
  DurationUnits?: OfferingDurationUnits;
  End?: string;
  FixedPrice?: number;
  Name?: string;
  OfferingDescription?: string;
  OfferingId?: string;
  OfferingType?: OfferingType;
  Region?: string;
  RenewalSettings?: RenewalSettings;
  ReservationId?: string;
  ResourceSpecification?: ReservationResourceSpecification;
  Start?: string;
  State?: ReservationState;
  Tags?: Record<string, string>;
  UsagePrice?: number;
}
export interface DeleteScheduleRequest {
  ChannelId: string | undefined;
}
export interface DeleteScheduleResponse {}
export interface DeleteSignalMapRequest {
  Identifier: string | undefined;
}
export interface DeleteTagsRequest {
  ResourceArn: string | undefined;
  TagKeys: string[] | undefined;
}
export interface DescribeAccountConfigurationRequest {}
export interface DescribeAccountConfigurationResponse {
  AccountConfiguration?: AccountConfiguration;
}
export interface DescribeChannelRequest {
  ChannelId: string | undefined;
}
export interface DescribeChannelResponse {
  Arn?: string;
  CdiInputSpecification?: CdiInputSpecification;
  ChannelClass?: ChannelClass;
  Destinations?: OutputDestination[];
  EgressEndpoints?: ChannelEgressEndpoint[];
  EncoderSettings?: EncoderSettings;
  Id?: string;
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  LogLevel?: LogLevel;
  Maintenance?: MaintenanceStatus;
  Name?: string;
  PipelineDetails?: PipelineDetail[];
  PipelinesRunningCount?: number;
  RoleArn?: string;
  State?: ChannelState;
  Tags?: Record<string, string>;
  Vpc?: VpcOutputSettingsDescription;
}
export interface DescribeInputRequest {
  InputId: string | undefined;
}
export interface DescribeInputResponse {
  Arn?: string;
  AttachedChannels?: string[];
  Destinations?: InputDestination[];
  Id?: string;
  InputClass?: InputClass;
  InputDevices?: InputDeviceSettings[];
  InputPartnerIds?: string[];
  InputSourceType?: InputSourceType;
  MediaConnectFlows?: MediaConnectFlow[];
  Name?: string;
  RoleArn?: string;
  SecurityGroups?: string[];
  Sources?: InputSource[];
  State?: InputState;
  Tags?: Record<string, string>;
  Type?: InputType;
}
export interface DescribeInputDeviceRequest {
  InputDeviceId: string | undefined;
}
export interface DescribeInputDeviceResponse {
  Arn?: string;
  ConnectionState?: InputDeviceConnectionState;
  DeviceSettingsSyncState?: DeviceSettingsSyncState;
  DeviceUpdateStatus?: DeviceUpdateStatus;
  HdDeviceSettings?: InputDeviceHdSettings;
  Id?: string;
  MacAddress?: string;
  Name?: string;
  NetworkSettings?: InputDeviceNetworkSettings;
  SerialNumber?: string;
  Type?: InputDeviceType;
  UhdDeviceSettings?: InputDeviceUhdSettings;
  Tags?: Record<string, string>;
  AvailabilityZone?: string;
  MedialiveInputArns?: string[];
  OutputType?: InputDeviceOutputType;
}
export interface DescribeInputDeviceThumbnailRequest {
  InputDeviceId: string | undefined;
  Accept: AcceptHeader | undefined;
}
export interface DescribeInputDeviceThumbnailResponse {
  Body?: StreamingBlobTypes;
  ContentType?: ContentType;
  ContentLength?: number;
  ETag?: string;
  LastModified?: Date;
}
export interface DescribeInputSecurityGroupRequest {
  InputSecurityGroupId: string | undefined;
}
export interface DescribeInputSecurityGroupResponse {
  Arn?: string;
  Id?: string;
  Inputs?: string[];
  State?: InputSecurityGroupState;
  Tags?: Record<string, string>;
  WhitelistRules?: InputWhitelistRule[];
}
export interface DescribeMultiplexRequest {
  MultiplexId: string | undefined;
}
export interface DescribeMultiplexResponse {
  Arn?: string;
  AvailabilityZones?: string[];
  Destinations?: MultiplexOutputDestination[];
  Id?: string;
  MultiplexSettings?: MultiplexSettings;
  Name?: string;
  PipelinesRunningCount?: number;
  ProgramCount?: number;
  State?: MultiplexState;
  Tags?: Record<string, string>;
}
export interface DescribeMultiplexProgramRequest {
  MultiplexId: string | undefined;
  ProgramName: string | undefined;
}
export interface DescribeMultiplexProgramResponse {
  ChannelId?: string;
  MultiplexProgramSettings?: MultiplexProgramSettings;
  PacketIdentifiersMap?: MultiplexProgramPacketIdentifiersMap;
  PipelineDetails?: MultiplexProgramPipelineDetail[];
  ProgramName?: string;
}
export interface DescribeOfferingRequest {
  OfferingId: string | undefined;
}
export interface DescribeOfferingResponse {
  Arn?: string;
  CurrencyCode?: string;
  Duration?: number;
  DurationUnits?: OfferingDurationUnits;
  FixedPrice?: number;
  OfferingDescription?: string;
  OfferingId?: string;
  OfferingType?: OfferingType;
  Region?: string;
  ResourceSpecification?: ReservationResourceSpecification;
  UsagePrice?: number;
}
export interface DescribeReservationRequest {
  ReservationId: string | undefined;
}
export interface DescribeReservationResponse {
  Arn?: string;
  Count?: number;
  CurrencyCode?: string;
  Duration?: number;
  DurationUnits?: OfferingDurationUnits;
  End?: string;
  FixedPrice?: number;
  Name?: string;
  OfferingDescription?: string;
  OfferingId?: string;
  OfferingType?: OfferingType;
  Region?: string;
  RenewalSettings?: RenewalSettings;
  ReservationId?: string;
  ResourceSpecification?: ReservationResourceSpecification;
  Start?: string;
  State?: ReservationState;
  Tags?: Record<string, string>;
  UsagePrice?: number;
}
export interface DescribeScheduleRequest {
  ChannelId: string | undefined;
  MaxResults?: number;
  NextToken?: string;
}
export interface DescribeScheduleResponse {
  NextToken?: string;
  ScheduleActions?: ScheduleAction[];
}
export interface DescribeThumbnailsRequest {
  ChannelId: string | undefined;
  PipelineId: string | undefined;
  ThumbnailType: string | undefined;
}
export interface DescribeThumbnailsResponse {
  ThumbnailDetails?: ThumbnailDetail[];
}
export interface GetCloudWatchAlarmTemplateRequest {
  Identifier: string | undefined;
}
export interface GetCloudWatchAlarmTemplateResponse {
  Arn?: string;
  ComparisonOperator?: CloudWatchAlarmTemplateComparisonOperator;
  CreatedAt?: Date;
  DatapointsToAlarm?: number;
  Description?: string;
  EvaluationPeriods?: number;
  GroupId?: string;
  Id?: string;
  MetricName?: string;
  ModifiedAt?: Date;
  Name?: string;
  Period?: number;
  Statistic?: CloudWatchAlarmTemplateStatistic;
  Tags?: Record<string, string>;
  TargetResourceType?: CloudWatchAlarmTemplateTargetResourceType;
  Threshold?: number;
  TreatMissingData?: CloudWatchAlarmTemplateTreatMissingData;
}
export interface GetCloudWatchAlarmTemplateGroupRequest {
  Identifier: string | undefined;
}
export interface GetCloudWatchAlarmTemplateGroupResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface GetEventBridgeRuleTemplateRequest {
  Identifier: string | undefined;
}
export interface GetEventBridgeRuleTemplateResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  EventTargets?: EventBridgeRuleTemplateTarget[];
  EventType?: EventBridgeRuleTemplateEventType;
  GroupId?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface GetEventBridgeRuleTemplateGroupRequest {
  Identifier: string | undefined;
}
export interface GetEventBridgeRuleTemplateGroupResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface GetSignalMapRequest {
  Identifier: string | undefined;
}
export interface GetSignalMapResponse {
  Arn?: string;
  CloudWatchAlarmTemplateGroupIds?: string[];
  CreatedAt?: Date;
  Description?: string;
  DiscoveryEntryPointArn?: string;
  ErrorMessage?: string;
  EventBridgeRuleTemplateGroupIds?: string[];
  FailedMediaResourceMap?: Record<string, MediaResource>;
  Id?: string;
  LastDiscoveredAt?: Date;
  LastSuccessfulMonitorDeployment?: SuccessfulMonitorDeployment;
  MediaResourceMap?: Record<string, MediaResource>;
  ModifiedAt?: Date;
  MonitorChangesPendingDeployment?: boolean;
  MonitorDeployment?: MonitorDeployment;
  Name?: string;
  Status?: SignalMapStatus;
  Tags?: Record<string, string>;
}
export interface InputDeviceMediaConnectConfigurableSettings {
  FlowArn?: string;
  RoleArn?: string;
  SecretArn?: string;
  SourceName?: string;
}
export interface InputDeviceConfigurableSettings {
  ConfiguredInput?: InputDeviceConfiguredInput;
  MaxBitrate?: number;
  LatencyMs?: number;
  Codec?: InputDeviceCodec;
  MediaconnectSettings?: InputDeviceMediaConnectConfigurableSettings;
  AudioChannelPairs?: InputDeviceConfigurableAudioChannelPairConfig[];
}
export interface ListChannelsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListChannelsResponse {
  Channels?: ChannelSummary[];
  NextToken?: string;
}
export interface ListCloudWatchAlarmTemplateGroupsRequest {
  MaxResults?: number;
  NextToken?: string;
  Scope?: string;
  SignalMapIdentifier?: string;
}
export interface ListCloudWatchAlarmTemplateGroupsResponse {
  CloudWatchAlarmTemplateGroups?: CloudWatchAlarmTemplateGroupSummary[];
  NextToken?: string;
}
export interface ListCloudWatchAlarmTemplatesRequest {
  GroupIdentifier?: string;
  MaxResults?: number;
  NextToken?: string;
  Scope?: string;
  SignalMapIdentifier?: string;
}
export interface ListCloudWatchAlarmTemplatesResponse {
  CloudWatchAlarmTemplates?: CloudWatchAlarmTemplateSummary[];
  NextToken?: string;
}
export interface ListEventBridgeRuleTemplateGroupsRequest {
  MaxResults?: number;
  NextToken?: string;
  SignalMapIdentifier?: string;
}
export interface ListEventBridgeRuleTemplateGroupsResponse {
  EventBridgeRuleTemplateGroups?: EventBridgeRuleTemplateGroupSummary[];
  NextToken?: string;
}
export interface ListEventBridgeRuleTemplatesRequest {
  GroupIdentifier?: string;
  MaxResults?: number;
  NextToken?: string;
  SignalMapIdentifier?: string;
}
export interface ListEventBridgeRuleTemplatesResponse {
  EventBridgeRuleTemplates?: EventBridgeRuleTemplateSummary[];
  NextToken?: string;
}
export interface ListInputDevicesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInputDevicesResponse {
  InputDevices?: InputDeviceSummary[];
  NextToken?: string;
}
export interface ListInputDeviceTransfersRequest {
  MaxResults?: number;
  NextToken?: string;
  TransferType: string | undefined;
}
export interface ListInputDeviceTransfersResponse {
  InputDeviceTransfers?: TransferringInputDeviceSummary[];
  NextToken?: string;
}
export interface ListInputsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInputsResponse {
  Inputs?: Input[];
  NextToken?: string;
}
export interface ListInputSecurityGroupsRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListInputSecurityGroupsResponse {
  InputSecurityGroups?: InputSecurityGroup[];
  NextToken?: string;
}
export interface ListMultiplexesRequest {
  MaxResults?: number;
  NextToken?: string;
}
export interface ListMultiplexesResponse {
  Multiplexes?: MultiplexSummary[];
  NextToken?: string;
}
export interface ListMultiplexProgramsRequest {
  MaxResults?: number;
  MultiplexId: string | undefined;
  NextToken?: string;
}
export interface ListMultiplexProgramsResponse {
  MultiplexPrograms?: MultiplexProgramSummary[];
  NextToken?: string;
}
export interface ListOfferingsRequest {
  ChannelClass?: string;
  ChannelConfiguration?: string;
  Codec?: string;
  Duration?: string;
  MaxResults?: number;
  MaximumBitrate?: string;
  MaximumFramerate?: string;
  NextToken?: string;
  Resolution?: string;
  ResourceType?: string;
  SpecialFeature?: string;
  VideoQuality?: string;
}
export interface ListOfferingsResponse {
  NextToken?: string;
  Offerings?: Offering[];
}
export interface ListReservationsRequest {
  ChannelClass?: string;
  Codec?: string;
  MaxResults?: number;
  MaximumBitrate?: string;
  MaximumFramerate?: string;
  NextToken?: string;
  Resolution?: string;
  ResourceType?: string;
  SpecialFeature?: string;
  VideoQuality?: string;
}
export interface ListReservationsResponse {
  NextToken?: string;
  Reservations?: Reservation[];
}
export interface ListSignalMapsRequest {
  CloudWatchAlarmTemplateGroupIdentifier?: string;
  EventBridgeRuleTemplateGroupIdentifier?: string;
  MaxResults?: number;
  NextToken?: string;
}
export interface ListSignalMapsResponse {
  NextToken?: string;
  SignalMaps?: SignalMapSummary[];
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string>;
}
export interface MaintenanceUpdateSettings {
  MaintenanceDay?: MaintenanceDay;
  MaintenanceScheduledDate?: string;
  MaintenanceStartTime?: string;
}
export interface PurchaseOfferingRequest {
  Count: number | undefined;
  Name?: string;
  OfferingId: string | undefined;
  RenewalSettings?: RenewalSettings;
  RequestId?: string;
  Start?: string;
  Tags?: Record<string, string>;
}
export interface PurchaseOfferingResponse {
  Reservation?: Reservation;
}
export declare const RebootInputDeviceForce: {
  readonly NO: "NO";
  readonly YES: "YES";
};
export type RebootInputDeviceForce =
  (typeof RebootInputDeviceForce)[keyof typeof RebootInputDeviceForce];
export interface RebootInputDeviceRequest {
  Force?: RebootInputDeviceForce;
  InputDeviceId: string | undefined;
}
export interface RebootInputDeviceResponse {}
export interface RejectInputDeviceTransferRequest {
  InputDeviceId: string | undefined;
}
export interface RejectInputDeviceTransferResponse {}
export interface RestartChannelPipelinesRequest {
  ChannelId: string | undefined;
  PipelineIds?: ChannelPipelineIdToRestart[];
}
export interface RestartChannelPipelinesResponse {
  Arn?: string;
  CdiInputSpecification?: CdiInputSpecification;
  ChannelClass?: ChannelClass;
  Destinations?: OutputDestination[];
  EgressEndpoints?: ChannelEgressEndpoint[];
  EncoderSettings?: EncoderSettings;
  Id?: string;
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  LogLevel?: LogLevel;
  Maintenance?: MaintenanceStatus;
  MaintenanceStatus?: string;
  Name?: string;
  PipelineDetails?: PipelineDetail[];
  PipelinesRunningCount?: number;
  RoleArn?: string;
  State?: ChannelState;
  Tags?: Record<string, string>;
  Vpc?: VpcOutputSettingsDescription;
}
export interface StartChannelRequest {
  ChannelId: string | undefined;
}
export interface StartChannelResponse {
  Arn?: string;
  CdiInputSpecification?: CdiInputSpecification;
  ChannelClass?: ChannelClass;
  Destinations?: OutputDestination[];
  EgressEndpoints?: ChannelEgressEndpoint[];
  EncoderSettings?: EncoderSettings;
  Id?: string;
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  LogLevel?: LogLevel;
  Maintenance?: MaintenanceStatus;
  Name?: string;
  PipelineDetails?: PipelineDetail[];
  PipelinesRunningCount?: number;
  RoleArn?: string;
  State?: ChannelState;
  Tags?: Record<string, string>;
  Vpc?: VpcOutputSettingsDescription;
}
export interface StartDeleteMonitorDeploymentRequest {
  Identifier: string | undefined;
}
export interface StartDeleteMonitorDeploymentResponse {
  Arn?: string;
  CloudWatchAlarmTemplateGroupIds?: string[];
  CreatedAt?: Date;
  Description?: string;
  DiscoveryEntryPointArn?: string;
  ErrorMessage?: string;
  EventBridgeRuleTemplateGroupIds?: string[];
  FailedMediaResourceMap?: Record<string, MediaResource>;
  Id?: string;
  LastDiscoveredAt?: Date;
  LastSuccessfulMonitorDeployment?: SuccessfulMonitorDeployment;
  MediaResourceMap?: Record<string, MediaResource>;
  ModifiedAt?: Date;
  MonitorChangesPendingDeployment?: boolean;
  MonitorDeployment?: MonitorDeployment;
  Name?: string;
  Status?: SignalMapStatus;
  Tags?: Record<string, string>;
}
export interface StartInputDeviceRequest {
  InputDeviceId: string | undefined;
}
export interface StartInputDeviceResponse {}
export interface StartInputDeviceMaintenanceWindowRequest {
  InputDeviceId: string | undefined;
}
export interface StartInputDeviceMaintenanceWindowResponse {}
export interface StartMonitorDeploymentRequest {
  DryRun?: boolean;
  Identifier: string | undefined;
}
export interface StartMonitorDeploymentResponse {
  Arn?: string;
  CloudWatchAlarmTemplateGroupIds?: string[];
  CreatedAt?: Date;
  Description?: string;
  DiscoveryEntryPointArn?: string;
  ErrorMessage?: string;
  EventBridgeRuleTemplateGroupIds?: string[];
  FailedMediaResourceMap?: Record<string, MediaResource>;
  Id?: string;
  LastDiscoveredAt?: Date;
  LastSuccessfulMonitorDeployment?: SuccessfulMonitorDeployment;
  MediaResourceMap?: Record<string, MediaResource>;
  ModifiedAt?: Date;
  MonitorChangesPendingDeployment?: boolean;
  MonitorDeployment?: MonitorDeployment;
  Name?: string;
  Status?: SignalMapStatus;
  Tags?: Record<string, string>;
}
export interface StartMultiplexRequest {
  MultiplexId: string | undefined;
}
export interface StartMultiplexResponse {
  Arn?: string;
  AvailabilityZones?: string[];
  Destinations?: MultiplexOutputDestination[];
  Id?: string;
  MultiplexSettings?: MultiplexSettings;
  Name?: string;
  PipelinesRunningCount?: number;
  ProgramCount?: number;
  State?: MultiplexState;
  Tags?: Record<string, string>;
}
export interface StartUpdateSignalMapRequest {
  CloudWatchAlarmTemplateGroupIdentifiers?: string[];
  Description?: string;
  DiscoveryEntryPointArn?: string;
  EventBridgeRuleTemplateGroupIdentifiers?: string[];
  ForceRediscovery?: boolean;
  Identifier: string | undefined;
  Name?: string;
}
export interface StartUpdateSignalMapResponse {
  Arn?: string;
  CloudWatchAlarmTemplateGroupIds?: string[];
  CreatedAt?: Date;
  Description?: string;
  DiscoveryEntryPointArn?: string;
  ErrorMessage?: string;
  EventBridgeRuleTemplateGroupIds?: string[];
  FailedMediaResourceMap?: Record<string, MediaResource>;
  Id?: string;
  LastDiscoveredAt?: Date;
  LastSuccessfulMonitorDeployment?: SuccessfulMonitorDeployment;
  MediaResourceMap?: Record<string, MediaResource>;
  ModifiedAt?: Date;
  MonitorChangesPendingDeployment?: boolean;
  MonitorDeployment?: MonitorDeployment;
  Name?: string;
  Status?: SignalMapStatus;
  Tags?: Record<string, string>;
}
export interface StopChannelRequest {
  ChannelId: string | undefined;
}
export interface StopChannelResponse {
  Arn?: string;
  CdiInputSpecification?: CdiInputSpecification;
  ChannelClass?: ChannelClass;
  Destinations?: OutputDestination[];
  EgressEndpoints?: ChannelEgressEndpoint[];
  EncoderSettings?: EncoderSettings;
  Id?: string;
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  LogLevel?: LogLevel;
  Maintenance?: MaintenanceStatus;
  Name?: string;
  PipelineDetails?: PipelineDetail[];
  PipelinesRunningCount?: number;
  RoleArn?: string;
  State?: ChannelState;
  Tags?: Record<string, string>;
  Vpc?: VpcOutputSettingsDescription;
}
export interface StopInputDeviceRequest {
  InputDeviceId: string | undefined;
}
export interface StopInputDeviceResponse {}
export interface StopMultiplexRequest {
  MultiplexId: string | undefined;
}
export interface StopMultiplexResponse {
  Arn?: string;
  AvailabilityZones?: string[];
  Destinations?: MultiplexOutputDestination[];
  Id?: string;
  MultiplexSettings?: MultiplexSettings;
  Name?: string;
  PipelinesRunningCount?: number;
  ProgramCount?: number;
  State?: MultiplexState;
  Tags?: Record<string, string>;
}
export interface TransferInputDeviceRequest {
  InputDeviceId: string | undefined;
  TargetCustomerId?: string;
  TargetRegion?: string;
  TransferMessage?: string;
}
export interface TransferInputDeviceResponse {}
export interface UpdateAccountConfigurationRequest {
  AccountConfiguration?: AccountConfiguration;
}
export interface UpdateAccountConfigurationResponse {
  AccountConfiguration?: AccountConfiguration;
}
export interface UpdateChannelRequest {
  CdiInputSpecification?: CdiInputSpecification;
  ChannelId: string | undefined;
  Destinations?: OutputDestination[];
  EncoderSettings?: EncoderSettings;
  InputAttachments?: InputAttachment[];
  InputSpecification?: InputSpecification;
  LogLevel?: LogLevel;
  Maintenance?: MaintenanceUpdateSettings;
  Name?: string;
  RoleArn?: string;
}
export interface UpdateChannelResponse {
  Channel?: Channel;
}
export interface UpdateChannelClassRequest {
  ChannelClass: ChannelClass | undefined;
  ChannelId: string | undefined;
  Destinations?: OutputDestination[];
}
export interface UpdateChannelClassResponse {
  Channel?: Channel;
}
export interface UpdateCloudWatchAlarmTemplateRequest {
  ComparisonOperator?: CloudWatchAlarmTemplateComparisonOperator;
  DatapointsToAlarm?: number;
  Description?: string;
  EvaluationPeriods?: number;
  GroupIdentifier?: string;
  Identifier: string | undefined;
  MetricName?: string;
  Name?: string;
  Period?: number;
  Statistic?: CloudWatchAlarmTemplateStatistic;
  TargetResourceType?: CloudWatchAlarmTemplateTargetResourceType;
  Threshold?: number;
  TreatMissingData?: CloudWatchAlarmTemplateTreatMissingData;
}
export interface UpdateCloudWatchAlarmTemplateResponse {
  Arn?: string;
  ComparisonOperator?: CloudWatchAlarmTemplateComparisonOperator;
  CreatedAt?: Date;
  DatapointsToAlarm?: number;
  Description?: string;
  EvaluationPeriods?: number;
  GroupId?: string;
  Id?: string;
  MetricName?: string;
  ModifiedAt?: Date;
  Name?: string;
  Period?: number;
  Statistic?: CloudWatchAlarmTemplateStatistic;
  Tags?: Record<string, string>;
  TargetResourceType?: CloudWatchAlarmTemplateTargetResourceType;
  Threshold?: number;
  TreatMissingData?: CloudWatchAlarmTemplateTreatMissingData;
}
export interface UpdateCloudWatchAlarmTemplateGroupRequest {
  Description?: string;
  Identifier: string | undefined;
}
export interface UpdateCloudWatchAlarmTemplateGroupResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface UpdateEventBridgeRuleTemplateRequest {
  Description?: string;
  EventTargets?: EventBridgeRuleTemplateTarget[];
  EventType?: EventBridgeRuleTemplateEventType;
  GroupIdentifier?: string;
  Identifier: string | undefined;
  Name?: string;
}
export interface UpdateEventBridgeRuleTemplateResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  EventTargets?: EventBridgeRuleTemplateTarget[];
  EventType?: EventBridgeRuleTemplateEventType;
  GroupId?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface UpdateEventBridgeRuleTemplateGroupRequest {
  Description?: string;
  Identifier: string | undefined;
}
export interface UpdateEventBridgeRuleTemplateGroupResponse {
  Arn?: string;
  CreatedAt?: Date;
  Description?: string;
  Id?: string;
  ModifiedAt?: Date;
  Name?: string;
  Tags?: Record<string, string>;
}
export interface UpdateInputRequest {
  Destinations?: InputDestinationRequest[];
  InputDevices?: InputDeviceRequest[];
  InputId: string | undefined;
  InputSecurityGroups?: string[];
  MediaConnectFlows?: MediaConnectFlowRequest[];
  Name?: string;
  RoleArn?: string;
  Sources?: InputSourceRequest[];
}
export interface UpdateInputResponse {
  Input?: Input;
}
export interface UpdateInputDeviceRequest {
  HdDeviceSettings?: InputDeviceConfigurableSettings;
  InputDeviceId: string | undefined;
  Name?: string;
  UhdDeviceSettings?: InputDeviceConfigurableSettings;
  AvailabilityZone?: string;
}
export interface UpdateInputDeviceResponse {
  Arn?: string;
  ConnectionState?: InputDeviceConnectionState;
  DeviceSettingsSyncState?: DeviceSettingsSyncState;
  DeviceUpdateStatus?: DeviceUpdateStatus;
  HdDeviceSettings?: InputDeviceHdSettings;
  Id?: string;
  MacAddress?: string;
  Name?: string;
  NetworkSettings?: InputDeviceNetworkSettings;
  SerialNumber?: string;
  Type?: InputDeviceType;
  UhdDeviceSettings?: InputDeviceUhdSettings;
  Tags?: Record<string, string>;
  AvailabilityZone?: string;
  MedialiveInputArns?: string[];
  OutputType?: InputDeviceOutputType;
}
export interface UpdateInputSecurityGroupRequest {
  InputSecurityGroupId: string | undefined;
  Tags?: Record<string, string>;
  WhitelistRules?: InputWhitelistRuleCidr[];
}
export interface UpdateInputSecurityGroupResponse {
  SecurityGroup?: InputSecurityGroup;
}
export interface UpdateMultiplexRequest {
  MultiplexId: string | undefined;
  MultiplexSettings?: MultiplexSettings;
  Name?: string;
}
export interface UpdateMultiplexResponse {
  Multiplex?: Multiplex;
}
export interface UpdateMultiplexProgramRequest {
  MultiplexId: string | undefined;
  MultiplexProgramSettings?: MultiplexProgramSettings;
  ProgramName: string | undefined;
}
export interface UpdateMultiplexProgramResponse {
  MultiplexProgram?: MultiplexProgram;
}
export interface UpdateReservationRequest {
  Name?: string;
  RenewalSettings?: RenewalSettings;
  ReservationId: string | undefined;
}
export interface UpdateReservationResponse {
  Reservation?: Reservation;
}
export declare const DescribeInputDeviceThumbnailResponseFilterSensitiveLog: (
  obj: DescribeInputDeviceThumbnailResponse
) => any;
