/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { CdnManagementClient, } from "@azure/arm-cdn";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified subscription and resource group
 *
 * @summary Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified subscription and resource group
 * x-ms-original-file: specification/cdn/resource-manager/Microsoft.Cdn/stable/2024-02-01/examples/WafPatchPolicy.json
 */
function createsSpecificPolicy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["CDN_SUBSCRIPTION_ID"] || "subid";
        const resourceGroupName = process.env["CDN_RESOURCE_GROUP"] || "rg1";
        const policyName = "MicrosoftCdnWafPolicy";
        const cdnWebApplicationFirewallPolicyPatchParameters = { tags: { foo: "bar" } };
        const credential = new DefaultAzureCredential();
        const client = new CdnManagementClient(credential, subscriptionId);
        const result = yield client.policies.beginUpdateAndWait(resourceGroupName, policyName, cdnWebApplicationFirewallPolicyPatchParameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createsSpecificPolicy();
    });
}
main().catch(console.error);
//# sourceMappingURL=policiesUpdateSample.js.map