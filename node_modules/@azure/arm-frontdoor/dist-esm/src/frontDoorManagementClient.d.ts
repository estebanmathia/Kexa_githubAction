import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Policies, ManagedRuleSets, FrontDoorNameAvailability, FrontDoorNameAvailabilityWithSubscription, FrontDoors, FrontendEndpoints, Endpoints, RulesEngines, NetworkExperimentProfiles, PreconfiguredEndpoints, Experiments, Reports } from "./operationsInterfaces";
import { FrontDoorManagementClientOptionalParams } from "./models";
export declare class FrontDoorManagementClient extends coreClient.ServiceClient {
    $host: string;
    subscriptionId?: string;
    /**
     * Initializes a new instance of the FrontDoorManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The subscription credentials which uniquely identify the Microsoft Azure
     *                       subscription. The subscription ID forms part of the URI for every service call.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: FrontDoorManagementClientOptionalParams);
    constructor(credentials: coreAuth.TokenCredential, options?: FrontDoorManagementClientOptionalParams);
    policies: Policies;
    managedRuleSets: ManagedRuleSets;
    frontDoorNameAvailability: FrontDoorNameAvailability;
    frontDoorNameAvailabilityWithSubscription: FrontDoorNameAvailabilityWithSubscription;
    frontDoors: FrontDoors;
    frontendEndpoints: FrontendEndpoints;
    endpoints: Endpoints;
    rulesEngines: RulesEngines;
    networkExperimentProfiles: NetworkExperimentProfiles;
    preconfiguredEndpoints: PreconfiguredEndpoints;
    experiments: Experiments;
    reports: Reports;
}
//# sourceMappingURL=frontDoorManagementClient.d.ts.map